{
  "openapi": "3.1.0",
  "info": {
    "title": "LangSmith",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/runs/{run_id}": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "Read Run",
        "description": "Get a specific run.",
        "operationId": "read_run_api_v1_runs__run_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session Id"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Time"
            }
          },
          {
            "name": "exclude_s3_stored_attributes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Exclude S3 Stored Attributes"
            }
          },
          {
            "name": "exclude_serialized",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Exclude Serialized"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "run"
        ],
        "summary": "Update Run",
        "description": "Update a run.",
        "operationId": "update_run_api_v1_runs__run_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "RunSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "inputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Preview"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "outputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Preview"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "prompt_token_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Token Details"
          },
          "completion_token_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Token Details"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "prompt_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost Details"
          },
          "completion_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost Details"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "app_path": {
            "type": "string",
            "title": "App Path"
          },
          "last_queued_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Queued At"
          },
          "in_dataset": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Dataset"
          },
          "share_token": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Token"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "trace_first_received_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace First Received At"
          },
          "ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Seconds"
          },
          "trace_upgrade": {
            "type": "boolean",
            "title": "Trace Upgrade",
            "default": false
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "thread_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status",
          "session_id",
          "app_path"
        ],
        "title": "RunSchema",
        "description": "Run schema."
      },
      "RunTypeEnum": {
        "type": "string",
        "enum": [
          "tool",
          "chain",
          "llm",
          "retriever",
          "embedding",
          "prompt",
          "parser"
        ],
        "title": "RunTypeEnum",
        "description": "Enum for run types."
      },
      "TraceTier": {
        "type": "string",
        "enum": [
          "longlived",
          "shortlived"
        ],
        "title": "TraceTier"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  },
  "definitions": {
    "alerts.AlertAction": {
      "type": "object",
      "required": [
        "config",
        "target"
      ],
      "properties": {
        "alert_rule_id": {
          "type": "string"
        },
        "config": {
          "type": "object"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "target": {
          "type": "string",
          "enum": [
            "pagerduty",
            "webhook"
          ]
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "alerts.AlertActionBase": {
      "type": "object",
      "required": [
        "config",
        "target"
      ],
      "properties": {
        "alert_rule_id": {
          "type": "string"
        },
        "config": {
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "target": {
          "type": "string",
          "enum": [
            "pagerduty",
            "webhook"
          ]
        }
      }
    },
    "alerts.AlertRule": {
      "type": "object",
      "required": [
        "aggregation",
        "attribute",
        "description",
        "name",
        "operator",
        "type",
        "window_minutes"
      ],
      "properties": {
        "aggregation": {
          "type": "string",
          "enum": [
            "avg",
            "sum",
            "pct"
          ]
        },
        "attribute": {
          "type": "string",
          "enum": [
            "latency",
            "error_count",
            "feedback_score",
            "run_latency",
            "run_count"
          ]
        },
        "created_at": {
          "type": "string"
        },
        "denominator_filter": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "enum": [
            "gte",
            "lte"
          ]
        },
        "threshold": {
          "type": "number"
        },
        "threshold_multiplier": {
          "type": "number"
        },
        "threshold_window_minutes": {
          "type": "integer",
          "maximum": 60
        },
        "type": {
          "type": "string",
          "enum": [
            "threshold",
            "change"
          ]
        },
        "updated_at": {
          "type": "string"
        },
        "window_minutes": {
          "description": "max 15 minutes for alert rule",
          "type": "integer",
          "maximum": 15
        }
      }
    },
    "alerts.AlertRuleBase": {
      "type": "object",
      "required": [
        "aggregation",
        "attribute",
        "description",
        "name",
        "operator",
        "type",
        "window_minutes"
      ],
      "properties": {
        "aggregation": {
          "type": "string",
          "enum": [
            "avg",
            "sum",
            "pct"
          ]
        },
        "attribute": {
          "type": "string",
          "enum": [
            "latency",
            "error_count",
            "feedback_score",
            "run_latency",
            "run_count"
          ]
        },
        "denominator_filter": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "enum": [
            "gte",
            "lte"
          ]
        },
        "threshold": {
          "type": "number"
        },
        "threshold_multiplier": {
          "type": "number"
        },
        "threshold_window_minutes": {
          "type": "integer",
          "maximum": 60
        },
        "type": {
          "type": "string",
          "enum": [
            "threshold",
            "change"
          ]
        },
        "window_minutes": {
          "description": "max 15 minutes for alert rule",
          "type": "integer",
          "maximum": 15
        }
      }
    },
    "alerts.AlertRuleResponse": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/alerts.AlertAction"
          }
        },
        "rule": {
          "$ref": "#/components/schemas/alerts.AlertRule"
        }
      }
    },
    "alerts.CreateAlertRuleRequest": {
      "type": "object",
      "required": [
        "actions",
        "rule"
      ],
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/alerts.AlertActionBase"
          }
        },
        "rule": {
          "$ref": "#/components/schemas/alerts.AlertRuleBase"
        }
      }
    },
    "alerts.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Invalid request: missing required fields"
        }
      }
    },
    "alerts.UpdateAlertRuleRequest": {
      "type": "object",
      "required": [
        "actions",
        "rule"
      ],
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/alerts.AlertActionBase"
          }
        },
        "rule": {
          "$ref": "#/components/schemas/alerts.AlertRuleBase"
        }
      }
    },
    "examples.DeleteExamplesRequest": {
      "type": "object",
      "required": [
        "example_ids",
        "hard_delete"
      ],
      "properties": {
        "example_ids": {
          "description": "ExampleIDs is a list of UUIDs identifying the examples to delete.",
          "type": "array",
          "maxItems": 1000,
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "hard_delete": {
          "description": "HardDelete indicates whether to perform a hard delete.\nCurrently only True is supported.",
          "type": "boolean"
        }
      }
    },
    "examples.ErrorResponse": {
      "type": "object",
      "properties": {
        "details": {
          "description": "Optional error details as JSON string",
          "type": "string",
          "example": "{\"field\":\"dataset_id\",\"reason\":\"required\"}"
        },
        "error": {
          "description": "Error message",
          "type": "string",
          "example": "Invalid request: missing required fields"
        }
      }
    },
    "examples.ExamplesCreatedResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "example_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"123e4567-e89b-12d3-a456-426614174000\"]"
          ]
        }
      }
    },
    "examples.ExamplesDeletedResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "example_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"123e4567-e89b-12d3-a456-426614174000\"]"
          ]
        }
      }
    },
    "examples.ExamplesUpdatedResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "example_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"123e4567-e89b-12d3-a456-426614174000\"]"
          ]
        }
      }
    },
    "experiment_view_overrides.ColumnOverride": {
      "type": "object",
      "required": [
        "column"
      ],
      "properties": {
        "color_gradient": {
          "type": "array",
          "maxItems": 20,
          "items": {
            "type": "array",
            "items": {}
          }
        },
        "color_map": {
          "type": "object",
          "additionalProperties": true
        },
        "column": {
          "type": "string",
          "maxLength": 200
        },
        "hide": {
          "type": "boolean"
        },
        "precision": {
          "type": "integer",
          "maximum": 6,
          "minimum": 1
        }
      }
    },
    "experiment_view_overrides.ExperimentViewOverride": {
      "type": "object",
      "properties": {
        "column_overrides": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/experiment_view_overrides.ColumnOverride"
          }
        },
        "created_at": {
          "type": "string"
        },
        "dataset_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "modified_at": {
          "type": "string"
        }
      }
    },
    "experiment_view_overrides.ExperimentViewOverridePatchRequest": {
      "type": "object",
      "required": [
        "column_overrides"
      ],
      "properties": {
        "column_overrides": {
          "type": "array",
          "maxItems": 50,
          "minItems": 1,
          "items": {
            "$ref": "#/components/schemas/experiment_view_overrides.ColumnOverride"
          }
        }
      }
    },
    "experiment_view_overrides.ExperimentViewOverridePostRequest": {
      "type": "object",
      "required": [
        "column_overrides"
      ],
      "properties": {
        "column_overrides": {
          "type": "array",
          "maxItems": 50,
          "minItems": 1,
          "items": {
            "$ref": "#/components/schemas/experiment_view_overrides.ColumnOverride"
          }
        }
      }
    },
    "feedback.FeedbackCategory": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "minLength": 1
        },
        "value": {
          "type": "number"
        }
      }
    },
    "feedback.FeedbackConfig": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/feedback.FeedbackCategory"
          }
        },
        "max": {
          "type": "number"
        },
        "min": {
          "type": "number"
        },
        "type": {
          "$ref": "#/components/schemas/feedback.FeedbackType"
        }
      }
    },
    "feedback.FeedbackCreateSchema": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "comparative_experiment_id": {
          "type": "string"
        },
        "correction": {},
        "created_at": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "feedback_config": {
          "$ref": "#/components/schemas/feedback.FeedbackConfig"
        },
        "feedback_group_id": {
          "type": "string"
        },
        "feedback_source": {
          "$ref": "#/components/schemas/feedback.FeedbackSource"
        },
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "modified_at": {
          "type": "string"
        },
        "run_id": {
          "type": "string"
        },
        "score": {},
        "session_id": {
          "type": "string"
        },
        "trace_id": {
          "type": "string"
        },
        "value": {}
      }
    },
    "feedback.FeedbackSource": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": true
        },
        "type": {
          "type": "string"
        }
      }
    },
    "feedback.FeedbackType": {
      "type": "string",
      "enum": [
        "continuous",
        "categorical",
        "freeform"
      ],
      "x-enum-varnames": [
        "FeedbackTypeContinuous",
        "FeedbackTypeCategorical",
        "FeedbackTypeFreeform"
      ]
    },
    "runs.ErrorResponse": {
      "type": "object",
      "properties": {
        "details": {
          "description": "Optional error details as JSON string",
          "type": "string",
          "example": "{\"field\":\"dataset_id\",\"reason\":\"required\"}"
        },
        "error": {
          "description": "Error message",
          "type": "string",
          "example": "Invalid request: missing required fields"
        }
      }
    },
    "runs.Run": {
      "type": "object",
      "properties": {
        "dotted_order": {
          "type": "string"
        },
        "end_time": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "extra": {
          "type": "object",
          "additionalProperties": true
        },
        "id": {
          "type": "string"
        },
        "input_attachments": {
          "type": "object",
          "additionalProperties": true
        },
        "inputs": {
          "type": "object",
          "additionalProperties": true
        },
        "name": {
          "type": "string"
        },
        "output_attachments": {
          "type": "object",
          "additionalProperties": true
        },
        "outputs": {
          "type": "object",
          "additionalProperties": true
        },
        "parent_run_id": {
          "type": "string"
        },
        "reference_example_id": {
          "type": "string"
        },
        "run_type": {
          "type": "string",
          "enum": [
            "tool",
            "chain",
            "llm",
            "retriever",
            "embedding",
            "prompt",
            "parser"
          ]
        },
        "serialized": {
          "type": "object",
          "additionalProperties": true
        },
        "session_id": {
          "type": "string"
        },
        "session_name": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "trace_id": {
          "type": "string"
        }
      }
    }
  }
}