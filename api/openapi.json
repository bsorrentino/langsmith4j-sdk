{
  "openapi": "3.1.0",
  "info": {
    "title": "LangSmith",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/runs/rules": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "List Rules",
        "description": "List all run rules.",
        "operationId": "list_rules_api_v1_runs_rules_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset Id"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "session",
                    "dataset"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunRulesSchema"
                  },
                  "title": "Response List Rules Api V1 Runs Rules Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Create Rule",
        "description": "Create a new run rule.",
        "operationId": "create_rule_api_v1_runs_rules_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunRulesCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunRulesSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/{rule_id}": {
      "patch": {
        "tags": [
          "run"
        ],
        "summary": "Update Rule",
        "description": "Update a run rule.",
        "operationId": "update_rule_api_v1_runs_rules__rule_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunRulesCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunRulesSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "run"
        ],
        "summary": "Delete Rule",
        "description": "Delete a run rule.",
        "operationId": "delete_rule_api_v1_runs_rules__rule_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/{rule_id}/logs": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "List Rule Logs",
        "description": "List logs for a particular rule",
        "operationId": "list_rule_logs_api_v1_runs_rules__rule_id__logs_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1440,
              "minimum": 100,
              "default": 720,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Time"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RuleLogSchema"
                  },
                  "title": "Response List Rule Logs Api V1 Runs Rules  Rule Id  Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/{rule_id}/last_applied": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "Get Last Applied Rule",
        "description": "Get the last applied rule.",
        "operationId": "get_last_applied_rule_api_v1_runs_rules__rule_id__last_applied_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleLogSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/{rule_id}/trigger": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Trigger Rule",
        "description": "Trigger a run rule manually.",
        "operationId": "trigger_rule_api_v1_runs_rules__rule_id__trigger_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunRulesSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/trigger": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Trigger Rules",
        "description": "Trigger an array of run rules manually.",
        "operationId": "trigger_rules_api_v1_runs_rules_trigger_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TriggerRulesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/{run_id}": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "Read Run",
        "description": "Get a specific run.",
        "operationId": "read_run_api_v1_runs__run_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session Id"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Time"
            }
          },
          {
            "name": "exclude_s3_stored_attributes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Exclude S3 Stored Attributes"
            }
          },
          {
            "name": "exclude_serialized",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Exclude Serialized"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "run"
        ],
        "summary": "Update Run",
        "description": "Update a run.",
        "operationId": "update_run_api_v1_runs__run_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/{run_id}/share": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "Read Run Share State",
        "description": "Get the state of sharing of a run.",
        "operationId": "read_run_share_state_api_v1_runs__run_id__share_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/RunShareSchema"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Read Run Share State Api V1 Runs  Run Id  Share Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "run"
        ],
        "summary": "Share Run",
        "description": "Share a run.",
        "operationId": "share_run_api_v1_runs__run_id__share_put",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunShareSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "run"
        ],
        "summary": "Unshare Run",
        "description": "Unshare a run.",
        "operationId": "unshare_run_api_v1_runs__run_id__share_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/query": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Query Runs",
        "operationId": "query_runs_api_v1_runs_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyParamsForRunSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRunsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/generate-query": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Generate Query For Runs",
        "description": "Get runs filter expression query for a given natural language query.",
        "operationId": "generate_query_for_runs_api_v1_runs_generate_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBodyForRunsGenerateQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyForRunsGenerateQuery"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/stats": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Stats Runs",
        "description": "Get all runs by query in body payload.",
        "operationId": "stats_runs_api_v1_runs_stats_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunStatsQueryParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/RunStats"
                    },
                    {
                      "additionalProperties": {
                        "$ref": "#/components/schemas/RunStats"
                      },
                      "type": "object"
                    }
                  ],
                  "title": "Response Stats Runs Api V1 Runs Stats Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/group": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Group Runs",
        "description": "Get runs grouped by an expression",
        "operationId": "group_runs_api_v1_runs_group_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/group/stats": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Stats Group Runs",
        "description": "Get stats for the grouped runs.",
        "operationId": "stats_group_runs_api_v1_runs_group_stats_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunGroupStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/delete": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Delete Runs",
        "description": "Delete specific runs by trace IDs or metadata key-value pairs.",
        "operationId": "delete_runs_api_v1_runs_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_delete_runs_api_v1_runs_delete_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/runs": {
      "post": {
        "description": "Queues a single run for ingestion. The request body must be a JSON-encoded run object that follows the Run schema.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "runs"
        ],
        "summary": "Create a Run",
        "parameters": [],
        "responses": {
          "202": {
            "description": "Run created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "allOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runs.Run"
              }
            }
          }
        }
      }
    },
    "/runs/batch": {
      "post": {
        "description": "Ingests a batch of runs in a single JSON payload. The payload must have `post` and/or `patch` arrays containing run objects.\nPrefer this endpoint over single‑run ingestion when submitting hundreds of runs, but `/runs/multipart` offers better handling for very large fields and attachments.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "runs"
        ],
        "summary": "Ingest Runs (Batch JSON)",
        "parameters": [],
        "responses": {
          "202": {
            "description": "Runs batch ingested",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "allOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "patch": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/runs.Run"
                    }
                  },
                  "post": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/runs.Run"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/runs/multipart": {
      "post": {
        "description": "Ingests multiple runs, feedback objects, and binary attachments in a single `multipart/form-data` request.\n**Part‑name pattern**: `<event>.<run_id>[.<field>]` where `event` ∈ {`post`, `patch`, `feedback`, `attachment`}.\n* `post|patch.<run_id>` – JSON run payload.\n* `post|patch.<run_id>.<field>` – out‑of‑band run data (`inputs`, `outputs`, `events`, `error`, `extra`, `serialized`).\n* `feedback.<run_id>` – JSON feedback payload (must include `trace_id`).\n* `attachment.<run_id>.<filename>` – arbitrary binary attachment stored in S3.\n**Headers**: every part must set `Content-Type` **and** either a `Content-Length` header or `length` parameter. Per‑part `Content-Encoding` is **not** allowed; the top‑level request may be `Content-Encoding: zstd`.\n**Best performance** for high‑volume ingestion.",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "runs"
        ],
        "summary": "Ingest Runs (Multipart)",
        "parameters": [],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "post.{run_id}": {
                    "type": "string",
                    "format": "binary",
                    "description": "Run to create (JSON)"
                  },
                  "patch.{run_id}": {
                    "type": "string",
                    "format": "binary",
                    "description": "Run to update (JSON)"
                  },
                  "post.{run_id}.inputs": {
                    "type": "string",
                    "format": "binary",
                    "description": "Large inputs object (JSON) stored out‑of‑band"
                  },
                  "patch.{run_id}.outputs": {
                    "type": "string",
                    "format": "binary",
                    "description": "Large outputs object (JSON) stored out‑of‑band"
                  },
                  "feedback.{run_id}": {
                    "type": "string",
                    "format": "binary",
                    "description": "Feedback object (JSON) – must include trace_id"
                  },
                  "attachment.{run_id}.{filename}": {
                    "type": "file",
                    "format": "binary",
                    "description": "Binary attachment linked to run {run_id}"
                  }
                },
                "required": []
              }
            }
          }
        }
      }
    },
    "/runs/{run_id}": {
      "patch": {
        "description": "Updates a run identified by its ID. The body should contain only the fields to be changed; unknown fields are ignored.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "runs"
        ],
        "summary": "Update a Run",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Run ID",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Run updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "allOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runs.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runs.Run"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AIMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "ai",
            "title": "Type",
            "default": "ai"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "example": {
            "type": "boolean",
            "title": "Example",
            "default": false
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ToolCall"
            },
            "type": "array",
            "title": "Tool Calls",
            "default": []
          },
          "invalid_tool_calls": {
            "items": {
              "$ref": "#/components/schemas/InvalidToolCall"
            },
            "type": "array",
            "title": "Invalid Tool Calls",
            "default": []
          },
          "usage_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UsageMetadata"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "AIMessage",
        "description": "Message from an AI.\n\nAIMessage is returned from a chat model as a response to a prompt.\n\nThis message represents the output of the model and consists of both\nthe raw output as returned by the model together standardized fields\n(e.g., tool calls, usage metadata) added by the LangChain framework."
      },
      "AIMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "AIMessageChunk",
            "title": "Type",
            "default": "AIMessageChunk"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "example": {
            "type": "boolean",
            "title": "Example",
            "default": false
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ToolCall"
            },
            "type": "array",
            "title": "Tool Calls",
            "default": []
          },
          "invalid_tool_calls": {
            "items": {
              "$ref": "#/components/schemas/InvalidToolCall"
            },
            "type": "array",
            "title": "Invalid Tool Calls",
            "default": []
          },
          "usage_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UsageMetadata"
              },
              {
                "type": "null"
              }
            ]
          },
          "tool_call_chunks": {
            "items": {
              "$ref": "#/components/schemas/ToolCallChunk"
            },
            "type": "array",
            "title": "Tool Call Chunks",
            "default": []
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "AIMessageChunk",
        "description": "Message chunk from an AI."
      },
      "APIFeedbackSource": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "api"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "APIFeedbackSource",
        "description": "API feedback source."
      },
      "APIKeyCreateRequest": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description",
            "default": "Default API key"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "workspaces": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspaces"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          }
        },
        "type": "object",
        "title": "APIKeyCreateRequest",
        "description": "API key POST schema.\n\nexpires_at: Optional datetime when the API key will expire.\nworkspaces: List of workspace UUIDs this key can access (feature-flagged).\nrole_id: Optional UUID of the role to assign to API key.\n    If not provided, uses default role based on read_only flag:\n    - WORKSPACE_ADMIN if read_only is False\n    - WORKSPACE_READER if read_only is True"
      },
      "APIKeyCreateResponse": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "short_key": {
            "type": "string",
            "title": "Short Key"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "workspace_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Names"
          },
          "key": {
            "type": "string",
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "id",
          "short_key",
          "description",
          "key"
        ],
        "title": "APIKeyCreateResponse",
        "description": "API key POST schema."
      },
      "APIKeyGetResponse": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "short_key": {
            "type": "string",
            "title": "Short Key"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "workspace_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Names"
          }
        },
        "type": "object",
        "required": [
          "id",
          "short_key",
          "description"
        ],
        "title": "APIKeyGetResponse",
        "description": "API key GET schema."
      },
      "AccessScope": {
        "type": "string",
        "enum": [
          "organization",
          "workspace"
        ],
        "title": "AccessScope"
      },
      "AllowedLoginMethodsUpdate": {
        "properties": {
          "sso_only": {
            "type": "boolean",
            "title": "Sso Only"
          }
        },
        "type": "object",
        "required": [
          "sso_only"
        ],
        "title": "AllowedLoginMethodsUpdate"
      },
      "AnnotationQueueBulkDeleteRunsRequest": {
        "properties": {
          "delete_all": {
            "type": "boolean",
            "title": "Delete All",
            "default": false
          },
          "run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Ids"
          },
          "exclude_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exclude Run Ids"
          }
        },
        "type": "object",
        "title": "AnnotationQueueBulkDeleteRunsRequest"
      },
      "AnnotationQueueCreateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "num_reviewers_per_item": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Reviewers Per Item",
            "default": 1
          },
          "enable_reservations": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Reservations",
            "default": true
          },
          "reservation_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservation Minutes",
            "default": 1
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "rubric_items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnnotationQueueRubricItemSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Items"
          },
          "rubric_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Instructions"
          },
          "session_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Ids"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "AnnotationQueueCreateSchema",
        "description": "AnnotationQueue schema."
      },
      "AnnotationQueueRubricItemSchema": {
        "properties": {
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "value_descriptions": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value Descriptions"
          },
          "score_descriptions": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score Descriptions"
          }
        },
        "type": "object",
        "required": [
          "feedback_key"
        ],
        "title": "AnnotationQueueRubricItemSchema"
      },
      "AnnotationQueueRunSchema": {
        "properties": {
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "queue_id": {
            "type": "string",
            "format": "uuid",
            "title": "Queue Id"
          },
          "last_reviewed_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Reviewed Time"
          },
          "added_at": {
            "type": "string",
            "format": "date-time",
            "title": "Added At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "run_id",
          "queue_id",
          "id"
        ],
        "title": "AnnotationQueueRunSchema"
      },
      "AnnotationQueueRunUpdateSchema": {
        "properties": {
          "last_reviewed_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Reviewed Time"
          },
          "added_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Added At"
          }
        },
        "type": "object",
        "title": "AnnotationQueueRunUpdateSchema"
      },
      "AnnotationQueueSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "num_reviewers_per_item": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Reviewers Per Item",
            "default": 1
          },
          "enable_reservations": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Reservations",
            "default": true
          },
          "reservation_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservation Minutes",
            "default": 1
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "source_rule_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Rule Id"
          },
          "run_rule_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Rule Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id"
        ],
        "title": "AnnotationQueueSchema",
        "description": "AnnotationQueue schema."
      },
      "AnnotationQueueSchemaWithRubric": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "num_reviewers_per_item": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Reviewers Per Item",
            "default": 1
          },
          "enable_reservations": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Reservations",
            "default": true
          },
          "reservation_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservation Minutes",
            "default": 1
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "source_rule_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Rule Id"
          },
          "run_rule_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Rule Id"
          },
          "rubric_items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnnotationQueueRubricItemSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Items"
          },
          "rubric_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Instructions"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id"
        ],
        "title": "AnnotationQueueSchemaWithRubric",
        "description": "AnnotationQueue schema with rubric."
      },
      "AnnotationQueueSchemaWithSize": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "num_reviewers_per_item": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Reviewers Per Item",
            "default": 1
          },
          "enable_reservations": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Reservations",
            "default": true
          },
          "reservation_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservation Minutes",
            "default": 1
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "source_rule_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Rule Id"
          },
          "run_rule_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Rule Id"
          },
          "total_runs": {
            "type": "integer",
            "title": "Total Runs"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id",
          "total_runs"
        ],
        "title": "AnnotationQueueSchemaWithSize",
        "description": "AnnotationQueue schema with size."
      },
      "AnnotationQueueSizeSchema": {
        "properties": {
          "size": {
            "type": "integer",
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "size"
        ],
        "title": "AnnotationQueueSizeSchema",
        "description": "Size of an Annotation Queue"
      },
      "AnnotationQueueUpdateSchema": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "num_reviewers_per_item": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Reviewers Per Item",
            "default": 1
          },
          "enable_reservations": {
            "type": "boolean",
            "title": "Enable Reservations",
            "default": true
          },
          "reservation_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservation Minutes"
          },
          "rubric_items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnnotationQueueRubricItemSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Items"
          },
          "rubric_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric Instructions"
          }
        },
        "type": "object",
        "title": "AnnotationQueueUpdateSchema",
        "description": "AnnotationQueue update schema."
      },
      "AppFeedbackSource": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "app"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "AppFeedbackSource",
        "description": "Feedback from the LangChainPlus App."
      },
      "Artifact": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "contents": {
            "items": {
              "$ref": "#/components/schemas/ArtifactContent"
            },
            "type": "array",
            "title": "Contents"
          },
          "current_content_index": {
            "type": "integer",
            "title": "Current Content Index"
          }
        },
        "type": "object",
        "required": [
          "id",
          "contents",
          "current_content_index"
        ],
        "title": "Artifact"
      },
      "ArtifactContent": {
        "properties": {
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "index",
          "content"
        ],
        "title": "ArtifactContent"
      },
      "AttachmentsOperations": {
        "properties": {
          "rename": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Rename",
            "description": "Mapping of old attachment names to new names"
          },
          "retain": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Retain",
            "description": "List of attachment names to keep"
          }
        },
        "type": "object",
        "title": "AttachmentsOperations"
      },
      "AuthProvider": {
        "type": "string",
        "enum": [
          "email",
          "supabase:non-sso",
          "supabase:sso",
          "oidc",
          "custom-oidc"
        ],
        "title": "AuthProvider"
      },
      "AutoEvalFeedbackSource": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "auto_eval"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "AutoEvalFeedbackSource",
        "description": "Auto eval feedback source."
      },
      "BasicAuthMemberCreate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "ls_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ls User Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "workspace_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Role Id"
          },
          "workspace_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Ids"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "BasicAuthMemberCreate"
      },
      "BasicAuthResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "BasicAuthResponse"
      },
      "BasicAuthUserPatch": {
        "properties": {
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "title": "BasicAuthUserPatch"
      },
      "BatchIngestConfig": {
        "properties": {
          "use_multipart_endpoint": {
            "type": "boolean",
            "title": "Use Multipart Endpoint",
            "default": true
          },
          "scale_up_qsize_trigger": {
            "type": "integer",
            "title": "Scale Up Qsize Trigger",
            "default": 1000
          },
          "scale_up_nthreads_limit": {
            "type": "integer",
            "title": "Scale Up Nthreads Limit",
            "default": 16
          },
          "scale_down_nempty_trigger": {
            "type": "integer",
            "title": "Scale Down Nempty Trigger",
            "default": 4
          },
          "size_limit": {
            "type": "integer",
            "title": "Size Limit",
            "default": 100
          },
          "size_limit_bytes": {
            "type": "integer",
            "title": "Size Limit Bytes",
            "default": 20971520
          }
        },
        "type": "object",
        "title": "BatchIngestConfig",
        "description": "Batch ingest config."
      },
      "BodyParamsForRunSchema": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "trace": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace"
          },
          "parent_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run"
          },
          "run_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "session": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session"
          },
          "reference_example": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example"
          },
          "execution_order": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Order"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "is_root": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Root"
          },
          "data_source_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunsFilterDataSourceTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "skip_pagination": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Pagination"
          },
          "search_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Filter"
          },
          "use_experimental_search": {
            "type": "boolean",
            "title": "Use Experimental Search",
            "default": false
          },
          "cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor"
          },
          "limit": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "title": "Limit",
            "default": 100
          },
          "select": {
            "items": {
              "$ref": "#/components/schemas/RunSelect"
            },
            "type": "array",
            "title": "Select",
            "default": [
              "id",
              "name",
              "run_type",
              "start_time",
              "end_time",
              "status",
              "error",
              "extra",
              "events",
              "inputs",
              "outputs",
              "parent_run_id",
              "manifest_id",
              "manifest_s3_id",
              "manifest",
              "session_id",
              "serialized",
              "reference_example_id",
              "reference_dataset_id",
              "total_tokens",
              "prompt_tokens",
              "prompt_token_details",
              "completion_tokens",
              "completion_token_details",
              "total_cost",
              "prompt_cost",
              "prompt_cost_details",
              "completion_cost",
              "completion_cost_details",
              "price_model_id",
              "first_token_time",
              "trace_id",
              "dotted_order",
              "last_queued_at",
              "feedback_stats",
              "parent_run_ids",
              "tags",
              "in_dataset",
              "app_path",
              "share_token",
              "trace_tier",
              "trace_first_received_at",
              "ttl_seconds",
              "trace_upgrade",
              "thread_id"
            ]
          },
          "order": {
            "$ref": "#/components/schemas/RunDateOrder",
            "default": "desc"
          },
          "skip_prev_cursor": {
            "type": "boolean",
            "title": "Skip Prev Cursor",
            "default": false
          }
        },
        "type": "object",
        "title": "BodyParamsForRunSchema",
        "description": "Query params for run endpoints."
      },
      "Body_clone_dataset_api_v1_datasets_clone_post": {
        "properties": {
          "target_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Target Dataset Id"
          },
          "source_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Dataset Id"
          },
          "as_of": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "date-time"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
              },
              {
                "type": "null"
              }
            ],
            "title": "As Of"
          },
          "examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "target_dataset_id",
          "source_dataset_id"
        ],
        "title": "Body_clone_dataset_api_v1_datasets_clone_post"
      },
      "Body_delete_runs_api_v1_runs_delete_post": {
        "properties": {
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "trace_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Ids"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "Body_delete_runs_api_v1_runs_delete_post"
      },
      "Body_execute_api_v1_ace_execute_post": {
        "properties": {
          "args": {
            "items": {},
            "type": "array",
            "title": "Args"
          },
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "args",
          "code"
        ],
        "title": "Body_execute_api_v1_ace_execute_post"
      },
      "Body_update_dataset_splits_api_v1_datasets__dataset_id__splits_put": {
        "properties": {
          "split_name": {
            "type": "string",
            "title": "Split Name"
          },
          "examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples"
          },
          "remove": {
            "type": "boolean",
            "title": "Remove",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "split_name",
          "examples"
        ],
        "title": "Body_update_dataset_splits_api_v1_datasets__dataset_id__splits_put"
      },
      "Body_upload_csv_dataset_api_v1_datasets_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "input_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Keys"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "data_type": {
            "$ref": "#/components/schemas/DataType",
            "default": "kv"
          },
          "output_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Keys",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "file",
          "input_keys"
        ],
        "title": "Body_upload_csv_dataset_api_v1_datasets_upload_post"
      },
      "Body_upload_examples_from_csv_api_v1_examples_upload__dataset_id__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "input_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Keys"
          },
          "output_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Keys"
          }
        },
        "type": "object",
        "required": [
          "file",
          "input_keys"
        ],
        "title": "Body_upload_examples_from_csv_api_v1_examples_upload__dataset_id__post"
      },
      "BulkExport": {
        "properties": {
          "bulk_export_destination_id": {
            "type": "string",
            "format": "uuid",
            "title": "Bulk Export Destination Id"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "format": {
            "$ref": "#/components/schemas/BulkExportFormat",
            "default": "Parquet"
          },
          "compression": {
            "$ref": "#/components/schemas/BulkExportCompression",
            "default": "gzip"
          },
          "interval_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interval Hours"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "status": {
            "$ref": "#/components/schemas/BulkExportStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          },
          "source_bulk_export_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Bulk Export Id"
          }
        },
        "type": "object",
        "required": [
          "bulk_export_destination_id",
          "session_id",
          "start_time",
          "id",
          "tenant_id",
          "status",
          "created_at",
          "updated_at",
          "finished_at"
        ],
        "title": "BulkExport"
      },
      "BulkExportCompression": {
        "type": "string",
        "enum": [
          "none",
          "gzip",
          "snappy",
          "zstandard"
        ],
        "title": "BulkExportCompression"
      },
      "BulkExportCreate": {
        "properties": {
          "bulk_export_destination_id": {
            "type": "string",
            "format": "uuid",
            "title": "Bulk Export Destination Id"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "format": {
            "$ref": "#/components/schemas/BulkExportFormat",
            "default": "Parquet"
          },
          "compression": {
            "$ref": "#/components/schemas/BulkExportCompression",
            "default": "gzip"
          },
          "interval_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interval Hours"
          }
        },
        "type": "object",
        "required": [
          "bulk_export_destination_id",
          "session_id",
          "start_time"
        ],
        "title": "BulkExportCreate"
      },
      "BulkExportDestination": {
        "properties": {
          "destination_type": {
            "$ref": "#/components/schemas/BulkExportDestinationType",
            "default": "s3"
          },
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ ']+$",
            "title": "Display Name"
          },
          "config": {
            "$ref": "#/components/schemas/BulkExportDestinationS3Config"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "credentials_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Credentials Keys"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "config",
          "id",
          "tenant_id",
          "created_at",
          "updated_at",
          "credentials_keys"
        ],
        "title": "BulkExportDestination"
      },
      "BulkExportDestinationCreate": {
        "properties": {
          "destination_type": {
            "$ref": "#/components/schemas/BulkExportDestinationType",
            "default": "s3"
          },
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ ']+$",
            "title": "Display Name"
          },
          "config": {
            "$ref": "#/components/schemas/BulkExportDestinationS3Config"
          },
          "credentials": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BulkExportDestinationS3Credentials"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "config"
        ],
        "title": "BulkExportDestinationCreate"
      },
      "BulkExportDestinationS3Config": {
        "properties": {
          "endpoint_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Url"
          },
          "prefix": {
            "type": "string",
            "maxLength": 2048,
            "title": "Prefix",
            "default": ""
          },
          "bucket_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 63,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Name"
          },
          "region": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "s3_additional_kwargs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Additional Kwargs"
          }
        },
        "type": "object",
        "title": "BulkExportDestinationS3Config"
      },
      "BulkExportDestinationS3Credentials": {
        "properties": {
          "access_key_id": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Access Key Id"
          },
          "secret_access_key": {
            "type": "string",
            "maxLength": 2048,
            "minLength": 1,
            "title": "Secret Access Key"
          },
          "session_token": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Token"
          }
        },
        "type": "object",
        "required": [
          "access_key_id",
          "secret_access_key"
        ],
        "title": "BulkExportDestinationS3Credentials"
      },
      "BulkExportDestinationType": {
        "type": "string",
        "enum": [
          "s3"
        ],
        "title": "BulkExportDestinationType"
      },
      "BulkExportFormat": {
        "type": "string",
        "enum": [
          "Parquet"
        ],
        "title": "BulkExportFormat"
      },
      "BulkExportRun": {
        "properties": {
          "bulk_export_id": {
            "type": "string",
            "format": "uuid",
            "title": "Bulk Export Id"
          },
          "metadata": {
            "$ref": "#/components/schemas/BulkExportRunMetadata"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "$ref": "#/components/schemas/BulkExportRunStatus"
          },
          "retry_number": {
            "type": "integer",
            "title": "Retry Number",
            "default": 0
          },
          "errors": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          }
        },
        "type": "object",
        "required": [
          "bulk_export_id",
          "metadata",
          "id",
          "status",
          "created_at",
          "updated_at",
          "finished_at"
        ],
        "title": "BulkExportRun"
      },
      "BulkExportRunMetadata": {
        "properties": {
          "prefix": {
            "type": "string",
            "title": "Prefix"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BulkExportRunProgress"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "prefix",
          "start_time",
          "end_time"
        ],
        "title": "BulkExportRunMetadata"
      },
      "BulkExportRunProgress": {
        "properties": {
          "rows_written": {
            "type": "integer",
            "title": "Rows Written"
          },
          "exported_files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Exported Files"
          },
          "export_path": {
            "type": "string",
            "title": "Export Path"
          },
          "latest_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Cursor"
          }
        },
        "type": "object",
        "required": [
          "rows_written",
          "exported_files",
          "export_path",
          "latest_cursor"
        ],
        "title": "BulkExportRunProgress"
      },
      "BulkExportRunStatus": {
        "type": "string",
        "enum": [
          "Cancelled",
          "Completed",
          "Created",
          "Failed",
          "TimedOut",
          "Running"
        ],
        "title": "BulkExportRunStatus"
      },
      "BulkExportStatus": {
        "type": "string",
        "enum": [
          "Cancelled",
          "Completed",
          "Created",
          "IntervalScheduled",
          "Failed",
          "TimedOut",
          "Running"
        ],
        "title": "BulkExportStatus"
      },
      "BulkExportUpdate": {
        "properties": {
          "status": {
            "type": "string",
            "const": "Cancelled",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "BulkExportUpdate"
      },
      "ChangePaymentPlanReq": {
        "type": "string",
        "enum": [
          "disabled",
          "developer",
          "plus",
          "startup",
          "partner",
          "premier",
          "free"
        ],
        "title": "ChangePaymentPlanReq",
        "description": "Enum for payment plans that the user can change to. Developer plans are permanent and enterprise plans will be changed manually."
      },
      "ChangePaymentPlanSchema": {
        "properties": {
          "tier": {
            "$ref": "#/components/schemas/ChangePaymentPlanReq"
          }
        },
        "type": "object",
        "required": [
          "tier"
        ],
        "title": "ChangePaymentPlanSchema",
        "description": "Change payment plan schema."
      },
      "ChatMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "chat",
            "title": "Type",
            "default": "chat"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatMessage",
        "description": "Message that can be assigned an arbitrary speaker (i.e. role)."
      },
      "ChatMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "ChatMessageChunk",
            "title": "Type",
            "default": "ChatMessageChunk"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatMessageChunk",
        "description": "Chat Message chunk."
      },
      "CodeEvaluatorTopLevel": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "CodeEvaluatorTopLevel"
      },
      "Comment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "comment_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment By"
          },
          "comment_on": {
            "type": "string",
            "format": "uuid",
            "title": "Comment On"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "comment_by_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment By Name"
          },
          "num_sub_comments": {
            "type": "integer",
            "title": "Num Sub Comments"
          },
          "num_likes": {
            "type": "integer",
            "title": "Num Likes"
          },
          "liked_by_auth_user": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Liked By Auth User"
          }
        },
        "type": "object",
        "required": [
          "id",
          "comment_on",
          "content",
          "created_at",
          "updated_at",
          "num_sub_comments",
          "num_likes"
        ],
        "title": "Comment"
      },
      "CommitManifestResponse": {
        "properties": {
          "commit_hash": {
            "type": "string",
            "title": "Commit Hash"
          },
          "manifest": {
            "type": "object",
            "title": "Manifest"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RepoExampleResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          }
        },
        "type": "object",
        "required": [
          "commit_hash",
          "manifest"
        ],
        "title": "CommitManifestResponse",
        "description": "Response model for get_commit_manifest."
      },
      "CommitWithLookups": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "manifest": {
            "type": "object",
            "title": "Manifest"
          },
          "repo_id": {
            "type": "string",
            "format": "uuid",
            "title": "Repo Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "commit_hash": {
            "type": "string",
            "title": "Commit Hash"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "example_run_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Example Run Ids"
          },
          "num_downloads": {
            "type": "integer",
            "title": "Num Downloads"
          },
          "num_views": {
            "type": "integer",
            "title": "Num Views"
          },
          "parent_commit_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Commit Hash"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "manifest",
          "repo_id",
          "commit_hash",
          "created_at",
          "updated_at",
          "example_run_ids",
          "num_downloads",
          "num_views"
        ],
        "title": "CommitWithLookups",
        "description": "All database fields for commits, plus helpful computed fields and user info\nfor private prompts."
      },
      "ComparativeExperiment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "reference_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Reference Dataset Id"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "experiments_info": {
            "items": {
              "$ref": "#/components/schemas/SimpleExperimentInfo"
            },
            "type": "array",
            "title": "Experiments Info"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "created_at",
          "modified_at",
          "reference_dataset_id",
          "experiments_info"
        ],
        "title": "ComparativeExperiment",
        "description": "ComparativeExperiment schema."
      },
      "ComparativeExperimentBase": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "reference_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Reference Dataset Id"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "created_at",
          "modified_at",
          "reference_dataset_id"
        ],
        "title": "ComparativeExperimentBase",
        "description": "ComparativeExperiment schema."
      },
      "ComparativeExperimentCreate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "experiment_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Experiment Ids"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "reference_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Reference Dataset Id"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "experiment_ids",
          "reference_dataset_id"
        ],
        "title": "ComparativeExperimentCreate",
        "description": "Create class for ComparativeExperiment."
      },
      "ConfiguredBy": {
        "type": "string",
        "enum": [
          "system",
          "user"
        ],
        "title": "ConfiguredBy"
      },
      "CreateCommentRequest": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "CreateCommentRequest"
      },
      "CreateEventRequest": {
        "properties": {
          "event_type": {
            "type": "string",
            "enum": [
              "playground-view",
              "playground-run"
            ],
            "title": "Event Type"
          },
          "owner": {
            "type": "string",
            "title": "Owner"
          },
          "repo": {
            "type": "string",
            "title": "Repo"
          },
          "commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "owner",
          "repo"
        ],
        "title": "CreateEventRequest"
      },
      "CreateFeedbackConfigSchema": {
        "properties": {
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "feedback_config": {
            "$ref": "#/components/schemas/FeedbackConfig"
          },
          "is_lower_score_better": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Lower Score Better",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "feedback_key",
          "feedback_config"
        ],
        "title": "CreateFeedbackConfigSchema"
      },
      "CreateRepoCommitRequest": {
        "properties": {
          "manifest": {
            "type": "object",
            "title": "Manifest"
          },
          "parent_commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Commit"
          },
          "example_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Run Ids"
          },
          "skip_webhooks": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              }
            ],
            "title": "Skip Webhooks",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "manifest"
        ],
        "title": "CreateRepoCommitRequest"
      },
      "CreateRepoCommitResponse": {
        "properties": {
          "commit": {
            "$ref": "#/components/schemas/CommitWithLookups"
          }
        },
        "type": "object",
        "required": [
          "commit"
        ],
        "title": "CreateRepoCommitResponse"
      },
      "CreateRepoRequest": {
        "properties": {
          "repo_handle": {
            "type": "string",
            "title": "Repo Handle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "repo_handle",
          "is_public"
        ],
        "title": "CreateRepoRequest",
        "description": "Fields to create a repo"
      },
      "CreateRepoResponse": {
        "properties": {
          "repo": {
            "$ref": "#/components/schemas/RepoWithLookups"
          }
        },
        "type": "object",
        "required": [
          "repo"
        ],
        "title": "CreateRepoResponse"
      },
      "CreateRoleRequest": {
        "properties": {
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "description",
          "permissions"
        ],
        "title": "CreateRoleRequest"
      },
      "CreateRunClusteringJobRequest": {
        "properties": {
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "last_n_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last N Hours"
          },
          "hierarchy": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hierarchy"
          },
          "partitions": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partitions"
          },
          "sample": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample"
          },
          "summary_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary Prompt"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "CreateRunClusteringJobRequest",
        "description": "Request to create a run clustering job."
      },
      "CreateRunClusteringJobResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "status"
        ],
        "title": "CreateRunClusteringJobResponse",
        "description": "Response to creating a run clustering job."
      },
      "CustomChartCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Index"
          },
          "chart_type": {
            "$ref": "#/components/schemas/CustomChartType"
          },
          "series": {
            "items": {
              "$ref": "#/components/schemas/CustomChartSeriesCreate"
            },
            "type": "array",
            "title": "Series"
          },
          "section_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Section Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "common_filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "title",
          "chart_type",
          "series"
        ],
        "title": "CustomChartCreate"
      },
      "CustomChartCreatePreview": {
        "properties": {
          "series": {
            "items": {
              "$ref": "#/components/schemas/CustomChartSeries"
            },
            "type": "array",
            "title": "Series"
          },
          "common_filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "series"
        ],
        "title": "CustomChartCreatePreview"
      },
      "CustomChartMetric": {
        "type": "string",
        "enum": [
          "run_count",
          "latency_p50",
          "latency_p99",
          "latency_avg",
          "first_token_p50",
          "first_token_p99",
          "total_tokens",
          "prompt_tokens",
          "completion_tokens",
          "median_tokens",
          "completion_tokens_p50",
          "prompt_tokens_p50",
          "tokens_p99",
          "completion_tokens_p99",
          "prompt_tokens_p99",
          "feedback",
          "feedback_score_avg",
          "feedback_values",
          "total_cost",
          "prompt_cost",
          "completion_cost",
          "error_rate",
          "streaming_rate",
          "cost_p50",
          "cost_p99"
        ],
        "title": "CustomChartMetric",
        "description": "Metrics you can chart. Feedback metrics are not available for organization-scoped charts."
      },
      "CustomChartPreviewRequest": {
        "properties": {
          "bucket_info": {
            "$ref": "#/components/schemas/CustomChartsRequestBase"
          },
          "chart": {
            "$ref": "#/components/schemas/CustomChartCreatePreview"
          }
        },
        "type": "object",
        "required": [
          "bucket_info",
          "chart"
        ],
        "title": "CustomChartPreviewRequest"
      },
      "CustomChartResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "chart_type": {
            "$ref": "#/components/schemas/CustomChartType"
          },
          "section_id": {
            "type": "string",
            "format": "uuid",
            "title": "Section Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "series": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CustomChartSeries"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "index",
          "chart_type",
          "section_id",
          "series"
        ],
        "title": "CustomChartResponse"
      },
      "CustomChartSeries": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          },
          "metric": {
            "$ref": "#/components/schemas/CustomChartMetric"
          },
          "feedback_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Key"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "project_metric": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/HostProjectChartMetric"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "group_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunStatsGroupBySeriesResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "metric",
          "id"
        ],
        "title": "CustomChartSeries"
      },
      "CustomChartSeriesCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          },
          "metric": {
            "$ref": "#/components/schemas/CustomChartMetric"
          },
          "feedback_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Key"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "project_metric": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/HostProjectChartMetric"
              },
              {
                "type": "null"
              }
            ]
          },
          "group_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunStatsGroupBy"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "metric"
        ],
        "title": "CustomChartSeriesCreate"
      },
      "CustomChartSeriesFilters": {
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "session": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session"
          }
        },
        "type": "object",
        "title": "CustomChartSeriesFilters"
      },
      "CustomChartSeriesUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          },
          "metric": {
            "$ref": "#/components/schemas/CustomChartMetric"
          },
          "feedback_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Key"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "project_metric": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/HostProjectChartMetric"
              },
              {
                "type": "null"
              }
            ]
          },
          "group_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunStatsGroupBy"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "metric"
        ],
        "title": "CustomChartSeriesUpdate"
      },
      "CustomChartType": {
        "type": "string",
        "enum": [
          "line",
          "bar"
        ],
        "title": "CustomChartType",
        "description": "Enum for custom chart types."
      },
      "CustomChartUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Title",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Index",
            "default": {
              "__missing__": "__missing__"
            },
            "ge": 0,
            "le": 100
          },
          "chart_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartType"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Chart Type",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "series": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CustomChartSeriesUpdate"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Series",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "section_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Section Id",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "common_filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Common Filters",
            "default": {
              "__missing__": "__missing__"
            }
          }
        },
        "type": "object",
        "title": "CustomChartUpdate"
      },
      "CustomChartsDataPoint": {
        "properties": {
          "series_id": {
            "type": "string",
            "title": "Series Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group"
          }
        },
        "type": "object",
        "required": [
          "series_id",
          "timestamp",
          "value"
        ],
        "title": "CustomChartsDataPoint"
      },
      "CustomChartsRequest": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "default": "UTC"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "stride": {
            "$ref": "#/components/schemas/TimedeltaInput",
            "default": {
              "days": 0,
              "hours": 0,
              "minutes": 15
            }
          },
          "omit_data": {
            "type": "boolean",
            "title": "Omit Data",
            "default": false
          },
          "after_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "After Index"
          },
          "tag_value_id": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Value Id"
          }
        },
        "type": "object",
        "title": "CustomChartsRequest"
      },
      "CustomChartsRequestBase": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "default": "UTC"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "stride": {
            "$ref": "#/components/schemas/TimedeltaInput",
            "default": {
              "days": 0,
              "hours": 0,
              "minutes": 15
            }
          },
          "omit_data": {
            "type": "boolean",
            "title": "Omit Data",
            "default": false
          }
        },
        "type": "object",
        "title": "CustomChartsRequestBase"
      },
      "CustomChartsResponse": {
        "properties": {
          "sections": {
            "items": {
              "$ref": "#/components/schemas/CustomChartsSection"
            },
            "type": "array",
            "title": "Sections"
          }
        },
        "type": "object",
        "required": [
          "sections"
        ],
        "title": "CustomChartsResponse"
      },
      "CustomChartsSection": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Index"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "charts": {
            "items": {
              "$ref": "#/components/schemas/SingleCustomChartResponse"
            },
            "type": "array",
            "title": "Charts"
          },
          "sub_sections": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SingleCustomChartSubSectionResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub Sections"
          }
        },
        "type": "object",
        "required": [
          "title",
          "id",
          "charts"
        ],
        "title": "CustomChartsSection"
      },
      "CustomChartsSectionCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Index"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "CustomChartsSectionCreate"
      },
      "CustomChartsSectionRequest": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "default": "UTC"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "stride": {
            "$ref": "#/components/schemas/TimedeltaInput",
            "default": {
              "days": 0,
              "hours": 0,
              "minutes": 15
            }
          },
          "omit_data": {
            "type": "boolean",
            "title": "Omit Data",
            "default": false
          },
          "group_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunStatsGroupBy"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "CustomChartsSectionRequest"
      },
      "CustomChartsSectionResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Index"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "chart_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chart Count"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "title",
          "id"
        ],
        "title": "CustomChartsSectionResponse"
      },
      "CustomChartsSectionUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Title",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/Missing"
              }
            ],
            "title": "Index",
            "default": {
              "__missing__": "__missing__"
            }
          }
        },
        "type": "object",
        "title": "CustomChartsSectionUpdate"
      },
      "CustomChartsSectionsCloneRequest": {
        "properties": {
          "section_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Section Id"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          }
        },
        "type": "object",
        "title": "CustomChartsSectionsCloneRequest"
      },
      "CustomerInfo": {
        "properties": {
          "customer_id": {
            "type": "string",
            "title": "Customer Id"
          },
          "customer_name": {
            "type": "string",
            "title": "Customer Name"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "customer_name"
        ],
        "title": "CustomerInfo",
        "description": "Customer info."
      },
      "CustomerVisiblePlanInfo": {
        "properties": {
          "tier": {
            "$ref": "#/components/schemas/PaymentPlanTier"
          },
          "started_on": {
            "type": "string",
            "format": "date-time",
            "title": "Started On"
          },
          "ends_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ends On"
          }
        },
        "type": "object",
        "required": [
          "tier",
          "started_on"
        ],
        "title": "CustomerVisiblePlanInfo",
        "description": "Customer visible plan information."
      },
      "DataType": {
        "type": "string",
        "enum": [
          "kv",
          "llm",
          "chat"
        ],
        "title": "DataType",
        "description": "Enum for dataset data types."
      },
      "Dataset": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "inputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Schema Definition"
          },
          "outputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Schema Definition"
          },
          "externally_managed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externally Managed",
            "default": false
          },
          "transformations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetTransformation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformations"
          },
          "data_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataType"
              },
              {
                "type": "null"
              }
            ],
            "default": "kv"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "example_count": {
            "type": "integer",
            "title": "Example Count"
          },
          "session_count": {
            "type": "integer",
            "title": "Session Count"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "last_session_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Session Start Time"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id",
          "example_count",
          "session_count",
          "modified_at"
        ],
        "title": "Dataset",
        "description": "Dataset schema."
      },
      "DatasetCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "inputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Schema Definition"
          },
          "outputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Schema Definition"
          },
          "externally_managed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externally Managed",
            "default": false
          },
          "transformations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetTransformation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformations"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "data_type": {
            "$ref": "#/components/schemas/DataType",
            "default": "kv"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DatasetCreate",
        "description": "Create class for Dataset."
      },
      "DatasetDiffInfo": {
        "properties": {
          "examples_modified": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples Modified"
          },
          "examples_added": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples Added"
          },
          "examples_removed": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples Removed"
          }
        },
        "type": "object",
        "required": [
          "examples_modified",
          "examples_added",
          "examples_removed"
        ],
        "title": "DatasetDiffInfo",
        "description": "Dataset diff schema."
      },
      "DatasetIndexInfo": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag",
            "default": "latest"
          },
          "last_updated_version": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated Version"
          }
        },
        "type": "object",
        "required": [
          "dataset_id"
        ],
        "title": "DatasetIndexInfo",
        "description": "Dataset schema for serving."
      },
      "DatasetIndexRequest": {
        "properties": {
          "tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag",
            "default": "latest"
          }
        },
        "type": "object",
        "title": "DatasetIndexRequest",
        "description": "Dataset schema for serving."
      },
      "DatasetPublicSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "inputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Schema Definition"
          },
          "outputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Schema Definition"
          },
          "externally_managed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externally Managed",
            "default": false
          },
          "transformations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetTransformation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformations"
          },
          "data_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataType"
              },
              {
                "type": "null"
              }
            ],
            "default": "kv"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "example_count": {
            "type": "integer",
            "title": "Example Count"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "example_count"
        ],
        "title": "DatasetPublicSchema",
        "description": "Public schema for datasets.\n\nDoesn't currently include session counts/stats\nsince public test project sharing is not yet shipped"
      },
      "DatasetSchemaForUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "inputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Schema Definition"
          },
          "outputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Schema Definition"
          },
          "externally_managed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externally Managed",
            "default": false
          },
          "transformations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetTransformation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformations"
          },
          "data_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataType"
              },
              {
                "type": "null"
              }
            ],
            "default": "kv"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id"
        ],
        "title": "DatasetSchemaForUpdate"
      },
      "DatasetShareSchema": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "share_token": {
            "type": "string",
            "format": "uuid",
            "title": "Share Token"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "share_token"
        ],
        "title": "DatasetShareSchema"
      },
      "DatasetTransformation": {
        "properties": {
          "path": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Path"
          },
          "transformation_type": {
            "$ref": "#/components/schemas/DatasetTransformationType"
          }
        },
        "type": "object",
        "required": [
          "path",
          "transformation_type"
        ],
        "title": "DatasetTransformation"
      },
      "DatasetTransformationType": {
        "type": "string",
        "enum": [
          "convert_to_openai_message",
          "convert_to_openai_tool",
          "remove_system_messages",
          "remove_extra_fields",
          "extract_tools_from_run"
        ],
        "title": "DatasetTransformationType",
        "description": "Enum for dataset transformation types.\nOrdering determines the order in which transformations are applied if there are multiple transformations on the same path."
      },
      "DatasetUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "inputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Schema Definition",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "outputs_schema_definition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Schema Definition",
            "default": {
              "__missing__": "__missing__"
            }
          },
          "patch_examples": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/ExampleUpdate"
                },
                "propertyNames": {
                  "format": "uuid"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patch Examples"
          },
          "transformations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetTransformation"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/Missing"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformations",
            "default": {
              "__missing__": "__missing__"
            }
          }
        },
        "type": "object",
        "title": "DatasetUpdate",
        "description": "Update class for Dataset."
      },
      "DatasetVersion": {
        "properties": {
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "as_of": {
            "type": "string",
            "format": "date-time",
            "title": "As Of"
          }
        },
        "type": "object",
        "required": [
          "as_of"
        ],
        "title": "DatasetVersion",
        "description": "Dataset version schema."
      },
      "DeleteRunClusteringJobResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "id",
          "message"
        ],
        "title": "DeleteRunClusteringJobResponse",
        "description": "Response to delete a session cluster job."
      },
      "DemoConfig": {
        "properties": {
          "message_index": {
            "type": "integer",
            "title": "Message Index"
          },
          "metaprompt": {
            "type": "object",
            "title": "Metaprompt"
          },
          "examples": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Examples"
          },
          "overall_feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overall Feedback"
          }
        },
        "type": "object",
        "required": [
          "message_index",
          "metaprompt",
          "examples",
          "overall_feedback"
        ],
        "title": "DemoConfig"
      },
      "EPromptOptimizationAlgorithm": {
        "type": "string",
        "enum": [
          "promptim",
          "demo"
        ],
        "title": "EPromptOptimizationAlgorithm"
      },
      "EPromptOptimizationJobLogType": {
        "type": "string",
        "enum": [
          "info",
          "result",
          "error",
          "link"
        ],
        "title": "EPromptOptimizationJobLogType"
      },
      "EPromptOptimizationJobStatus": {
        "type": "string",
        "enum": [
          "created",
          "running",
          "successful",
          "failed"
        ],
        "title": "EPromptOptimizationJobStatus"
      },
      "EPromptWebhookTrigger": {
        "type": "string",
        "enum": [
          "commit",
          "tag:create",
          "tag:update"
        ],
        "title": "EPromptWebhookTrigger",
        "description": "Valid trigger types for prompt webhooks."
      },
      "EvaluatorStructuredOutput": {
        "properties": {
          "hub_ref": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hub Ref"
          },
          "prompt": {
            "anyOf": [
              {
                "items": {
                  "prefixItems": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 2
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt"
          },
          "template_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Format"
          },
          "schema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema"
          },
          "variable_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variable Mapping"
          },
          "model": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          }
        },
        "type": "object",
        "title": "EvaluatorStructuredOutput",
        "description": "Evaluator structured output schema."
      },
      "EvaluatorTopLevel": {
        "properties": {
          "structured": {
            "$ref": "#/components/schemas/EvaluatorStructuredOutput"
          }
        },
        "type": "object",
        "required": [
          "structured"
        ],
        "title": "EvaluatorTopLevel"
      },
      "Example": {
        "properties": {
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "attachment_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Urls"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "inputs",
          "id",
          "name"
        ],
        "title": "Example",
        "description": "Example schema."
      },
      "ExampleListOrder": {
        "type": "string",
        "enum": [
          "recent",
          "random",
          "recently_created",
          "id"
        ],
        "title": "ExampleListOrder"
      },
      "ExampleSelect": {
        "type": "string",
        "enum": [
          "id",
          "created_at",
          "modified_at",
          "name",
          "dataset_id",
          "source_run_id",
          "metadata",
          "inputs",
          "outputs",
          "attachment_urls"
        ],
        "title": "ExampleSelect"
      },
      "ExampleUpdate": {
        "properties": {
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "attachments_operations": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttachmentsOperations"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "split": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Split"
          },
          "overwrite": {
            "type": "boolean",
            "title": "Overwrite",
            "default": false
          }
        },
        "type": "object",
        "title": "ExampleUpdate",
        "description": "Update class for Example."
      },
      "ExampleUpdateWithID": {
        "properties": {
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "attachments_operations": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttachmentsOperations"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "split": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Split"
          },
          "overwrite": {
            "type": "boolean",
            "title": "Overwrite",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "ExampleUpdateWithID",
        "description": "Bulk update class for Example (includes example id)."
      },
      "ExampleValidationResult": {
        "properties": {
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "split": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Split",
            "default": "base"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "use_source_run_io": {
            "type": "boolean",
            "title": "Use Source Run Io",
            "default": false
          },
          "overwrite": {
            "type": "boolean",
            "title": "Overwrite",
            "default": false
          }
        },
        "type": "object",
        "title": "ExampleValidationResult",
        "description": "Validation result for Example, combining fields from Create/Base/Update schemas."
      },
      "ExampleWithRuns": {
        "properties": {
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "attachment_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Urls"
          },
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunSchema"
            },
            "type": "array",
            "title": "Runs"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "inputs",
          "id",
          "name",
          "runs"
        ],
        "title": "ExampleWithRuns",
        "description": "Example schema with list of runs."
      },
      "ExampleWithRunsCH": {
        "properties": {
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "attachment_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Urls"
          },
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunSchemaComparisonView"
            },
            "type": "array",
            "title": "Runs"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "inputs",
          "id",
          "name",
          "runs"
        ],
        "title": "ExampleWithRunsCH",
        "description": "Example schema with list of runs."
      },
      "ExampleWithRunsGroup": {
        "properties": {
          "filter": {
            "type": "string",
            "title": "Filter"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "min_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Start Time"
          },
          "max_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Start Time"
          },
          "latency_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P50"
          },
          "latency_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P99"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "group_key": {
            "title": "Group Key"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ExampleWithRuns"
                },
                "type": "array"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ExampleWithRunsCH"
                },
                "type": "array"
              }
            ],
            "title": "Examples"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          }
        },
        "type": "object",
        "required": [
          "filter",
          "group_key",
          "examples"
        ],
        "title": "ExampleWithRunsGroup",
        "description": "Group of examples with runs."
      },
      "ExperimentResultRow": {
        "properties": {
          "row_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Row Id"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "expected_outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Outputs"
          },
          "actual_outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Outputs"
          },
          "evaluation_scores": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeedbackCreateCoreSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Scores"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Name"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "run_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Metadata"
          }
        },
        "type": "object",
        "required": [
          "inputs",
          "start_time",
          "end_time"
        ],
        "title": "ExperimentResultRow",
        "description": "Class for a single row in the uploaded experiment results."
      },
      "ExperimentResultsUpload": {
        "properties": {
          "experiment_name": {
            "type": "string",
            "title": "Experiment Name"
          },
          "experiment_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Experiment Description"
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Name"
          },
          "dataset_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Description"
          },
          "summary_experiment_scores": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeedbackCreateCoreSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary Experiment Scores"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/ExperimentResultRow"
            },
            "type": "array",
            "title": "Results"
          },
          "experiment_start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Experiment Start Time"
          },
          "experiment_end_time": {
            "type": "string",
            "format": "date-time",
            "title": "Experiment End Time"
          },
          "experiment_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Experiment Metadata"
          }
        },
        "type": "object",
        "required": [
          "experiment_name",
          "results",
          "experiment_start_time",
          "experiment_end_time"
        ],
        "title": "ExperimentResultsUpload",
        "description": "Class for uploading the results of an already-run experiment."
      },
      "ExperimentResultsUploadResult": {
        "properties": {
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "experiment": {
            "$ref": "#/components/schemas/TracerSession"
          }
        },
        "type": "object",
        "required": [
          "dataset",
          "experiment"
        ],
        "title": "ExperimentResultsUploadResult",
        "description": "Class for uploading the results of an already-run experiment."
      },
      "ExportAnnotationQueueRunsRequest": {
        "properties": {
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          }
        },
        "type": "object",
        "title": "ExportAnnotationQueueRunsRequest",
        "description": "Export annotation queue runs request schema."
      },
      "FeedbackCategory": {
        "properties": {
          "value": {
            "type": "number",
            "title": "Value"
          },
          "label": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "FeedbackCategory",
        "description": "Specific value and label pair for feedback"
      },
      "FeedbackConfig": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FeedbackType"
          },
          "min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min"
          },
          "max": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeedbackCategory"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "FeedbackConfig"
      },
      "FeedbackConfigSchema": {
        "properties": {
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "feedback_config": {
            "$ref": "#/components/schemas/FeedbackConfig"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "is_lower_score_better": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Lower Score Better"
          }
        },
        "type": "object",
        "required": [
          "feedback_key",
          "feedback_config",
          "tenant_id",
          "modified_at"
        ],
        "title": "FeedbackConfigSchema"
      },
      "FeedbackCreateCoreSchema": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "key": {
            "type": "string",
            "maxLength": 180,
            "title": "Key"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_group_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Group Id"
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "feedback_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AppFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/APIFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/ModelFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/AutoEvalFeedbackSource"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Source"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "FeedbackCreateCoreSchema",
        "description": "Schema used for creating feedback without run id or session id."
      },
      "FeedbackCreateSchema": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "key": {
            "type": "string",
            "maxLength": 180,
            "title": "Key"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_group_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Group Id"
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "trace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "feedback_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AppFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/APIFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/ModelFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/AutoEvalFeedbackSource"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Source"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "FeedbackCreateSchema",
        "description": "Schema used for creating feedback."
      },
      "FeedbackCreateWithTokenExtendedSchema": {
        "properties": {
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "FeedbackCreateWithTokenExtendedSchema",
        "description": "Feedback create schema with token."
      },
      "FeedbackDelta": {
        "properties": {
          "improved_examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Improved Examples"
          },
          "regressed_examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Regressed Examples"
          }
        },
        "type": "object",
        "required": [
          "improved_examples",
          "regressed_examples"
        ],
        "title": "FeedbackDelta",
        "description": "Feedback key with number of improvements and regressions."
      },
      "FeedbackIngestTokenCreateSchema": {
        "properties": {
          "expires_in": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TimedeltaInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "run_id",
          "feedback_key"
        ],
        "title": "FeedbackIngestTokenCreateSchema",
        "description": "Feedback ingest token create schema."
      },
      "FeedbackIngestTokenSchema": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          }
        },
        "type": "object",
        "required": [
          "id",
          "url",
          "expires_at",
          "feedback_key"
        ],
        "title": "FeedbackIngestTokenSchema",
        "description": "Feedback ingest token schema."
      },
      "FeedbackLevel": {
        "type": "string",
        "enum": [
          "run",
          "session"
        ],
        "title": "FeedbackLevel",
        "description": "Enum for feedback levels."
      },
      "FeedbackSchema": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_group_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Group Id"
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "trace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Id"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "feedback_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackSource"
              },
              {
                "type": "null"
              }
            ]
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "key",
          "id"
        ],
        "title": "FeedbackSchema",
        "description": "Schema for getting feedback."
      },
      "FeedbackSource": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "ls_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ls User Id"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name"
          }
        },
        "type": "object",
        "title": "FeedbackSource",
        "description": "The feedback source loaded from the database."
      },
      "FeedbackType": {
        "type": "string",
        "enum": [
          "continuous",
          "categorical",
          "freeform"
        ],
        "title": "FeedbackType",
        "description": "Enum for feedback types."
      },
      "FeedbackUpdateSchema": {
        "properties": {
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "FeedbackUpdateSchema",
        "description": "Schema used for updating feedback"
      },
      "FetchClusteringJobRunsResult": {
        "properties": {
          "runs": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Runs"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offset"
          }
        },
        "type": "object",
        "required": [
          "runs",
          "offset"
        ],
        "title": "FetchClusteringJobRunsResult"
      },
      "FilterView": {
        "properties": {
          "filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter String"
          },
          "trace_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter String"
          },
          "tree_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter String"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/FilterViewType",
            "default": "runs"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "FilterView"
      },
      "FilterViewCreate": {
        "properties": {
          "filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter String"
          },
          "trace_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter String"
          },
          "tree_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter String"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/FilterViewType",
            "default": "runs"
          }
        },
        "type": "object",
        "required": [
          "display_name"
        ],
        "title": "FilterViewCreate"
      },
      "FilterViewType": {
        "type": "string",
        "enum": [
          "runs",
          "threads"
        ],
        "title": "FilterViewType"
      },
      "FilterViewUpdate": {
        "properties": {
          "filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter String"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "trace_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter String"
          },
          "tree_filter_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter String"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FilterViewType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "FilterViewUpdate"
      },
      "ForkRepoRequest": {
        "properties": {
          "repo_handle": {
            "type": "string",
            "title": "Repo Handle"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          }
        },
        "type": "object",
        "required": [
          "repo_handle"
        ],
        "title": "ForkRepoRequest",
        "description": "Fields to fork a repo"
      },
      "FunctionMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "function",
            "title": "Type",
            "default": "function"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "name"
        ],
        "title": "FunctionMessage",
        "description": "Message for passing the result of executing a tool back to a model.\n\nFunctionMessage are an older version of the ToolMessage schema, and\ndo not contain the tool_call_id field.\n\nThe tool_call_id field is used to associate the tool call request with the\ntool call response. This is useful in situations where a chat model is able\nto request multiple tool calls in parallel."
      },
      "FunctionMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "FunctionMessageChunk",
            "title": "Type",
            "default": "FunctionMessageChunk"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "name"
        ],
        "title": "FunctionMessageChunk",
        "description": "Function Message chunk."
      },
      "GenerateSyntheticExamplesBody": {
        "properties": {
          "example_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Ids"
          },
          "num_examples": {
            "type": "integer",
            "title": "Num Examples"
          }
        },
        "type": "object",
        "required": [
          "num_examples"
        ],
        "title": "GenerateSyntheticExamplesBody"
      },
      "GetRepoResponse": {
        "properties": {
          "repo": {
            "$ref": "#/components/schemas/RepoWithLookups"
          }
        },
        "type": "object",
        "required": [
          "repo"
        ],
        "title": "GetRepoResponse"
      },
      "GetRunClusterResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "num_children": {
            "type": "integer",
            "title": "Num Children"
          },
          "level": {
            "type": "integer",
            "title": "Level"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id",
          "num_children",
          "level",
          "name",
          "description"
        ],
        "title": "GetRunClusterResponse",
        "description": "Response to get a specific cluster from a specific cluster job."
      },
      "GetRunClusteringJobResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "shape": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shape"
          },
          "clusters": {
            "items": {
              "$ref": "#/components/schemas/RunCluster"
            },
            "type": "array",
            "title": "Clusters"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "status",
          "clusters"
        ],
        "title": "GetRunClusteringJobResponse",
        "description": "Response to get a specific cluster job for a session."
      },
      "GetRunClusteringJobsResponse": {
        "properties": {
          "clustering_jobs": {
            "items": {
              "$ref": "#/components/schemas/RunClusteringJobPydantic"
            },
            "type": "array",
            "title": "Clustering Jobs"
          }
        },
        "type": "object",
        "required": [
          "clustering_jobs"
        ],
        "title": "GetRunClusteringJobsResponse",
        "description": "Response to get all cluster jobs for a session."
      },
      "GroupExampleRunsByField": {
        "type": "string",
        "enum": [
          "run_metadata",
          "example_metadata"
        ],
        "title": "GroupExampleRunsByField"
      },
      "GroupedExamplesWithRunsResponse": {
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/ExampleWithRunsGroup"
            },
            "type": "array",
            "title": "Groups"
          }
        },
        "type": "object",
        "required": [
          "groups"
        ],
        "title": "GroupedExamplesWithRunsResponse",
        "description": "Grouped examples with runs."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthInfoGetResponse": {
        "properties": {
          "clickhouse_disk_free_pct": {
            "type": "number",
            "title": "Clickhouse Disk Free Pct"
          }
        },
        "type": "object",
        "required": [
          "clickhouse_disk_free_pct"
        ],
        "title": "HealthInfoGetResponse",
        "description": "The LangSmith server info."
      },
      "Highlight": {
        "properties": {
          "prompt_chunk_start_index": {
            "type": "integer",
            "title": "Prompt Chunk Start Index"
          },
          "prompt_chunk_end_index": {
            "type": "integer",
            "title": "Prompt Chunk End Index"
          },
          "prompt_chunk": {
            "type": "string",
            "title": "Prompt Chunk"
          },
          "highlight_text": {
            "type": "string",
            "title": "Highlight Text"
          }
        },
        "type": "object",
        "required": [
          "prompt_chunk_start_index",
          "prompt_chunk_end_index",
          "prompt_chunk",
          "highlight_text"
        ],
        "title": "Highlight"
      },
      "HostProjectChartMetric": {
        "type": "string",
        "enum": [
          "memory_usage",
          "cpu_usage",
          "disk_usage",
          "restart_count",
          "replica_count",
          "worker_count",
          "lg_run_count",
          "responses_per_second",
          "error_responses_per_second",
          "p95_latency"
        ],
        "title": "HostProjectChartMetric",
        "description": "LGP Metrics you can chart."
      },
      "HumanMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "human",
            "title": "Type",
            "default": "human"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "example": {
            "type": "boolean",
            "title": "Example",
            "default": false
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "HumanMessage",
        "description": "Message from a human.\n\nHumanMessages are messages that are passed in from a human to the model.\n\nExample:\n\n    .. code-block:: python\n\n        from langchain_core.messages import HumanMessage, SystemMessage\n\n        messages = [\n            SystemMessage(\n                content=\"You are a helpful assistant! Your name is Bob.\"\n            ),\n            HumanMessage(\n                content=\"What is your name?\"\n            )\n        ]\n\n        # Instantiate a chat model and invoke it with the messages\n        model = ...\n        print(model.invoke(messages))"
      },
      "HumanMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "HumanMessageChunk",
            "title": "Type",
            "default": "HumanMessageChunk"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "example": {
            "type": "boolean",
            "title": "Example",
            "default": false
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "HumanMessageChunk",
        "description": "Human Message chunk."
      },
      "Identity": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "ls_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ls User Id"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope",
            "default": "workspace"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "created_at",
          "user_id",
          "ls_user_id",
          "read_only"
        ],
        "title": "Identity"
      },
      "IdentityAnnotationQueueRunStatusCreateSchema": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "override_added_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Added At"
          }
        },
        "type": "object",
        "title": "IdentityAnnotationQueueRunStatusCreateSchema",
        "description": "Identity annotation queue run status create schema."
      },
      "IdentityCreate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "deprecated": true
          },
          "org_identity_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Identity Id"
          },
          "ls_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ls User Id"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          }
        },
        "type": "object",
        "title": "IdentityCreate"
      },
      "IdentityPatch": {
        "properties": {
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only"
          },
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "role_id"
        ],
        "title": "IdentityPatch"
      },
      "InfoGetResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          },
          "license_expiration_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Expiration Time"
          },
          "batch_ingest_config": {
            "$ref": "#/components/schemas/BatchIngestConfig"
          },
          "instance_flags": {
            "type": "object",
            "title": "Instance Flags"
          },
          "customer_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "InfoGetResponse",
        "description": "The LangSmith server info."
      },
      "InputTokenDetails": {
        "properties": {
          "audio": {
            "type": "integer",
            "title": "Audio"
          },
          "cache_creation": {
            "type": "integer",
            "title": "Cache Creation"
          },
          "cache_read": {
            "type": "integer",
            "title": "Cache Read"
          }
        },
        "type": "object",
        "title": "InputTokenDetails",
        "description": "Breakdown of input token counts.\n\nDoes *not* need to sum to full input token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"cache_creation\": 200,\n            \"cache_read\": 100,\n        }\n\n.. versionadded:: 0.3.9\n\nMay also hold extra provider-specific keys."
      },
      "InvalidToolCall": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "args": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "type": {
            "type": "string",
            "const": "invalid_tool_call",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "name",
          "args",
          "id",
          "error"
        ],
        "title": "InvalidToolCall",
        "description": "Allowance for errors made by LLM.\n\nHere we add an `error` key to surface errors made during generation\n(e.g., invalid JSON arguments.)"
      },
      "InvokePromptPayload": {
        "properties": {
          "messages": {
            "items": {
              "prefixItems": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Messages"
          },
          "template_format": {
            "type": "string",
            "title": "Template Format"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          }
        },
        "type": "object",
        "required": [
          "messages",
          "template_format",
          "inputs"
        ],
        "title": "InvokePromptPayload"
      },
      "LikeRepoRequest": {
        "properties": {
          "like": {
            "type": "boolean",
            "title": "Like"
          }
        },
        "type": "object",
        "required": [
          "like"
        ],
        "title": "LikeRepoRequest"
      },
      "LikeRepoResponse": {
        "properties": {
          "likes": {
            "type": "integer",
            "title": "Likes"
          }
        },
        "type": "object",
        "required": [
          "likes"
        ],
        "title": "LikeRepoResponse"
      },
      "ListCommentsResponse": {
        "properties": {
          "comments": {
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "type": "array",
            "title": "Comments"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "comments",
          "total"
        ],
        "title": "ListCommentsResponse"
      },
      "ListCommitsResponse": {
        "properties": {
          "commits": {
            "items": {
              "$ref": "#/components/schemas/CommitWithLookups"
            },
            "type": "array",
            "title": "Commits"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "commits",
          "total"
        ],
        "title": "ListCommitsResponse"
      },
      "ListPublicDatasetRunsResponse": {
        "properties": {
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunPublicDatasetSchema"
            },
            "type": "array",
            "title": "Runs"
          },
          "cursors": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Cursors"
          },
          "parsed_query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parsed Query"
          }
        },
        "type": "object",
        "required": [
          "runs",
          "cursors"
        ],
        "title": "ListPublicDatasetRunsResponse"
      },
      "ListPublicRunsResponse": {
        "properties": {
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunPublicSchema"
            },
            "type": "array",
            "title": "Runs"
          },
          "cursors": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Cursors"
          },
          "parsed_query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parsed Query"
          }
        },
        "type": "object",
        "required": [
          "runs",
          "cursors"
        ],
        "title": "ListPublicRunsResponse"
      },
      "ListReposResponse": {
        "properties": {
          "repos": {
            "items": {
              "$ref": "#/components/schemas/RepoWithLookups"
            },
            "type": "array",
            "title": "Repos"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "repos",
          "total"
        ],
        "title": "ListReposResponse"
      },
      "ListRunsResponse": {
        "properties": {
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunSchema"
            },
            "type": "array",
            "title": "Runs"
          },
          "cursors": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Cursors"
          },
          "search_cursors": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Cursors"
          },
          "parsed_query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parsed Query"
          }
        },
        "type": "object",
        "required": [
          "runs",
          "cursors"
        ],
        "title": "ListRunsResponse"
      },
      "ListTagsForResourceRequest": {
        "properties": {
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          },
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          }
        },
        "type": "object",
        "required": [
          "resource_id",
          "resource_type"
        ],
        "title": "ListTagsForResourceRequest"
      },
      "ListTagsResponse": {
        "properties": {
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagCount"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "tags"
        ],
        "title": "ListTagsResponse"
      },
      "MemberIdentity": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "ls_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ls User Id"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope",
            "default": "workspace"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "linked_login_methods": {
            "items": {
              "$ref": "#/components/schemas/ProviderUserSlim"
            },
            "type": "array",
            "title": "Linked Login Methods",
            "default": []
          },
          "org_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Id"
          },
          "org_role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "created_at",
          "user_id",
          "ls_user_id",
          "read_only"
        ],
        "title": "MemberIdentity"
      },
      "Missing": {
        "properties": {
          "__missing__": {
            "type": "string",
            "const": "__missing__",
            "title": "Missing"
          }
        },
        "type": "object",
        "required": [
          "__missing__"
        ],
        "title": "Missing"
      },
      "ModelFeedbackSource": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "model"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "ModelFeedbackSource",
        "description": "Model feedback source."
      },
      "ModelPriceMapCreateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "match_path": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Match Path",
            "default": [
              "model",
              "model_name",
              "model_id",
              "model_path",
              "endpoint_name"
            ]
          },
          "match_pattern": {
            "type": "string",
            "title": "Match Pattern"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Completion Cost"
          },
          "prompt_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost Details"
          },
          "completion_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost Details"
          },
          "provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider"
          }
        },
        "type": "object",
        "required": [
          "name",
          "match_pattern",
          "prompt_cost",
          "completion_cost"
        ],
        "title": "ModelPriceMapCreateSchema",
        "description": "Model price map create schema."
      },
      "ModelPriceMapUpdateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "match_path": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Match Path",
            "default": [
              "model",
              "model_name",
              "model_id",
              "model_path",
              "endpoint_name"
            ]
          },
          "match_pattern": {
            "type": "string",
            "title": "Match Pattern"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Completion Cost"
          },
          "prompt_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost Details"
          },
          "completion_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost Details"
          },
          "provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider"
          }
        },
        "type": "object",
        "required": [
          "name",
          "match_pattern",
          "prompt_cost",
          "completion_cost"
        ],
        "title": "ModelPriceMapUpdateSchema",
        "description": "Model price map update schema."
      },
      "OAuthProvider": {
        "type": "string",
        "enum": [
          "custom-oidc"
        ],
        "title": "OAuthProvider"
      },
      "OptimizePromptJobRequest": {
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/EPromptOptimizationAlgorithm"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptimConfig"
              },
              {
                "$ref": "#/components/schemas/DemoConfig"
              }
            ],
            "title": "Config"
          },
          "prompt_name": {
            "type": "string",
            "title": "Prompt Name"
          }
        },
        "type": "object",
        "required": [
          "algorithm",
          "config",
          "prompt_name"
        ],
        "title": "OptimizePromptJobRequest",
        "description": "Request to optimize a prompt."
      },
      "OptimizePromptResponse": {
        "properties": {
          "optimization_job_id": {
            "type": "string",
            "format": "uuid",
            "title": "Optimization Job Id"
          }
        },
        "type": "object",
        "required": [
          "optimization_job_id"
        ],
        "title": "OptimizePromptResponse",
        "description": "Response from optimizing a prompt."
      },
      "OrgIdentityPatch": {
        "properties": {
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          }
        },
        "type": "object",
        "title": "OrgIdentityPatch"
      },
      "OrgMemberIdentity": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "ls_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ls User Id"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope",
            "default": "workspace"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "linked_login_methods": {
            "items": {
              "$ref": "#/components/schemas/ProviderUserSlim"
            },
            "type": "array",
            "title": "Linked Login Methods",
            "default": []
          },
          "org_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Id"
          },
          "org_role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Name"
          },
          "tenant_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Tenant Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "created_at",
          "user_id",
          "ls_user_id",
          "read_only"
        ],
        "title": "OrgMemberIdentity"
      },
      "OrgPendingIdentity": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "workspace_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Ids"
          },
          "workspace_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Role Id"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope",
            "default": "workspace"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "org_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Id"
          },
          "org_role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Name"
          },
          "tenant_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Tenant Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "created_at"
        ],
        "title": "OrgPendingIdentity"
      },
      "OrgUsage": {
        "properties": {
          "customer_id": {
            "type": "string",
            "title": "Customer Id"
          },
          "billable_metric_id": {
            "type": "string",
            "title": "Billable Metric Id"
          },
          "billable_metric_name": {
            "type": "string",
            "title": "Billable Metric Name"
          },
          "start_timestamp": {
            "type": "string",
            "title": "Start Timestamp"
          },
          "end_timestamp": {
            "type": "string",
            "title": "End Timestamp"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "groups": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Groups"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "billable_metric_id",
          "billable_metric_name",
          "start_timestamp",
          "end_timestamp",
          "value",
          "groups"
        ],
        "title": "OrgUsage"
      },
      "Organization": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "config": {
            "$ref": "#/components/schemas/OrganizationConfig"
          },
          "connected_to_stripe": {
            "type": "boolean",
            "title": "Connected To Stripe"
          },
          "connected_to_metronome": {
            "type": "boolean",
            "title": "Connected To Metronome"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentPlanTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "payment_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripePaymentMethodInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_cancelled": {
            "type": "boolean",
            "title": "Has Cancelled"
          },
          "end_of_billing_period": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Of Billing Period"
          },
          "current_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerVisiblePlanInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "upcoming_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerVisiblePlanInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "reached_max_workspaces": {
            "type": "boolean",
            "title": "Reached Max Workspaces",
            "default": false
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions",
            "default": []
          },
          "marketplace_payouts_enabled": {
            "type": "boolean",
            "title": "Marketplace Payouts Enabled",
            "default": false
          },
          "wallet": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Wallet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "config",
          "connected_to_stripe",
          "connected_to_metronome",
          "is_personal",
          "has_cancelled"
        ],
        "title": "Organization",
        "description": "Information about an organization."
      },
      "OrganizationBillingInfo": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "config": {
            "$ref": "#/components/schemas/OrganizationConfig"
          },
          "connected_to_stripe": {
            "type": "boolean",
            "title": "Connected To Stripe"
          },
          "connected_to_metronome": {
            "type": "boolean",
            "title": "Connected To Metronome"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentPlanTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "payment_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripePaymentMethodInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "end_of_billing_period": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Of Billing Period"
          },
          "current_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerVisiblePlanInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "upcoming_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerVisiblePlanInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "reached_max_workspaces": {
            "type": "boolean",
            "title": "Reached Max Workspaces",
            "default": false
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "config",
          "connected_to_stripe",
          "connected_to_metronome",
          "is_personal"
        ],
        "title": "OrganizationBillingInfo",
        "description": "Information about an organization's billing configuration."
      },
      "OrganizationConfig": {
        "properties": {
          "max_identities": {
            "type": "integer",
            "title": "Max Identities",
            "default": 5
          },
          "max_workspaces": {
            "type": "integer",
            "title": "Max Workspaces",
            "default": 1
          },
          "can_use_rbac": {
            "type": "boolean",
            "title": "Can Use Rbac",
            "default": false
          },
          "can_add_seats": {
            "type": "boolean",
            "title": "Can Add Seats",
            "default": true
          },
          "startup_plan_approval_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Startup Plan Approval Date"
          },
          "partner_plan_approval_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Plan Approval Date"
          },
          "premier_plan_approval_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Premier Plan Approval Date"
          },
          "can_disable_public_sharing": {
            "type": "boolean",
            "title": "Can Disable Public Sharing",
            "default": false
          },
          "can_serve_datasets": {
            "type": "boolean",
            "title": "Can Serve Datasets",
            "default": false
          },
          "can_use_langgraph_cloud": {
            "type": "boolean",
            "title": "Can Use Langgraph Cloud",
            "default": false
          },
          "max_langgraph_cloud_deployments": {
            "type": "integer",
            "title": "Max Langgraph Cloud Deployments",
            "default": 3
          },
          "max_free_langgraph_cloud_deployments": {
            "type": "integer",
            "title": "Max Free Langgraph Cloud Deployments",
            "default": 0
          },
          "can_use_saml_sso": {
            "type": "boolean",
            "title": "Can Use Saml Sso",
            "default": false
          },
          "can_use_bulk_export": {
            "type": "boolean",
            "title": "Can Use Bulk Export",
            "default": false
          },
          "use_python_playground_service": {
            "type": "boolean",
            "title": "Use Python Playground Service",
            "default": false
          },
          "show_updated_sidenav": {
            "type": "boolean",
            "title": "Show Updated Sidenav",
            "default": false
          },
          "show_updated_resource_tags": {
            "type": "boolean",
            "title": "Show Updated Resource Tags",
            "default": false
          },
          "kv_dataset_message_support": {
            "type": "boolean",
            "title": "Kv Dataset Message Support",
            "default": true
          },
          "show_playground_prompt_canvas": {
            "type": "boolean",
            "title": "Show Playground Prompt Canvas",
            "default": false
          },
          "allow_custom_iframes": {
            "type": "boolean",
            "title": "Allow Custom Iframes",
            "default": false
          },
          "enable_langgraph_pricing": {
            "type": "boolean",
            "title": "Enable Langgraph Pricing",
            "default": false
          },
          "enable_thread_view_playground": {
            "type": "boolean",
            "title": "Enable Thread View Playground",
            "default": false
          },
          "enable_org_usage_charts": {
            "type": "boolean",
            "title": "Enable Org Usage Charts",
            "default": false
          },
          "use_exact_search_for_prompts": {
            "type": "boolean",
            "title": "Use Exact Search For Prompts",
            "default": false
          },
          "langgraph_deploy_own_cloud_enabled": {
            "type": "boolean",
            "title": "Langgraph Deploy Own Cloud Enabled",
            "default": false
          },
          "prompt_optimization_jobs_enabled": {
            "type": "boolean",
            "title": "Prompt Optimization Jobs Enabled",
            "default": false
          },
          "enable_k8s_vanilla_platform": {
            "type": "boolean",
            "title": "Enable K8S Vanilla Platform",
            "default": false
          },
          "demo_lgp_new_graph_enabled": {
            "type": "boolean",
            "title": "Demo Lgp New Graph Enabled",
            "default": false
          },
          "datadog_rum_session_sample_rate": {
            "type": "integer",
            "title": "Datadog Rum Session Sample Rate",
            "default": 20
          },
          "langgraph_remote_reconciler_enabled": {
            "type": "boolean",
            "title": "Langgraph Remote Reconciler Enabled",
            "default": false
          },
          "langsmith_alerts_poc_enabled": {
            "type": "boolean",
            "title": "Langsmith Alerts Poc Enabled",
            "default": true
          },
          "tenant_skip_topk_facets": {
            "type": "boolean",
            "title": "Tenant Skip Topk Facets",
            "default": false
          },
          "lgp_templates_enabled": {
            "type": "boolean",
            "title": "Lgp Templates Enabled",
            "default": false
          },
          "langsmith_alerts_legacy_poc_enabled": {
            "type": "boolean",
            "title": "Langsmith Alerts Legacy Poc Enabled",
            "default": false
          },
          "langsmith_experimental_search_enabled": {
            "type": "boolean",
            "title": "Langsmith Experimental Search Enabled",
            "default": false
          },
          "enable_align_evaluators": {
            "type": "boolean",
            "title": "Enable Align Evaluators",
            "default": false
          },
          "enable_run_tree_streaming": {
            "type": "boolean",
            "title": "Enable Run Tree Streaming",
            "default": false
          },
          "max_prompt_webhooks": {
            "type": "integer",
            "title": "Max Prompt Webhooks",
            "default": 1
          },
          "playground_evaluator_strategy": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Playground Evaluator Strategy",
            "default": "sync"
          },
          "enable_monthly_usage_charts": {
            "type": "boolean",
            "title": "Enable Monthly Usage Charts",
            "default": false
          },
          "enable_lgp_metrics_charts": {
            "type": "boolean",
            "title": "Enable Lgp Metrics Charts",
            "default": false
          },
          "new_rule_evaluator_creation_version": {
            "type": "integer",
            "title": "New Rule Evaluator Creation Version",
            "default": 2
          },
          "org_scoped_service_accounts_enabled": {
            "type": "boolean",
            "title": "Org Scoped Service Accounts Enabled",
            "default": false
          },
          "enable_lgp_listeners_page": {
            "type": "boolean",
            "title": "Enable Lgp Listeners Page",
            "default": false
          },
          "show_grace_period_warning_banner": {
            "type": "boolean",
            "title": "Show Grace Period Warning Banner",
            "default": true
          },
          "clio_enabled": {
            "type": "boolean",
            "title": "Clio Enabled",
            "default": false
          },
          "enable_include_extended_stats": {
            "type": "boolean",
            "title": "Enable Include Extended Stats",
            "default": false
          }
        },
        "type": "object",
        "title": "OrganizationConfig",
        "description": "Organization level configuration. May include any field that exists in tenant config and additional fields."
      },
      "OrganizationCreate": {
        "properties": {
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ ]+$",
            "title": "Display Name"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "is_personal"
        ],
        "title": "OrganizationCreate",
        "description": "Create organization schema."
      },
      "OrganizationDashboardColorScheme": {
        "type": "string",
        "enum": [
          "light",
          "dark"
        ],
        "title": "OrganizationDashboardColorScheme",
        "description": "Enum for acceptable color schemes of dashboards."
      },
      "OrganizationDashboardSchema": {
        "properties": {
          "embeddable_url": {
            "type": "string",
            "title": "Embeddable Url"
          }
        },
        "type": "object",
        "required": [
          "embeddable_url"
        ],
        "title": "OrganizationDashboardSchema",
        "description": "Organization dashboard for usage or invoices."
      },
      "OrganizationDashboardType": {
        "type": "string",
        "enum": [
          "invoices",
          "usage",
          "credits"
        ],
        "title": "OrganizationDashboardType",
        "description": "Enum for acceptable types of dashboards."
      },
      "OrganizationInfo": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "config": {
            "$ref": "#/components/schemas/OrganizationConfig"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentPlanTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "reached_max_workspaces": {
            "type": "boolean",
            "title": "Reached Max Workspaces",
            "default": false
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions",
            "default": []
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled",
            "default": false
          },
          "sso_only": {
            "type": "boolean",
            "title": "Sso Only",
            "default": false
          },
          "jit_provisioning_enabled": {
            "type": "boolean",
            "title": "Jit Provisioning Enabled",
            "default": true
          },
          "sso_login_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sso Login Slug"
          },
          "public_sharing_disabled": {
            "type": "boolean",
            "title": "Public Sharing Disabled",
            "default": false
          },
          "marketplace_payouts_enabled": {
            "type": "boolean",
            "title": "Marketplace Payouts Enabled",
            "default": false
          },
          "wallet": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Wallet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "config",
          "is_personal"
        ],
        "title": "OrganizationInfo",
        "description": "Information about an organization."
      },
      "OrganizationMembers": {
        "properties": {
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/OrgMemberIdentity"
            },
            "type": "array",
            "title": "Members"
          },
          "pending": {
            "items": {
              "$ref": "#/components/schemas/OrgPendingIdentity"
            },
            "type": "array",
            "title": "Pending"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "members",
          "pending"
        ],
        "title": "OrganizationMembers",
        "description": "Organization members schema."
      },
      "OrganizationPGSchemaSlim": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "created_by_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By User Id"
          },
          "created_by_ls_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Ls User Id"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled"
          },
          "sso_login_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sso Login Slug"
          },
          "sso_only": {
            "type": "boolean",
            "title": "Sso Only",
            "default": false
          },
          "jit_provisioning_enabled": {
            "type": "boolean",
            "title": "Jit Provisioning Enabled",
            "default": true
          },
          "public_sharing_disabled": {
            "type": "boolean",
            "title": "Public Sharing Disabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "display_name",
          "is_personal",
          "disabled"
        ],
        "title": "OrganizationPGSchemaSlim",
        "description": "Schema for an organization in postgres for list views."
      },
      "OrganizationUpdate": {
        "properties": {
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ ]+$",
            "title": "Display Name"
          },
          "public_sharing_disabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public Sharing Disabled"
          },
          "unshare_all": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unshare All"
          },
          "jit_provisioning_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jit Provisioning Enabled"
          }
        },
        "type": "object",
        "title": "OrganizationUpdate",
        "description": "Update organization schema."
      },
      "OutputTokenDetails": {
        "properties": {
          "audio": {
            "type": "integer",
            "title": "Audio"
          },
          "reasoning": {
            "type": "integer",
            "title": "Reasoning"
          }
        },
        "type": "object",
        "title": "OutputTokenDetails",
        "description": "Breakdown of output token counts.\n\nDoes *not* need to sum to full output token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"reasoning\": 200,\n        }\n\n.. versionadded:: 0.3.9"
      },
      "PagerdutySeverity": {
        "type": "string",
        "enum": [
          "critical",
          "warning",
          "error",
          "info"
        ],
        "title": "PagerdutySeverity",
        "description": "Enum for severity."
      },
      "PaymentPlanTier": {
        "type": "string",
        "enum": [
          "no_plan",
          "developer",
          "plus",
          "enterprise",
          "developer_legacy",
          "plus_legacy",
          "free",
          "enterprise_legacy",
          "startup",
          "partner",
          "premier"
        ],
        "title": "PaymentPlanTier"
      },
      "PendingIdentity": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "workspace_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Ids"
          },
          "workspace_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Role Id"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope",
            "default": "workspace"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "org_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Id"
          },
          "org_role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Role Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "created_at"
        ],
        "title": "PendingIdentity"
      },
      "PendingIdentityCreate": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "workspace_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Ids"
          },
          "workspace_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Role Id"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "PendingIdentityCreate"
      },
      "PermissionResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "access_scope": {
            "$ref": "#/components/schemas/AccessScope"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "access_scope"
        ],
        "title": "PermissionResponse"
      },
      "PlaygroundPromptCanvasPayload": {
        "properties": {
          "messages": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AIMessage"
                },
                {
                  "$ref": "#/components/schemas/HumanMessage"
                },
                {
                  "$ref": "#/components/schemas/ChatMessage"
                },
                {
                  "$ref": "#/components/schemas/SystemMessage"
                },
                {
                  "$ref": "#/components/schemas/FunctionMessage"
                },
                {
                  "$ref": "#/components/schemas/ToolMessage"
                },
                {
                  "$ref": "#/components/schemas/AIMessageChunk"
                },
                {
                  "$ref": "#/components/schemas/HumanMessageChunk"
                },
                {
                  "$ref": "#/components/schemas/ChatMessageChunk"
                },
                {
                  "$ref": "#/components/schemas/SystemMessageChunk"
                },
                {
                  "$ref": "#/components/schemas/FunctionMessageChunk"
                },
                {
                  "$ref": "#/components/schemas/ToolMessageChunk"
                }
              ]
            },
            "type": "array",
            "title": "Messages"
          },
          "highlighted": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Highlight"
              },
              {
                "type": "null"
              }
            ]
          },
          "artifact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Artifact"
              },
              {
                "type": "null"
              }
            ]
          },
          "artifact_length": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "shortest",
                  "short",
                  "long",
                  "longest"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Artifact Length"
          },
          "reading_level": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "child",
                  "teenager",
                  "college",
                  "phd"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Reading Level"
          },
          "custom_action": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Action"
          },
          "template_format": {
            "type": "string",
            "enum": [
              "f-string",
              "mustache"
            ],
            "title": "Template Format"
          },
          "secrets": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Secrets"
          }
        },
        "type": "object",
        "required": [
          "messages",
          "template_format",
          "secrets"
        ],
        "title": "PlaygroundPromptCanvasPayload"
      },
      "PlaygroundRunOverDatasetBatchRequestSchema": {
        "properties": {
          "manifest": {
            "title": "Manifest"
          },
          "secrets": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Secrets"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          },
          "repo_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repo Id"
          },
          "tools": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools"
          },
          "tool_choice": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Choice"
          },
          "parallel_tool_calls": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parallel Tool Calls"
          },
          "options": {
            "$ref": "#/components/schemas/RunnableConfig"
          },
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "repo_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repo Handle"
          },
          "owner": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner"
          },
          "commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit"
          },
          "evaluator_rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluator Rules"
          },
          "requests_per_second": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requests Per Second"
          },
          "use_or_fallback_to_workspace_secrets": {
            "type": "boolean",
            "title": "Use Or Fallback To Workspace Secrets",
            "default": false
          },
          "runner_context": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunnerContextEnum"
              },
              {
                "type": "null"
              }
            ],
            "default": "langsmith_ui"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "dataset_splits": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Splits"
          },
          "repetitions": {
            "type": "integer",
            "maximum": 30,
            "minimum": 1,
            "title": "Repetitions",
            "default": 1
          },
          "batch_size": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Batch Size"
          }
        },
        "type": "object",
        "required": [
          "manifest",
          "secrets",
          "options",
          "project_name",
          "dataset_id"
        ],
        "title": "PlaygroundRunOverDatasetBatchRequestSchema"
      },
      "PlaygroundRunOverDatasetRequestSchema": {
        "properties": {
          "manifest": {
            "title": "Manifest"
          },
          "secrets": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Secrets"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          },
          "repo_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repo Id"
          },
          "tools": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools"
          },
          "tool_choice": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Choice"
          },
          "parallel_tool_calls": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parallel Tool Calls"
          },
          "options": {
            "$ref": "#/components/schemas/RunnableConfig"
          },
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "repo_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repo Handle"
          },
          "owner": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner"
          },
          "commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit"
          },
          "evaluator_rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluator Rules"
          },
          "requests_per_second": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requests Per Second"
          },
          "use_or_fallback_to_workspace_secrets": {
            "type": "boolean",
            "title": "Use Or Fallback To Workspace Secrets",
            "default": false
          },
          "runner_context": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunnerContextEnum"
              },
              {
                "type": "null"
              }
            ],
            "default": "langsmith_ui"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "dataset_splits": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Splits"
          },
          "repetitions": {
            "type": "integer",
            "maximum": 30,
            "minimum": 1,
            "title": "Repetitions",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "manifest",
          "secrets",
          "options",
          "project_name",
          "dataset_id"
        ],
        "title": "PlaygroundRunOverDatasetRequestSchema"
      },
      "PlaygroundSavedOptions": {
        "properties": {
          "requests_per_second": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requests Per Second"
          }
        },
        "type": "object",
        "title": "PlaygroundSavedOptions"
      },
      "PlaygroundSettingsCreateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "settings": {
            "type": "object",
            "title": "Settings"
          },
          "options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PlaygroundSavedOptions"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "settings"
        ],
        "title": "PlaygroundSettingsCreateRequest"
      },
      "PlaygroundSettingsResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "settings": {
            "type": "object",
            "title": "Settings"
          },
          "options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PlaygroundSavedOptions"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id",
          "settings",
          "created_at",
          "updated_at"
        ],
        "title": "PlaygroundSettingsResponse"
      },
      "PlaygroundSettingsUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "settings": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings"
          },
          "options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PlaygroundSavedOptions"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "PlaygroundSettingsUpdateRequest"
      },
      "PopulateAnnotationQueueSchema": {
        "properties": {
          "queue_id": {
            "type": "string",
            "format": "uuid",
            "title": "Queue Id"
          },
          "session_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Session Ids"
          }
        },
        "type": "object",
        "required": [
          "queue_id",
          "session_ids"
        ],
        "title": "PopulateAnnotationQueueSchema"
      },
      "PromptOptimizationJob": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "repo_id": {
            "type": "string",
            "format": "uuid",
            "title": "Repo Id"
          },
          "status": {
            "$ref": "#/components/schemas/EPromptOptimizationJobStatus"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "algorithm": {
            "$ref": "#/components/schemas/EPromptOptimizationAlgorithm"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptimConfig"
              },
              {
                "$ref": "#/components/schemas/DemoConfig"
              }
            ],
            "title": "Config"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/PromptOptimizationResult"
            },
            "type": "array",
            "title": "Results"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "repo_id",
          "status",
          "tenant_id",
          "algorithm",
          "config",
          "created_at",
          "updated_at"
        ],
        "title": "PromptOptimizationJob"
      },
      "PromptOptimizationJobCreate": {
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/EPromptOptimizationAlgorithm"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptimConfig"
              },
              {
                "$ref": "#/components/schemas/DemoConfig"
              }
            ],
            "title": "Config"
          }
        },
        "type": "object",
        "required": [
          "algorithm",
          "config"
        ],
        "title": "PromptOptimizationJobCreate"
      },
      "PromptOptimizationJobLog": {
        "properties": {
          "log_type": {
            "$ref": "#/components/schemas/EPromptOptimizationJobLogType"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "job_id": {
            "type": "string",
            "format": "uuid",
            "title": "Job Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "log_type",
          "message",
          "id",
          "job_id",
          "created_at"
        ],
        "title": "PromptOptimizationJobLog"
      },
      "PromptOptimizationJobLogCreate": {
        "properties": {
          "log_type": {
            "$ref": "#/components/schemas/EPromptOptimizationJobLogType"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "log_type",
          "message"
        ],
        "title": "PromptOptimizationJobLogCreate"
      },
      "PromptOptimizationJobUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EPromptOptimizationJobStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptOptimizationResult"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "PromptOptimizationJobUpdate"
      },
      "PromptOptimizationJobWithLogs": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "repo_id": {
            "type": "string",
            "format": "uuid",
            "title": "Repo Id"
          },
          "status": {
            "$ref": "#/components/schemas/EPromptOptimizationJobStatus"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "algorithm": {
            "$ref": "#/components/schemas/EPromptOptimizationAlgorithm"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptimConfig"
              },
              {
                "$ref": "#/components/schemas/DemoConfig"
              }
            ],
            "title": "Config"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/PromptOptimizationResult"
            },
            "type": "array",
            "title": "Results"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "logs": {
            "items": {
              "$ref": "#/components/schemas/PromptOptimizationJobLog"
            },
            "type": "array",
            "title": "Logs"
          }
        },
        "type": "object",
        "required": [
          "id",
          "repo_id",
          "status",
          "tenant_id",
          "algorithm",
          "config",
          "created_at",
          "updated_at",
          "logs"
        ],
        "title": "PromptOptimizationJobWithLogs"
      },
      "PromptOptimizationResult": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "x": {
            "type": "number",
            "title": "X"
          },
          "y": {
            "type": "number",
            "title": "Y"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "x",
          "y"
        ],
        "title": "PromptOptimizationResult"
      },
      "PromptWebhook": {
        "properties": {
          "url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "headers": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          },
          "include_prompts": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Prompts"
          },
          "exclude_prompts": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exclude Prompts"
          },
          "triggers": {
            "items": {
              "$ref": "#/components/schemas/EPromptWebhookTrigger"
            },
            "type": "array",
            "title": "Triggers"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "url",
          "id",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "PromptWebhook",
        "description": "Schema for a prompt webhook."
      },
      "PromptWebhookBase": {
        "properties": {
          "url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "headers": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          },
          "include_prompts": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Prompts"
          },
          "exclude_prompts": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exclude Prompts"
          },
          "triggers": {
            "items": {
              "$ref": "#/components/schemas/EPromptWebhookTrigger"
            },
            "type": "array",
            "title": "Triggers"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "PromptWebhookBase",
        "description": "Base schema for prompt webhooks."
      },
      "PromptWebhookCreate": {
        "properties": {
          "url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "headers": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          },
          "include_prompts": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Prompts"
          },
          "exclude_prompts": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exclude Prompts"
          },
          "triggers": {
            "items": {
              "$ref": "#/components/schemas/EPromptWebhookTrigger"
            },
            "type": "array",
            "title": "Triggers"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "PromptWebhookCreate",
        "description": "Schema for creating a prompt webhook."
      },
      "PromptWebhookPayload": {
        "properties": {
          "prompt_id": {
            "type": "string",
            "title": "Prompt Id"
          },
          "prompt_name": {
            "type": "string",
            "title": "Prompt Name"
          },
          "manifest": {
            "type": "object",
            "title": "Manifest"
          },
          "commit_hash": {
            "type": "string",
            "title": "Commit Hash"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "event": {
            "$ref": "#/components/schemas/EPromptWebhookTrigger"
          },
          "tag_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Name"
          }
        },
        "type": "object",
        "required": [
          "prompt_id",
          "prompt_name",
          "manifest",
          "commit_hash",
          "created_at",
          "created_by",
          "event"
        ],
        "title": "PromptWebhookPayload"
      },
      "PromptWebhookTest": {
        "properties": {
          "webhook": {
            "$ref": "#/components/schemas/PromptWebhookBase"
          },
          "payload": {
            "$ref": "#/components/schemas/PromptWebhookPayload"
          }
        },
        "type": "object",
        "required": [
          "webhook",
          "payload"
        ],
        "title": "PromptWebhookTest",
        "description": "Schema for testing a prompt webhook."
      },
      "PromptWebhookUpdate": {
        "properties": {
          "include_prompts": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Prompts"
          },
          "exclude_prompts": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exclude Prompts"
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "headers": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          },
          "triggers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EPromptWebhookTrigger"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Triggers"
          }
        },
        "type": "object",
        "title": "PromptWebhookUpdate",
        "description": "Schema for updating a prompt webhook."
      },
      "PromptimConfig": {
        "properties": {
          "message_index": {
            "type": "integer",
            "title": "Message Index"
          },
          "task_description": {
            "type": "string",
            "title": "Task Description"
          },
          "dataset_name": {
            "type": "string",
            "title": "Dataset Name"
          },
          "train_split": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Train Split"
          },
          "dev_split": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dev Split"
          },
          "test_split": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Split"
          },
          "evaluators": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Evaluators"
          },
          "num_epochs": {
            "type": "integer",
            "title": "Num Epochs"
          },
          "auto_commit": {
            "type": "boolean",
            "title": "Auto Commit"
          }
        },
        "type": "object",
        "required": [
          "message_index",
          "task_description",
          "dataset_name",
          "train_split",
          "dev_split",
          "test_split",
          "evaluators",
          "num_epochs",
          "auto_commit"
        ],
        "title": "PromptimConfig"
      },
      "ProviderUserSlim": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthProvider"
              },
              {
                "type": "null"
              }
            ]
          },
          "ls_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ls User Id"
          },
          "saml_provider_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Saml Provider Id"
          },
          "provider_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email_confirmed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Confirmed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "ls_user_id",
          "created_at",
          "updated_at"
        ],
        "title": "ProviderUserSlim"
      },
      "PublicComparativeExperiment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "experiments_info": {
            "items": {
              "$ref": "#/components/schemas/SimpleExperimentInfo"
            },
            "type": "array",
            "title": "Experiments Info"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "modified_at",
          "experiments_info"
        ],
        "title": "PublicComparativeExperiment",
        "description": "Publicly-shared ComparativeExperiment schema."
      },
      "PublicExampleWithRuns": {
        "properties": {
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "attachment_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Urls"
          },
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunPublicDatasetSchema"
            },
            "type": "array",
            "title": "Runs"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "inputs",
          "id",
          "name",
          "runs"
        ],
        "title": "PublicExampleWithRuns",
        "description": "Schema for an example in a publicly-shared dataset with list of runs."
      },
      "PutDatasetVersionsSchema": {
        "properties": {
          "as_of": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "As Of",
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          },
          "tag": {
            "type": "string",
            "title": "Tag"
          }
        },
        "type": "object",
        "required": [
          "as_of",
          "tag"
        ],
        "title": "PutDatasetVersionsSchema"
      },
      "QueryExampleSchemaWithRuns": {
        "properties": {
          "session_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Session Ids"
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "title": "Offset",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "title": "Limit",
            "default": 10
          },
          "preview": {
            "type": "boolean",
            "title": "Preview",
            "default": false
          },
          "format": {
            "anyOf": [
              {
                "type": "string",
                "const": "csv"
              },
              {
                "type": "null"
              }
            ],
            "title": "Format"
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          },
          "sort_params": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SortParamsForRunsComparisonView"
              },
              {
                "type": "null"
              }
            ]
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "propertyNames": {
                  "format": "uuid"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          }
        },
        "type": "object",
        "required": [
          "session_ids"
        ],
        "title": "QueryExampleSchemaWithRuns"
      },
      "QueryFeedbackDelta": {
        "properties": {
          "baseline_session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Baseline Session Id"
          },
          "comparison_session_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Comparison Session Ids"
          },
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "propertyNames": {
                  "format": "uuid"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "title": "Offset",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "title": "Limit",
            "default": 100
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          }
        },
        "type": "object",
        "required": [
          "baseline_session_id",
          "comparison_session_ids",
          "feedback_key"
        ],
        "title": "QueryFeedbackDelta"
      },
      "QueryGroupedExamplesWithRuns": {
        "properties": {
          "session_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Session Ids"
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "title": "Offset",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "title": "Limit",
            "default": 10
          },
          "preview": {
            "type": "boolean",
            "title": "Preview",
            "default": false
          },
          "group_by": {
            "$ref": "#/components/schemas/GroupExampleRunsByField"
          },
          "metadata_key": {
            "type": "string",
            "title": "Metadata Key"
          },
          "per_group_limit": {
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "title": "Per Group Limit",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "session_ids",
          "group_by",
          "metadata_key"
        ],
        "title": "QueryGroupedExamplesWithRuns"
      },
      "QueryParamsForPublicRunSchema": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "title": "QueryParamsForPublicRunSchema",
        "description": "Query params for public run endpoints."
      },
      "RepoExampleResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "session_id"
        ],
        "title": "RepoExampleResponse",
        "description": "Response model for example runs"
      },
      "RepoTag": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "repo_id": {
            "type": "string",
            "format": "uuid",
            "title": "Repo Id"
          },
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "Commit Id"
          },
          "commit_hash": {
            "type": "string",
            "title": "Commit Hash"
          },
          "tag_name": {
            "type": "string",
            "title": "Tag Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "repo_id",
          "commit_id",
          "commit_hash",
          "tag_name",
          "created_at",
          "updated_at"
        ],
        "title": "RepoTag",
        "description": "Fields for a prompt tag"
      },
      "RepoTagRequest": {
        "properties": {
          "tag_name": {
            "type": "string",
            "title": "Tag Name"
          },
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "Commit Id"
          },
          "skip_webhooks": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              }
            ],
            "title": "Skip Webhooks",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "tag_name",
          "commit_id"
        ],
        "title": "RepoTagRequest",
        "description": "Fields to create a prompt tag"
      },
      "RepoUpdateTagRequest": {
        "properties": {
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "Commit Id"
          },
          "skip_webhooks": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              }
            ],
            "title": "Skip Webhooks",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "commit_id"
        ],
        "title": "RepoUpdateTagRequest",
        "description": "Fields to update a prompt tag"
      },
      "RepoWithLookups": {
        "properties": {
          "repo_handle": {
            "type": "string",
            "title": "Repo Handle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "original_repo_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Repo Id"
          },
          "upstream_repo_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upstream Repo Id"
          },
          "owner": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "num_likes": {
            "type": "integer",
            "title": "Num Likes"
          },
          "num_downloads": {
            "type": "integer",
            "title": "Num Downloads"
          },
          "num_views": {
            "type": "integer",
            "title": "Num Views"
          },
          "liked_by_auth_user": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Liked By Auth User"
          },
          "last_commit_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Commit Hash"
          },
          "num_commits": {
            "type": "integer",
            "title": "Num Commits"
          },
          "original_repo_full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Repo Full Name"
          },
          "upstream_repo_full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upstream Repo Full Name"
          },
          "latest_commit_manifest": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CommitManifestResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "repo_handle",
          "id",
          "tenant_id",
          "created_at",
          "updated_at",
          "is_public",
          "is_archived",
          "tags",
          "owner",
          "full_name",
          "num_likes",
          "num_downloads",
          "num_views",
          "num_commits"
        ],
        "title": "RepoWithLookups",
        "description": "All database fields for repos, plus helpful computed fields."
      },
      "RequestBodyForRunsGenerateQuery": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "feedback_keys": {
            "items": {
              "$ref": "#/components/schemas/RunsGenerateQueryFeedbackKeys"
            },
            "type": "array",
            "title": "Feedback Keys"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "RequestBodyForRunsGenerateQuery"
      },
      "Resource": {
        "properties": {
          "tagging_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tagging Id"
          },
          "resource_name": {
            "type": "string",
            "title": "Resource Name"
          },
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "tagging_id",
          "resource_name",
          "resource_id"
        ],
        "title": "Resource"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "prompt",
          "project",
          "queue",
          "deployment",
          "experiment",
          "dataset",
          "dashboard"
        ],
        "title": "ResourceType"
      },
      "ResponseBodyForRunsGenerateQuery": {
        "properties": {
          "filter": {
            "type": "string",
            "title": "Filter"
          },
          "feedback_urls": {
            "additionalProperties": {
              "type": "string"
            },
            "propertyNames": {
              "$ref": "#/components/schemas/RunsGenerateQueryFeedbackKeys"
            },
            "type": "object",
            "title": "Feedback Urls"
          }
        },
        "type": "object",
        "required": [
          "filter",
          "feedback_urls"
        ],
        "title": "ResponseBodyForRunsGenerateQuery"
      },
      "Role": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          },
          "access_scope": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccessScope"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "display_name",
          "description",
          "permissions"
        ],
        "title": "Role"
      },
      "RootModel_Dict_str__list_str___": {
        "additionalProperties": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": "object",
        "title": "RootModel[Dict[str, list[str]]]"
      },
      "RuleLogActionOutcome": {
        "type": "string",
        "enum": [
          "success",
          "skipped",
          "error"
        ],
        "title": "RuleLogActionOutcome"
      },
      "RuleLogActionResponse": {
        "properties": {
          "outcome": {
            "$ref": "#/components/schemas/RuleLogActionOutcome"
          },
          "payload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payload"
          }
        },
        "type": "object",
        "required": [
          "outcome"
        ],
        "title": "RuleLogActionResponse"
      },
      "RuleLogSchema": {
        "properties": {
          "rule_id": {
            "type": "string",
            "format": "uuid",
            "title": "Rule Id"
          },
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Name"
          },
          "run_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Type"
          },
          "run_session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Session Id"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "application_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Time"
          },
          "add_to_annotation_queue": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "add_to_dataset": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "evaluators": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "alerts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhooks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "rule_id",
          "run_id",
          "start_time",
          "end_time"
        ],
        "title": "RuleLogSchema",
        "description": "Run rules log schema."
      },
      "RunCluster": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "level": {
            "type": "integer",
            "title": "Level"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "parent_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Name"
          },
          "num_runs": {
            "type": "integer",
            "title": "Num Runs"
          }
        },
        "type": "object",
        "required": [
          "id",
          "level",
          "name",
          "description",
          "num_runs"
        ],
        "title": "RunCluster",
        "description": "A single cluster of runs."
      },
      "RunClusteringJobPydantic": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "shape": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shape"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "status"
        ],
        "title": "RunClusteringJobPydantic",
        "description": "Session cluster job"
      },
      "RunDateOrder": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "title": "RunDateOrder",
        "description": "Enum for run start date order."
      },
      "RunGroupBy": {
        "type": "string",
        "enum": [
          "conversation"
        ],
        "title": "RunGroupBy"
      },
      "RunGroupRequest": {
        "properties": {
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "group_by": {
            "$ref": "#/components/schemas/RunGroupBy"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "title": "Offset",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "title": "Limit",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "group_by"
        ],
        "title": "RunGroupRequest"
      },
      "RunGroupStats": {
        "properties": {
          "run_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Count"
          },
          "latency_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P50"
          },
          "latency_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P99"
          },
          "first_token_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P50"
          },
          "first_token_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P99"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "median_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Median Tokens"
          },
          "completion_tokens_p50": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens P50"
          },
          "prompt_tokens_p50": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens P50"
          },
          "tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens P99"
          },
          "completion_tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens P99"
          },
          "prompt_tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens P99"
          },
          "last_run_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "run_facets": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Facets"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          },
          "streaming_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streaming Rate"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "cost_p50": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost P50"
          },
          "cost_p99": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost P99"
          },
          "group_count": {
            "type": "integer",
            "title": "Group Count"
          }
        },
        "type": "object",
        "required": [
          "group_count"
        ],
        "title": "RunGroupStats"
      },
      "RunPublicDatasetSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "inputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Preview"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "outputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Preview"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "prompt_token_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Token Details"
          },
          "completion_token_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Token Details"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "prompt_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost Details"
          },
          "completion_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost Details"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status",
          "session_id"
        ],
        "title": "RunPublicDatasetSchema",
        "description": "Schema for a run in a publicly-shared dataset."
      },
      "RunPublicSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "inputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Preview"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "outputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Preview"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "prompt_token_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Token Details"
          },
          "completion_token_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Token Details"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "prompt_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost Details"
          },
          "completion_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost Details"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status"
        ],
        "title": "RunPublicSchema"
      },
      "RunRulesAlertType": {
        "type": "string",
        "enum": [
          "pagerduty"
        ],
        "title": "RunRulesAlertType",
        "description": "Enum for alert types."
      },
      "RunRulesCreateSchema": {
        "properties": {
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "default": true
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "sampling_rate": {
            "type": "number",
            "title": "Sampling Rate"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "backfill_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backfill From"
          },
          "use_corrections_dataset": {
            "type": "boolean",
            "title": "Use Corrections Dataset",
            "default": false
          },
          "num_few_shot_examples": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Few Shot Examples"
          },
          "extend_only": {
            "type": "boolean",
            "title": "Extend Only",
            "default": false
          },
          "transient": {
            "type": "boolean",
            "title": "Transient",
            "default": false
          },
          "add_to_annotation_queue_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Annotation Queue Id"
          },
          "add_to_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Dataset Id"
          },
          "add_to_dataset_prefer_correction": {
            "type": "boolean",
            "title": "Add To Dataset Prefer Correction",
            "default": false
          },
          "evaluators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EvaluatorTopLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluators"
          },
          "code_evaluators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CodeEvaluatorTopLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Evaluators"
          },
          "alerts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RunRulesPagerdutyAlertSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alerts"
          },
          "webhooks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RunRulesWebhookSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhooks"
          },
          "evaluator_version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluator Version"
          },
          "create_alignment_queue": {
            "type": "boolean",
            "title": "Create Alignment Queue",
            "default": false
          },
          "include_extended_stats": {
            "type": "boolean",
            "title": "Include Extended Stats",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "sampling_rate"
        ],
        "title": "RunRulesCreateSchema"
      },
      "RunRulesPagerdutyAlertSchema": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunRulesAlertType"
              },
              {
                "type": "null"
              }
            ],
            "default": "pagerduty"
          },
          "routing_key": {
            "type": "string",
            "title": "Routing Key"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary"
          },
          "severity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagerdutySeverity"
              },
              {
                "type": "null"
              }
            ],
            "default": "warning"
          }
        },
        "type": "object",
        "required": [
          "routing_key"
        ],
        "title": "RunRulesPagerdutyAlertSchema"
      },
      "RunRulesSchema": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "default": true
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "session_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Name"
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Name"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "sampling_rate": {
            "type": "number",
            "title": "Sampling Rate"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "add_to_annotation_queue_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Annotation Queue Id"
          },
          "add_to_annotation_queue_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Annotation Queue Name"
          },
          "add_to_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Dataset Id"
          },
          "add_to_dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Dataset Name"
          },
          "add_to_dataset_prefer_correction": {
            "type": "boolean",
            "title": "Add To Dataset Prefer Correction",
            "default": false
          },
          "corrections_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Corrections Dataset Id"
          },
          "use_corrections_dataset": {
            "type": "boolean",
            "title": "Use Corrections Dataset",
            "default": false
          },
          "num_few_shot_examples": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Few Shot Examples"
          },
          "evaluators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EvaluatorTopLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluators"
          },
          "code_evaluators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CodeEvaluatorTopLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Evaluators"
          },
          "alerts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RunRulesPagerdutyAlertSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alerts"
          },
          "webhooks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RunRulesWebhookSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhooks"
          },
          "extend_only": {
            "type": "boolean",
            "title": "Extend Only",
            "default": false
          },
          "include_extended_stats": {
            "type": "boolean",
            "title": "Include Extended Stats",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "backfill_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backfill From"
          },
          "transient": {
            "type": "boolean",
            "title": "Transient",
            "default": false
          },
          "evaluator_version": {
            "type": "integer",
            "title": "Evaluator Version"
          },
          "evaluator_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluator Id"
          },
          "alignment_annotation_queue_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alignment Annotation Queue Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "display_name",
          "sampling_rate",
          "webhooks",
          "created_at",
          "updated_at",
          "evaluator_version"
        ],
        "title": "RunRulesSchema",
        "description": "Run rules schema."
      },
      "RunRulesWebhookSchema": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "RunRulesWebhookSchema"
      },
      "RunSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "inputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Preview"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "outputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Preview"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "prompt_token_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Token Details"
          },
          "completion_token_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Token Details"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "prompt_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost Details"
          },
          "completion_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost Details"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "app_path": {
            "type": "string",
            "title": "App Path"
          },
          "last_queued_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Queued At"
          },
          "in_dataset": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Dataset"
          },
          "share_token": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Token"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "trace_first_received_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace First Received At"
          },
          "ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Seconds"
          },
          "trace_upgrade": {
            "type": "boolean",
            "title": "Trace Upgrade",
            "default": false
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "thread_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status",
          "session_id",
          "app_path"
        ],
        "title": "RunSchema",
        "description": "Run schema."
      },
      "RunSchemaComparisonView": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "inputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Preview"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "outputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Preview"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "app_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Path"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "id",
          "session_id",
          "status"
        ],
        "title": "RunSchemaComparisonView",
        "description": "Run schema for comparison view."
      },
      "RunSchemaWithAnnotationQueueInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "inputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs Preview"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "outputs_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs Preview"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "prompt_token_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Token Details"
          },
          "completion_token_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Token Details"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "prompt_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost Details"
          },
          "completion_cost_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost Details"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "app_path": {
            "type": "string",
            "title": "App Path"
          },
          "last_queued_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Queued At"
          },
          "in_dataset": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Dataset"
          },
          "share_token": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Token"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "trace_first_received_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace First Received At"
          },
          "ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Seconds"
          },
          "trace_upgrade": {
            "type": "boolean",
            "title": "Trace Upgrade",
            "default": false
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "thread_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          },
          "queue_run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Queue Run Id"
          },
          "last_reviewed_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Reviewed Time"
          },
          "added_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Added At"
          },
          "effective_added_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Effective Added At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status",
          "session_id",
          "app_path",
          "queue_run_id"
        ],
        "title": "RunSchemaWithAnnotationQueueInfo",
        "description": "Run schema with annotation queue info."
      },
      "RunSelect": {
        "type": "string",
        "enum": [
          "id",
          "name",
          "run_type",
          "start_time",
          "end_time",
          "status",
          "error",
          "extra",
          "events",
          "inputs",
          "inputs_preview",
          "inputs_s3_urls",
          "inputs_or_signed_url",
          "outputs",
          "outputs_preview",
          "outputs_s3_urls",
          "outputs_or_signed_url",
          "s3_urls",
          "error_or_signed_url",
          "events_or_signed_url",
          "extra_or_signed_url",
          "serialized_or_signed_url",
          "parent_run_id",
          "manifest_id",
          "manifest_s3_id",
          "manifest",
          "session_id",
          "serialized",
          "reference_example_id",
          "reference_dataset_id",
          "total_tokens",
          "prompt_tokens",
          "prompt_token_details",
          "completion_tokens",
          "completion_token_details",
          "total_cost",
          "prompt_cost",
          "prompt_cost_details",
          "completion_cost",
          "completion_cost_details",
          "price_model_id",
          "first_token_time",
          "trace_id",
          "dotted_order",
          "last_queued_at",
          "feedback_stats",
          "child_run_ids",
          "parent_run_ids",
          "tags",
          "in_dataset",
          "app_path",
          "share_token",
          "trace_tier",
          "trace_first_received_at",
          "ttl_seconds",
          "trace_upgrade",
          "thread_id"
        ],
        "title": "RunSelect",
        "description": "Enum for available run columns."
      },
      "RunShareSchema": {
        "properties": {
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "share_token": {
            "type": "string",
            "format": "uuid",
            "title": "Share Token"
          }
        },
        "type": "object",
        "required": [
          "run_id",
          "share_token"
        ],
        "title": "RunShareSchema"
      },
      "RunStats": {
        "properties": {
          "run_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Count"
          },
          "latency_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P50"
          },
          "latency_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P99"
          },
          "first_token_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P50"
          },
          "first_token_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P99"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "median_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Median Tokens"
          },
          "completion_tokens_p50": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens P50"
          },
          "prompt_tokens_p50": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens P50"
          },
          "tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens P99"
          },
          "completion_tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens P99"
          },
          "prompt_tokens_p99": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens P99"
          },
          "last_run_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "run_facets": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Facets"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          },
          "streaming_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streaming Rate"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "cost_p50": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost P50"
          },
          "cost_p99": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost P99"
          }
        },
        "type": "object",
        "title": "RunStats"
      },
      "RunStatsGroupBy": {
        "properties": {
          "attribute": {
            "type": "string",
            "enum": [
              "name",
              "run_type",
              "tag",
              "metadata"
            ],
            "title": "Attribute"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "max_groups": {
            "type": "integer",
            "title": "Max Groups",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "attribute"
        ],
        "title": "RunStatsGroupBy",
        "description": "Group by param for run stats."
      },
      "RunStatsGroupBySeriesResponse": {
        "properties": {
          "attribute": {
            "type": "string",
            "enum": [
              "name",
              "run_type",
              "tag",
              "metadata"
            ],
            "title": "Attribute"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "max_groups": {
            "type": "integer",
            "title": "Max Groups",
            "default": 5
          },
          "set_by": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "section",
                  "series"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Set By"
          }
        },
        "type": "object",
        "required": [
          "attribute"
        ],
        "title": "RunStatsGroupBySeriesResponse",
        "description": "Include additional information about where the group_by param was set."
      },
      "RunStatsQueryParams": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "trace": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace"
          },
          "parent_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run"
          },
          "run_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "session": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session"
          },
          "reference_example": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example"
          },
          "execution_order": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Order"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "is_root": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Root"
          },
          "data_source_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunsFilterDataSourceTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "skip_pagination": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Pagination"
          },
          "search_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Filter"
          },
          "use_experimental_search": {
            "type": "boolean",
            "title": "Use Experimental Search",
            "default": false
          },
          "group_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunStatsGroupBy"
              },
              {
                "type": "null"
              }
            ]
          },
          "groups": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Groups"
          },
          "select": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RunStatsSelect"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Select"
          }
        },
        "type": "object",
        "title": "RunStatsQueryParams",
        "description": "Query params for run stats."
      },
      "RunStatsSelect": {
        "type": "string",
        "enum": [
          "run_count",
          "latency_p50",
          "latency_p99",
          "latency_avg",
          "first_token_p50",
          "first_token_p99",
          "total_tokens",
          "prompt_tokens",
          "completion_tokens",
          "median_tokens",
          "completion_tokens_p50",
          "prompt_tokens_p50",
          "tokens_p99",
          "completion_tokens_p99",
          "prompt_tokens_p99",
          "last_run_start_time",
          "feedback_stats",
          "run_facets",
          "error_rate",
          "streaming_rate",
          "total_cost",
          "prompt_cost",
          "completion_cost",
          "cost_p50",
          "cost_p99",
          "session_feedback_stats",
          "all_run_stats",
          "all_token_stats"
        ],
        "title": "RunStatsSelect",
        "description": "Metrics you can select from run stats endpoint."
      },
      "RunTypeEnum": {
        "type": "string",
        "enum": [
          "tool",
          "chain",
          "llm",
          "retriever",
          "embedding",
          "prompt",
          "parser"
        ],
        "title": "RunTypeEnum",
        "description": "Enum for run types."
      },
      "RunnableConfig": {
        "properties": {
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "callbacks": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {},
              {
                "type": "null"
              }
            ],
            "title": "Callbacks"
          },
          "run_name": {
            "type": "string",
            "title": "Run Name"
          },
          "max_concurrency": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Concurrency"
          },
          "recursion_limit": {
            "type": "integer",
            "title": "Recursion Limit"
          },
          "configurable": {
            "type": "object",
            "title": "Configurable"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          }
        },
        "type": "object",
        "title": "RunnableConfig",
        "description": "Configuration for a Runnable."
      },
      "RunnerContextEnum": {
        "type": "string",
        "enum": [
          "langsmith_ui",
          "langsmith_align_evals"
        ],
        "title": "RunnerContextEnum"
      },
      "RunsFilterDataSourceTypeEnum": {
        "type": "string",
        "enum": [
          "current",
          "historical",
          "lite",
          "root_lite",
          "runs_feedbacks_rmt_wide"
        ],
        "title": "RunsFilterDataSourceTypeEnum",
        "description": "Enum for run data source types."
      },
      "RunsGenerateQueryFeedbackKeys": {
        "type": "string",
        "enum": [
          "user_score",
          "user_edited",
          "user_removed",
          "user_opened_run",
          "user_selected_run",
          "results_size",
          "valid_filter"
        ],
        "title": "RunsGenerateQueryFeedbackKeys"
      },
      "SSOConfirmEmailRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "SSOConfirmEmailRequest"
      },
      "SSOEmailVerificationSendRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "saml_provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Saml Provider Id"
          }
        },
        "type": "object",
        "required": [
          "email",
          "saml_provider_id"
        ],
        "title": "SSOEmailVerificationSendRequest"
      },
      "SSOEmailVerificationStatusRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "saml_provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Saml Provider Id"
          }
        },
        "type": "object",
        "required": [
          "email",
          "saml_provider_id"
        ],
        "title": "SSOEmailVerificationStatusRequest"
      },
      "SSOEmailVerificationStatusResponse": {
        "properties": {
          "email_confirmed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Confirmed At"
          }
        },
        "type": "object",
        "title": "SSOEmailVerificationStatusResponse"
      },
      "SSOProvider": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Provider Id"
          },
          "default_workspace_role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Default Workspace Role Id"
          },
          "default_workspace_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Default Workspace Ids"
          },
          "metadata_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Url"
          },
          "metadata_xml": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Xml"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "provider_id",
          "default_workspace_role_id",
          "default_workspace_ids"
        ],
        "title": "SSOProvider"
      },
      "SSOProviderSlim": {
        "properties": {
          "provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Provider Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "organization_display_name": {
            "type": "string",
            "title": "Organization Display Name"
          }
        },
        "type": "object",
        "required": [
          "provider_id",
          "organization_id",
          "organization_display_name"
        ],
        "title": "SSOProviderSlim"
      },
      "SSOSettingsCreate": {
        "properties": {
          "default_workspace_role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Default Workspace Role Id"
          },
          "default_workspace_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Default Workspace Ids"
          },
          "metadata_xml": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Xml"
          },
          "metadata_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Url"
          },
          "attribute_mapping": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Attribute Mapping"
          }
        },
        "type": "object",
        "required": [
          "default_workspace_role_id",
          "default_workspace_ids"
        ],
        "title": "SSOSettingsCreate"
      },
      "SSOSettingsUpdate": {
        "properties": {
          "default_workspace_role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Workspace Role Id"
          },
          "default_workspace_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Workspace Ids"
          },
          "metadata_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Url"
          },
          "metadata_xml": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Xml"
          }
        },
        "type": "object",
        "title": "SSOSettingsUpdate"
      },
      "SearchDatasetRequest": {
        "properties": {
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "limit": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "title": "Limit",
            "default": 5
          },
          "debug": {
            "type": "boolean",
            "title": "Debug",
            "default": false
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          }
        },
        "type": "object",
        "required": [
          "inputs"
        ],
        "title": "SearchDatasetRequest",
        "description": "Dataset schema for serving."
      },
      "SearchDatasetResponse": {
        "properties": {
          "examples": {
            "items": {
              "$ref": "#/components/schemas/SearchedFewShotExample"
            },
            "type": "array",
            "title": "Examples"
          }
        },
        "type": "object",
        "required": [
          "examples"
        ],
        "title": "SearchDatasetResponse",
        "description": "Dataset schema for serving."
      },
      "SearchedFewShotExample": {
        "properties": {
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "outputs": {
            "type": "object",
            "title": "Outputs"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "debug_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Debug Info"
          }
        },
        "type": "object",
        "required": [
          "inputs",
          "outputs",
          "id"
        ],
        "title": "SearchedFewShotExample",
        "description": "Dataset schema for serving."
      },
      "SecretKey": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "SecretKey"
      },
      "SecretUpsert": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "title": "SecretUpsert"
      },
      "ServiceAccount": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "default_workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "organization_id",
          "default_workspace_id"
        ],
        "title": "ServiceAccount"
      },
      "ServiceAccountCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "workspaces": {
            "items": {
              "$ref": "#/components/schemas/ServiceAccountWorkspaceAssignment"
            },
            "type": "array",
            "title": "Workspaces",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ServiceAccountCreateRequest"
      },
      "ServiceAccountCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "default_workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Workspace Id"
          },
          "organization_identity_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Identity Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "organization_id",
          "default_workspace_id",
          "organization_identity_id"
        ],
        "title": "ServiceAccountCreateResponse"
      },
      "ServiceAccountDeleteResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "default_workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "organization_id",
          "default_workspace_id"
        ],
        "title": "ServiceAccountDeleteResponse"
      },
      "ServiceAccountWorkspaceAssignment": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "workspace_id"
        ],
        "title": "ServiceAccountWorkspaceAssignment"
      },
      "SessionFeedbackDelta": {
        "properties": {
          "feedback_deltas": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FeedbackDelta"
            },
            "propertyNames": {
              "format": "uuid"
            },
            "type": "object",
            "title": "Feedback Deltas"
          }
        },
        "type": "object",
        "required": [
          "feedback_deltas"
        ],
        "title": "SessionFeedbackDelta",
        "description": "List of feedback keys with number of improvements and regressions for each."
      },
      "SessionSortableColumns": {
        "type": "string",
        "enum": [
          "name",
          "start_time",
          "last_run_start_time",
          "latency_p50",
          "latency_p99",
          "error_rate",
          "feedback"
        ],
        "title": "SessionSortableColumns"
      },
      "SetTenantHandleRequest": {
        "properties": {
          "tenant_handle": {
            "type": "string",
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "tenant_handle"
        ],
        "title": "SetTenantHandleRequest"
      },
      "SimpleExperimentInfo": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "SimpleExperimentInfo",
        "description": "Simple experiment info schema for use with comparative experiments"
      },
      "SingleCustomChartResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/CustomChartsDataPoint"
            },
            "type": "array",
            "title": "Data"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "chart_type": {
            "$ref": "#/components/schemas/CustomChartType"
          },
          "series": {
            "items": {
              "$ref": "#/components/schemas/CustomChartSeries"
            },
            "type": "array",
            "title": "Series"
          },
          "common_filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomChartSeriesFilters"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "data",
          "id",
          "title",
          "index",
          "chart_type",
          "series"
        ],
        "title": "SingleCustomChartResponse"
      },
      "SingleCustomChartResponseBase": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/CustomChartsDataPoint"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "SingleCustomChartResponseBase"
      },
      "SingleCustomChartSubSectionResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "charts": {
            "items": {
              "$ref": "#/components/schemas/SingleCustomChartResponse"
            },
            "type": "array",
            "title": "Charts"
          }
        },
        "type": "object",
        "required": [
          "title",
          "index",
          "id",
          "charts"
        ],
        "title": "SingleCustomChartSubSectionResponse"
      },
      "SortByComparativeExperimentColumn": {
        "type": "string",
        "enum": [
          "name",
          "created_at"
        ],
        "title": "SortByComparativeExperimentColumn",
        "description": "Enum for available comparative experiment columns to sort by."
      },
      "SortByDatasetColumn": {
        "type": "string",
        "enum": [
          "name",
          "created_at",
          "last_session_start_time",
          "example_count",
          "session_count"
        ],
        "title": "SortByDatasetColumn",
        "description": "Enum for available dataset columns to sort by."
      },
      "SortParamsForRunsComparisonView": {
        "properties": {
          "sort_by": {
            "type": "string",
            "title": "Sort By"
          },
          "sort_order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "title": "Sort Order",
            "default": "DESC"
          }
        },
        "type": "object",
        "required": [
          "sort_by"
        ],
        "title": "SortParamsForRunsComparisonView"
      },
      "SourceType": {
        "type": "string",
        "enum": [
          "api",
          "model",
          "app",
          "auto_eval"
        ],
        "title": "SourceType",
        "description": "Enum for feedback source types."
      },
      "StripeAccountLinksCreate": {
        "properties": {
          "success_path": {
            "type": "string",
            "title": "Success Path"
          }
        },
        "type": "object",
        "required": [
          "success_path"
        ],
        "title": "StripeAccountLinksCreate"
      },
      "StripeBusinessBillingInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripeCustomerAddress"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "StripeBusinessBillingInfo",
        "description": "Stripe customer billing information."
      },
      "StripeBusinessInfo-Input": {
        "properties": {
          "company_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripeBusinessBillingInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "tax_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripeTaxId"
              },
              {
                "type": "null"
              }
            ]
          },
          "invoice_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Email"
          },
          "is_business": {
            "type": "boolean",
            "title": "Is Business",
            "default": false
          }
        },
        "type": "object",
        "title": "StripeBusinessInfo"
      },
      "StripeBusinessInfo-Output": {
        "properties": {
          "company_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripeBusinessBillingInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "tax_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripeTaxId"
              },
              {
                "type": "null"
              }
            ]
          },
          "invoice_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Email"
          },
          "is_business": {
            "type": "boolean",
            "title": "Is Business",
            "default": false
          }
        },
        "type": "object",
        "title": "StripeBusinessInfo"
      },
      "StripeCheckoutSessionsConfirm": {
        "properties": {
          "stripe_session_id": {
            "type": "string",
            "title": "Stripe Session Id"
          }
        },
        "type": "object",
        "required": [
          "stripe_session_id"
        ],
        "title": "StripeCheckoutSessionsConfirm"
      },
      "StripeCheckoutSessionsCreate": {
        "properties": {
          "amount_cents": {
            "type": "integer",
            "title": "Amount Cents"
          },
          "success_path": {
            "type": "string",
            "title": "Success Path"
          }
        },
        "type": "object",
        "required": [
          "amount_cents",
          "success_path"
        ],
        "title": "StripeCheckoutSessionsCreate"
      },
      "StripeCustomerAddress": {
        "properties": {
          "line1": {
            "type": "string",
            "title": "Line1"
          },
          "line2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line2"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "postal_code": {
            "type": "string",
            "title": "Postal Code"
          },
          "country": {
            "type": "string",
            "title": "Country"
          }
        },
        "type": "object",
        "required": [
          "line1",
          "city",
          "postal_code",
          "country"
        ],
        "title": "StripeCustomerAddress",
        "description": "Stripe customer address."
      },
      "StripeCustomerBillingInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "$ref": "#/components/schemas/StripeCustomerAddress"
          }
        },
        "type": "object",
        "required": [
          "name",
          "address"
        ],
        "title": "StripeCustomerBillingInfo",
        "description": "Stripe customer billing information."
      },
      "StripePaymentInformation": {
        "properties": {
          "billing_info": {
            "$ref": "#/components/schemas/StripeCustomerBillingInfo"
          },
          "setup_intent": {
            "type": "string",
            "title": "Setup Intent"
          }
        },
        "type": "object",
        "required": [
          "billing_info",
          "setup_intent"
        ],
        "title": "StripePaymentInformation",
        "description": "Stripe payment information."
      },
      "StripePaymentMethodInfo": {
        "properties": {
          "brand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand"
          },
          "last4": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last4"
          },
          "exp_month": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exp Month"
          },
          "exp_year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exp Year"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "title": "StripePaymentMethodInfo",
        "description": "Stripe customer billing info."
      },
      "StripeSetupIntentResponse": {
        "properties": {
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "client_secret"
        ],
        "title": "StripeSetupIntentResponse",
        "description": "Stripe setup intent response."
      },
      "StripeTaxId": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "value",
          "type"
        ],
        "title": "StripeTaxId",
        "description": "Stripe tax ID."
      },
      "StudioRunOverDatasetRequestSchema": {
        "properties": {
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "evaluator_rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluator Rules"
          }
        },
        "type": "object",
        "required": [
          "project_name",
          "dataset_id"
        ],
        "title": "StudioRunOverDatasetRequestSchema"
      },
      "SystemMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "system",
            "title": "Type",
            "default": "system"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "SystemMessage",
        "description": "Message for priming AI behavior.\n\nThe system message is usually passed in as the first of a sequence\nof input messages.\n\nExample:\n\n    .. code-block:: python\n\n        from langchain_core.messages import HumanMessage, SystemMessage\n\n        messages = [\n            SystemMessage(\n                content=\"You are a helpful assistant! Your name is Bob.\"\n            ),\n            HumanMessage(\n                content=\"What is your name?\"\n            )\n        ]\n\n        # Define a chat model and invoke it with the messages\n        print(model.invoke(messages))"
      },
      "SystemMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "SystemMessageChunk",
            "title": "Type",
            "default": "SystemMessageChunk"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content"
        ],
        "title": "SystemMessageChunk",
        "description": "System Message chunk."
      },
      "TTLSettings": {
        "properties": {
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "default_trace_tier": {
            "$ref": "#/components/schemas/TraceTier"
          },
          "apply_to_all_projects": {
            "type": "boolean",
            "title": "Apply To All Projects",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "configured_by": {
            "$ref": "#/components/schemas/ConfiguredBy"
          }
        },
        "type": "object",
        "required": [
          "default_trace_tier",
          "id",
          "organization_id",
          "created_at",
          "updated_at",
          "configured_by"
        ],
        "title": "TTLSettings",
        "description": "TTL settings model."
      },
      "TagCount": {
        "properties": {
          "tag": {
            "type": "string",
            "title": "Tag"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "tag",
          "count"
        ],
        "title": "TagCount"
      },
      "TagKey": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "TagKey"
      },
      "TagKeyCreate": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "TagKeyCreate"
      },
      "TagKeyUpdate": {
        "properties": {
          "key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "TagKeyUpdate"
      },
      "TagKeyWithValues": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/TagValue"
            },
            "type": "array",
            "title": "Values"
          }
        },
        "type": "object",
        "required": [
          "key",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "TagKeyWithValues"
      },
      "TagKeyWithValuesAndTaggings": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/TagValueWithTaggings"
            },
            "type": "array",
            "title": "Values"
          }
        },
        "type": "object",
        "required": [
          "key",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "TagKeyWithValuesAndTaggings"
      },
      "TagValue": {
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tag_key_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Key Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "value",
          "id",
          "tag_key_id",
          "created_at",
          "updated_at"
        ],
        "title": "TagValue"
      },
      "TagValueCreate": {
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "TagValueCreate"
      },
      "TagValueUpdate": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "TagValueUpdate"
      },
      "TagValueWithTaggings": {
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tag_key_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Key Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "taggings": {
            "items": {
              "$ref": "#/components/schemas/Tagging"
            },
            "type": "array",
            "title": "Taggings"
          }
        },
        "type": "object",
        "required": [
          "value",
          "id",
          "tag_key_id",
          "created_at",
          "updated_at"
        ],
        "title": "TagValueWithTaggings"
      },
      "Tagging": {
        "properties": {
          "tag_value_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Value Id"
          },
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "tag_value_id",
          "resource_type",
          "resource_id",
          "id",
          "created_at"
        ],
        "title": "Tagging"
      },
      "TaggingCreate": {
        "properties": {
          "tag_value_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Value Id"
          },
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "tag_value_id",
          "resource_type",
          "resource_id"
        ],
        "title": "TaggingCreate"
      },
      "TaggingsByResourceType": {
        "properties": {
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Prompts",
            "default": []
          },
          "projects": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Projects",
            "default": []
          },
          "queues": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Queues",
            "default": []
          },
          "deployments": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Deployments",
            "default": []
          },
          "experiments": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Experiments",
            "default": []
          },
          "datasets": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Datasets",
            "default": []
          },
          "dashboards": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array",
            "title": "Dashboards",
            "default": []
          }
        },
        "type": "object",
        "title": "TaggingsByResourceType"
      },
      "TaggingsResponse": {
        "properties": {
          "tag_key": {
            "type": "string",
            "title": "Tag Key"
          },
          "tag_key_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Key Id"
          },
          "tag_value": {
            "type": "string",
            "title": "Tag Value"
          },
          "tag_value_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tag Value Id"
          },
          "resources": {
            "$ref": "#/components/schemas/TaggingsByResourceType"
          }
        },
        "type": "object",
        "required": [
          "tag_key",
          "tag_key_id",
          "tag_value",
          "tag_value_id",
          "resources"
        ],
        "title": "TaggingsResponse"
      },
      "TenantBulkUnshareRequest": {
        "properties": {
          "share_tokens": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "minItems": 1,
            "title": "Share Tokens"
          }
        },
        "type": "object",
        "title": "TenantBulkUnshareRequest"
      },
      "TenantCreate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ ']+$",
            "title": "Display Name"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "display_name"
        ],
        "title": "TenantCreate",
        "description": "Creation model for the tenant."
      },
      "TenantForUser": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "display_name",
          "is_personal",
          "is_deleted"
        ],
        "title": "TenantForUser"
      },
      "TenantMembers": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/MemberIdentity"
            },
            "type": "array",
            "title": "Members"
          },
          "pending": {
            "items": {
              "$ref": "#/components/schemas/PendingIdentity"
            },
            "type": "array",
            "title": "Pending"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "members",
          "pending"
        ],
        "title": "TenantMembers",
        "description": "Tenant members schema."
      },
      "TenantShareDatasetToken": {
        "properties": {
          "type": {
            "type": "string",
            "const": "dataset",
            "title": "Type"
          },
          "share_token": {
            "type": "string",
            "title": "Share Token"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Name"
          }
        },
        "type": "object",
        "required": [
          "type",
          "share_token",
          "created_at",
          "dataset_id"
        ],
        "title": "TenantShareDatasetToken"
      },
      "TenantShareRunToken": {
        "properties": {
          "type": {
            "type": "string",
            "const": "run",
            "title": "Type"
          },
          "share_token": {
            "type": "string",
            "title": "Share Token"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Name"
          },
          "run_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Type"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "session_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Name"
          }
        },
        "type": "object",
        "required": [
          "type",
          "share_token",
          "created_at",
          "run_id"
        ],
        "title": "TenantShareRunToken"
      },
      "TenantShareTokensResponse": {
        "properties": {
          "entities": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TenantShareRunToken"
                },
                {
                  "$ref": "#/components/schemas/TenantShareDatasetToken"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "dataset": "#/components/schemas/TenantShareDatasetToken",
                  "run": "#/components/schemas/TenantShareRunToken"
                }
              }
            },
            "type": "array",
            "title": "Entities"
          }
        },
        "type": "object",
        "required": [
          "entities"
        ],
        "title": "TenantShareTokensResponse"
      },
      "TenantStats": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "dataset_count": {
            "type": "integer",
            "title": "Dataset Count"
          },
          "tracer_session_count": {
            "type": "integer",
            "title": "Tracer Session Count"
          },
          "repo_count": {
            "type": "integer",
            "title": "Repo Count"
          },
          "annotation_queue_count": {
            "type": "integer",
            "title": "Annotation Queue Count"
          },
          "deployment_count": {
            "type": "integer",
            "title": "Deployment Count"
          },
          "dashboards_count": {
            "type": "integer",
            "title": "Dashboards Count"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "dataset_count",
          "tracer_session_count",
          "repo_count",
          "annotation_queue_count",
          "deployment_count",
          "dashboards_count"
        ],
        "title": "TenantStats",
        "description": "Stats for a tenant."
      },
      "TenantUsageLimitInfo": {
        "properties": {
          "in_reject_set": {
            "type": "boolean",
            "title": "In Reject Set"
          },
          "usage_limit_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TenantUsageLimitType"
              },
              {
                "type": "null"
              }
            ]
          },
          "tenant_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Limit"
          }
        },
        "type": "object",
        "required": [
          "in_reject_set"
        ],
        "title": "TenantUsageLimitInfo"
      },
      "TenantUsageLimitType": {
        "type": "string",
        "enum": [
          "payload_size",
          "events_ingested_per_hour",
          "total_unique_traces",
          "events_ingested_per_minute",
          "user_defined_monthly_traces",
          "user_defined_monthly_longlived_traces",
          "user_defined_unknown"
        ],
        "title": "TenantUsageLimitType"
      },
      "TimedeltaInput": {
        "properties": {
          "days": {
            "type": "integer",
            "title": "Days",
            "default": 0
          },
          "hours": {
            "type": "integer",
            "title": "Hours",
            "default": 0
          },
          "minutes": {
            "type": "integer",
            "title": "Minutes",
            "default": 0
          }
        },
        "type": "object",
        "title": "TimedeltaInput",
        "description": "Timedelta input."
      },
      "ToolCall": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "args": {
            "type": "object",
            "title": "Args"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "type": {
            "type": "string",
            "const": "tool_call",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "name",
          "args",
          "id"
        ],
        "title": "ToolCall",
        "description": "Represents a request to call a tool.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"name\": \"foo\",\n            \"args\": {\"a\": 1},\n            \"id\": \"123\"\n        }\n\n    This represents a request to call the tool named \"foo\" with arguments {\"a\": 1}\n    and an identifier of \"123\"."
      },
      "ToolCallChunk": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "args": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Index"
          },
          "type": {
            "type": "string",
            "const": "tool_call_chunk",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "name",
          "args",
          "id",
          "index"
        ],
        "title": "ToolCallChunk",
        "description": "A chunk of a tool call (e.g., as part of a stream).\n\nWhen merging ToolCallChunks (e.g., via AIMessageChunk.__add__),\nall string attributes are concatenated. Chunks are only merged if their\nvalues of `index` are equal and not None.\n\nExample:\n\n.. code-block:: python\n\n    left_chunks = [ToolCallChunk(name=\"foo\", args='{\"a\":', index=0)]\n    right_chunks = [ToolCallChunk(name=None, args='1}', index=0)]\n\n    (\n        AIMessageChunk(content=\"\", tool_call_chunks=left_chunks)\n        + AIMessageChunk(content=\"\", tool_call_chunks=right_chunks)\n    ).tool_call_chunks == [ToolCallChunk(name='foo', args='{\"a\":1}', index=0)]"
      },
      "ToolMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "tool",
            "title": "Type",
            "default": "tool"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          },
          "artifact": {
            "title": "Artifact"
          },
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "title": "Status",
            "default": "success"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "tool_call_id"
        ],
        "title": "ToolMessage",
        "description": "Message for passing the result of executing a tool back to a model.\n\nToolMessages contain the result of a tool invocation. Typically, the result\nis encoded inside the `content` field.\n\nExample: A ToolMessage representing a result of 42 from a tool call with id\n\n    .. code-block:: python\n\n        from langchain_core.messages import ToolMessage\n\n        ToolMessage(content='42', tool_call_id='call_Jja7J89XsjrOLA5r!MEOW!SL')\n\n\nExample: A ToolMessage where only part of the tool output is sent to the model\n    and the full output is passed in to artifact.\n\n    .. versionadded:: 0.2.17\n\n    .. code-block:: python\n\n        from langchain_core.messages import ToolMessage\n\n        tool_output = {\n            \"stdout\": \"From the graph we can see that the correlation between x and y is ...\",\n            \"stderr\": None,\n            \"artifacts\": {\"type\": \"image\", \"base64_data\": \"/9j/4gIcSU...\"},\n        }\n\n        ToolMessage(\n            content=tool_output[\"stdout\"],\n            artifact=tool_output,\n            tool_call_id='call_Jja7J89XsjrOLA5r!MEOW!SL',\n        )\n\nThe tool_call_id field is used to associate the tool call request with the\ntool call response. This is useful in situations where a chat model is able\nto request multiple tool calls in parallel."
      },
      "ToolMessageChunk": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "const": "ToolMessageChunk",
            "title": "Type",
            "default": "ToolMessageChunk"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          },
          "artifact": {
            "title": "Artifact"
          },
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "title": "Status",
            "default": "success"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "tool_call_id"
        ],
        "title": "ToolMessageChunk",
        "description": "Tool Message chunk."
      },
      "TraceTier": {
        "type": "string",
        "enum": [
          "longlived",
          "shortlived"
        ],
        "title": "TraceTier"
      },
      "TracerSession": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "run_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Count"
          },
          "latency_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P50"
          },
          "latency_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P99"
          },
          "first_token_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P50"
          },
          "first_token_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P99"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "last_run_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time"
          },
          "last_run_start_time_live": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time Live"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "session_feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Feedback Stats"
          },
          "run_facets": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Facets"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          },
          "streaming_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streaming Rate"
          },
          "test_run_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Run Number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id"
        ],
        "title": "TracerSession",
        "description": "TracerSession schema."
      },
      "TracerSessionCreate": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "title": "TracerSessionCreate",
        "description": "Create class for TracerSession."
      },
      "TracerSessionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "TracerSessionUpdate",
        "description": "Update class for TracerSession."
      },
      "TracerSessionWithoutVirtualFields": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "last_run_start_time_live": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time Live"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id"
        ],
        "title": "TracerSessionWithoutVirtualFields",
        "description": "TracerSession schema."
      },
      "TriggerRulesRequest": {
        "properties": {
          "rule_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Ids"
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          }
        },
        "type": "object",
        "title": "TriggerRulesRequest"
      },
      "UpdateFeedbackConfigSchema": {
        "properties": {
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_lower_score_better": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Lower Score Better"
          }
        },
        "type": "object",
        "required": [
          "feedback_key"
        ],
        "title": "UpdateFeedbackConfigSchema"
      },
      "UpdateRepoRequest": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "is_archived": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Archived"
          }
        },
        "type": "object",
        "title": "UpdateRepoRequest",
        "description": "Fields to update a repo"
      },
      "UpdateRoleRequest": {
        "properties": {
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "description",
          "permissions"
        ],
        "title": "UpdateRoleRequest"
      },
      "UpdateRunClusteringJobRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "UpdateRunClusteringJobRequest",
        "description": "Request to update a session cluster job."
      },
      "UpdateRunClusteringJobResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "name",
          "status"
        ],
        "title": "UpdateRunClusteringJobResponse",
        "description": "Response to update a session cluster job."
      },
      "UpsertTTLSettingsRequest": {
        "properties": {
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "default_trace_tier": {
            "$ref": "#/components/schemas/TraceTier"
          },
          "apply_to_all_projects": {
            "type": "boolean",
            "title": "Apply To All Projects",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "default_trace_tier"
        ],
        "title": "UpsertTTLSettingsRequest",
        "description": "Base TTL settings model."
      },
      "UpsertUsageLimit": {
        "properties": {
          "limit_type": {
            "$ref": "#/components/schemas/UsageLimitType"
          },
          "limit_value": {
            "type": "integer",
            "title": "Limit Value"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "limit_type",
          "limit_value"
        ],
        "title": "UpsertUsageLimit",
        "description": "Request body for creating or updating a usage limit."
      },
      "UsageLimit": {
        "properties": {
          "limit_type": {
            "$ref": "#/components/schemas/UsageLimitType"
          },
          "limit_value": {
            "type": "integer",
            "title": "Limit Value"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "limit_type",
          "limit_value",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "UsageLimit",
        "description": "Usage limit model."
      },
      "UsageLimitType": {
        "type": "string",
        "enum": [
          "monthly_traces",
          "monthly_longlived_traces"
        ],
        "title": "UsageLimitType",
        "description": "Type of usage limit."
      },
      "UsageMetadata": {
        "properties": {
          "input_tokens": {
            "type": "integer",
            "title": "Input Tokens"
          },
          "output_tokens": {
            "type": "integer",
            "title": "Output Tokens"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens"
          },
          "input_token_details": {
            "$ref": "#/components/schemas/InputTokenDetails"
          },
          "output_token_details": {
            "$ref": "#/components/schemas/OutputTokenDetails"
          }
        },
        "type": "object",
        "required": [
          "input_tokens",
          "output_tokens",
          "total_tokens"
        ],
        "title": "UsageMetadata",
        "description": "Usage metadata for a message, such as token counts.\n\nThis is a standard representation of token usage that is consistent across models.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"input_tokens\": 350,\n            \"output_tokens\": 240,\n            \"total_tokens\": 590,\n            \"input_token_details\": {\n                \"audio\": 10,\n                \"cache_creation\": 200,\n                \"cache_read\": 100,\n            },\n            \"output_token_details\": {\n                \"audio\": 10,\n                \"reasoning\": 200,\n            }\n        }\n\n.. versionchanged:: 0.3.9\n\n    Added ``input_token_details`` and ``output_token_details``."
      },
      "UserWithPassword": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "ls_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ls User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "id",
          "ls_user_id",
          "created_at",
          "updated_at",
          "email"
        ],
        "title": "UserWithPassword"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "Wallet": {
        "properties": {
          "credit_balance_micros": {
            "type": "integer",
            "title": "Credit Balance Micros"
          },
          "inflight_balance_micros": {
            "type": "integer",
            "title": "Inflight Balance Micros"
          }
        },
        "type": "object",
        "required": [
          "credit_balance_micros",
          "inflight_balance_micros"
        ],
        "title": "Wallet"
      },
      "WorkspaceCreate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ '@()]+$",
            "title": "Display Name"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "display_name"
        ],
        "title": "WorkspaceCreate",
        "description": "Creation model for the workspace."
      },
      "WorkspacePatch": {
        "properties": {
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ '@()]+$",
            "title": "Display Name"
          }
        },
        "type": "object",
        "required": [
          "display_name"
        ],
        "title": "WorkspacePatch",
        "description": "Patch model for the workspace."
      },
      "app__hub__crud__tenants__Tenant": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "id",
          "display_name",
          "created_at"
        ],
        "title": "Tenant"
      },
      "app__schemas__Tenant": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "display_name",
          "is_personal",
          "is_deleted"
        ],
        "title": "Tenant",
        "description": "Tenant schema."
      },
      "alerts.AlertAction": {
        "type": "object",
        "required": [
          "config",
          "target"
        ],
        "properties": {
          "alert_rule_id": {
            "type": "string"
          },
          "config": {
            "type": "object"
          },
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "target": {
            "type": "string",
            "enum": [
              "pagerduty",
              "webhook"
            ]
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "alerts.AlertActionBase": {
        "type": "object",
        "required": [
          "config",
          "target"
        ],
        "properties": {
          "alert_rule_id": {
            "type": "string"
          },
          "config": {
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "target": {
            "type": "string",
            "enum": [
              "pagerduty",
              "webhook"
            ]
          }
        }
      },
      "alerts.AlertRule": {
        "type": "object",
        "required": [
          "aggregation",
          "attribute",
          "description",
          "name",
          "operator",
          "type",
          "window_minutes"
        ],
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "avg",
              "sum",
              "pct"
            ]
          },
          "attribute": {
            "type": "string",
            "enum": [
              "latency",
              "error_count",
              "feedback_score",
              "run_latency",
              "run_count"
            ]
          },
          "created_at": {
            "type": "string"
          },
          "denominator_filter": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "enum": [
              "gte",
              "lte"
            ]
          },
          "threshold": {
            "type": "number"
          },
          "threshold_multiplier": {
            "type": "number"
          },
          "threshold_window_minutes": {
            "type": "integer",
            "maximum": 60
          },
          "type": {
            "type": "string",
            "enum": [
              "threshold",
              "change"
            ]
          },
          "updated_at": {
            "type": "string"
          },
          "window_minutes": {
            "description": "max 15 minutes for alert rule",
            "type": "integer",
            "maximum": 15
          }
        }
      },
      "alerts.AlertRuleBase": {
        "type": "object",
        "required": [
          "aggregation",
          "attribute",
          "description",
          "name",
          "operator",
          "type",
          "window_minutes"
        ],
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "avg",
              "sum",
              "pct"
            ]
          },
          "attribute": {
            "type": "string",
            "enum": [
              "latency",
              "error_count",
              "feedback_score",
              "run_latency",
              "run_count"
            ]
          },
          "denominator_filter": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "enum": [
              "gte",
              "lte"
            ]
          },
          "threshold": {
            "type": "number"
          },
          "threshold_multiplier": {
            "type": "number"
          },
          "threshold_window_minutes": {
            "type": "integer",
            "maximum": 60
          },
          "type": {
            "type": "string",
            "enum": [
              "threshold",
              "change"
            ]
          },
          "window_minutes": {
            "description": "max 15 minutes for alert rule",
            "type": "integer",
            "maximum": 15
          }
        }
      },
      "alerts.AlertRuleResponse": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/alerts.AlertAction"
            }
          },
          "rule": {
            "$ref": "#/components/schemas/alerts.AlertRule"
          }
        }
      },
      "alerts.CreateAlertRuleRequest": {
        "type": "object",
        "required": [
          "actions",
          "rule"
        ],
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/alerts.AlertActionBase"
            }
          },
          "rule": {
            "$ref": "#/components/schemas/alerts.AlertRuleBase"
          }
        }
      },
      "alerts.ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Invalid request: missing required fields"
          }
        }
      },
      "alerts.UpdateAlertRuleRequest": {
        "type": "object",
        "required": [
          "actions",
          "rule"
        ],
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/alerts.AlertActionBase"
            }
          },
          "rule": {
            "$ref": "#/components/schemas/alerts.AlertRuleBase"
          }
        }
      },
      "examples.DeleteExamplesRequest": {
        "type": "object",
        "required": [
          "example_ids",
          "hard_delete"
        ],
        "properties": {
          "example_ids": {
            "description": "ExampleIDs is a list of UUIDs identifying the examples to delete.",
            "type": "array",
            "maxItems": 1000,
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "hard_delete": {
            "description": "HardDelete indicates whether to perform a hard delete.\nCurrently only True is supported.",
            "type": "boolean"
          }
        }
      },
      "examples.ErrorResponse": {
        "type": "object",
        "properties": {
          "details": {
            "description": "Optional error details as JSON string",
            "type": "string",
            "example": "{\"field\":\"dataset_id\",\"reason\":\"required\"}"
          },
          "error": {
            "description": "Error message",
            "type": "string",
            "example": "Invalid request: missing required fields"
          }
        }
      },
      "examples.ExamplesCreatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 1
          },
          "example_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "[\"123e4567-e89b-12d3-a456-426614174000\"]"
            ]
          }
        }
      },
      "examples.ExamplesDeletedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 1
          },
          "example_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "[\"123e4567-e89b-12d3-a456-426614174000\"]"
            ]
          }
        }
      },
      "examples.ExamplesUpdatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 1
          },
          "example_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "[\"123e4567-e89b-12d3-a456-426614174000\"]"
            ]
          }
        }
      },
      "experiment_view_overrides.ColumnOverride": {
        "type": "object",
        "required": [
          "column"
        ],
        "properties": {
          "color_gradient": {
            "type": "array",
            "maxItems": 20,
            "items": {
              "type": "array",
              "items": {}
            }
          },
          "color_map": {
            "type": "object",
            "additionalProperties": true
          },
          "column": {
            "type": "string",
            "maxLength": 200
          },
          "hide": {
            "type": "boolean"
          },
          "precision": {
            "type": "integer",
            "maximum": 6,
            "minimum": 1
          }
        }
      },
      "experiment_view_overrides.ExperimentViewOverride": {
        "type": "object",
        "properties": {
          "column_overrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/experiment_view_overrides.ColumnOverride"
            }
          },
          "created_at": {
            "type": "string"
          },
          "dataset_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "modified_at": {
            "type": "string"
          }
        }
      },
      "experiment_view_overrides.ExperimentViewOverridePatchRequest": {
        "type": "object",
        "required": [
          "column_overrides"
        ],
        "properties": {
          "column_overrides": {
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/experiment_view_overrides.ColumnOverride"
            }
          }
        }
      },
      "experiment_view_overrides.ExperimentViewOverridePostRequest": {
        "type": "object",
        "required": [
          "column_overrides"
        ],
        "properties": {
          "column_overrides": {
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/experiment_view_overrides.ColumnOverride"
            }
          }
        }
      },
      "feedback.FeedbackCategory": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "minLength": 1
          },
          "value": {
            "type": "number"
          }
        }
      },
      "feedback.FeedbackConfig": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/feedback.FeedbackCategory"
            }
          },
          "max": {
            "type": "number"
          },
          "min": {
            "type": "number"
          },
          "type": {
            "$ref": "#/components/schemas/feedback.FeedbackType"
          }
        }
      },
      "feedback.FeedbackCreateSchema": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "comparative_experiment_id": {
            "type": "string"
          },
          "correction": {},
          "created_at": {
            "type": "string"
          },
          "error": {
            "type": "boolean"
          },
          "feedback_config": {
            "$ref": "#/components/schemas/feedback.FeedbackConfig"
          },
          "feedback_group_id": {
            "type": "string"
          },
          "feedback_source": {
            "$ref": "#/components/schemas/feedback.FeedbackSource"
          },
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "modified_at": {
            "type": "string"
          },
          "run_id": {
            "type": "string"
          },
          "score": {},
          "session_id": {
            "type": "string"
          },
          "trace_id": {
            "type": "string"
          },
          "value": {}
        }
      },
      "feedback.FeedbackSource": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": true
          },
          "type": {
            "type": "string"
          }
        }
      },
      "feedback.FeedbackType": {
        "type": "string",
        "enum": [
          "continuous",
          "categorical",
          "freeform"
        ],
        "x-enum-varnames": [
          "FeedbackTypeContinuous",
          "FeedbackTypeCategorical",
          "FeedbackTypeFreeform"
        ]
      },
      "runs.ErrorResponse": {
        "type": "object",
        "properties": {
          "details": {
            "description": "Optional error details as JSON string",
            "type": "string",
            "example": "{\"field\":\"dataset_id\",\"reason\":\"required\"}"
          },
          "error": {
            "description": "Error message",
            "type": "string",
            "example": "Invalid request: missing required fields"
          }
        }
      },
      "runs.Run": {
        "type": "object",
        "properties": {
          "dotted_order": {
            "type": "string"
          },
          "end_time": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "extra": {
            "type": "object",
            "additionalProperties": true
          },
          "id": {
            "type": "string"
          },
          "input_attachments": {
            "type": "object",
            "additionalProperties": true
          },
          "inputs": {
            "type": "object",
            "additionalProperties": true
          },
          "name": {
            "type": "string"
          },
          "output_attachments": {
            "type": "object",
            "additionalProperties": true
          },
          "outputs": {
            "type": "object",
            "additionalProperties": true
          },
          "parent_run_id": {
            "type": "string"
          },
          "reference_example_id": {
            "type": "string"
          },
          "run_type": {
            "type": "string",
            "enum": [
              "tool",
              "chain",
              "llm",
              "retriever",
              "embedding",
              "prompt",
              "parser"
            ]
          },
          "serialized": {
            "type": "object",
            "additionalProperties": true
          },
          "session_id": {
            "type": "string"
          },
          "session_name": {
            "type": "string"
          },
          "start_time": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "trace_id": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "API Key": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "Tenant ID": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Tenant-Id"
      },
      "Bearer Auth": {
        "type": "http",
        "description": "Bearer tokens are used to authenticate from the UI. Must also specify x-tenant-id or x-organization-id (for org scoped apis).",
        "scheme": "bearer"
      },
      "Organization ID": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Organization-Id"
      }
    }
  },
  "definitions": {
    "alerts.AlertAction": {
      "type": "object",
      "required": [
        "config",
        "target"
      ],
      "properties": {
        "alert_rule_id": {
          "type": "string"
        },
        "config": {
          "type": "object"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "target": {
          "type": "string",
          "enum": [
            "pagerduty",
            "webhook"
          ]
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "alerts.AlertActionBase": {
      "type": "object",
      "required": [
        "config",
        "target"
      ],
      "properties": {
        "alert_rule_id": {
          "type": "string"
        },
        "config": {
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "target": {
          "type": "string",
          "enum": [
            "pagerduty",
            "webhook"
          ]
        }
      }
    },
    "alerts.AlertRule": {
      "type": "object",
      "required": [
        "aggregation",
        "attribute",
        "description",
        "name",
        "operator",
        "type",
        "window_minutes"
      ],
      "properties": {
        "aggregation": {
          "type": "string",
          "enum": [
            "avg",
            "sum",
            "pct"
          ]
        },
        "attribute": {
          "type": "string",
          "enum": [
            "latency",
            "error_count",
            "feedback_score",
            "run_latency",
            "run_count"
          ]
        },
        "created_at": {
          "type": "string"
        },
        "denominator_filter": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "enum": [
            "gte",
            "lte"
          ]
        },
        "threshold": {
          "type": "number"
        },
        "threshold_multiplier": {
          "type": "number"
        },
        "threshold_window_minutes": {
          "type": "integer",
          "maximum": 60
        },
        "type": {
          "type": "string",
          "enum": [
            "threshold",
            "change"
          ]
        },
        "updated_at": {
          "type": "string"
        },
        "window_minutes": {
          "description": "max 15 minutes for alert rule",
          "type": "integer",
          "maximum": 15
        }
      }
    },
    "alerts.AlertRuleBase": {
      "type": "object",
      "required": [
        "aggregation",
        "attribute",
        "description",
        "name",
        "operator",
        "type",
        "window_minutes"
      ],
      "properties": {
        "aggregation": {
          "type": "string",
          "enum": [
            "avg",
            "sum",
            "pct"
          ]
        },
        "attribute": {
          "type": "string",
          "enum": [
            "latency",
            "error_count",
            "feedback_score",
            "run_latency",
            "run_count"
          ]
        },
        "denominator_filter": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "enum": [
            "gte",
            "lte"
          ]
        },
        "threshold": {
          "type": "number"
        },
        "threshold_multiplier": {
          "type": "number"
        },
        "threshold_window_minutes": {
          "type": "integer",
          "maximum": 60
        },
        "type": {
          "type": "string",
          "enum": [
            "threshold",
            "change"
          ]
        },
        "window_minutes": {
          "description": "max 15 minutes for alert rule",
          "type": "integer",
          "maximum": 15
        }
      }
    },
    "alerts.AlertRuleResponse": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/alerts.AlertAction"
          }
        },
        "rule": {
          "$ref": "#/components/schemas/alerts.AlertRule"
        }
      }
    },
    "alerts.CreateAlertRuleRequest": {
      "type": "object",
      "required": [
        "actions",
        "rule"
      ],
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/alerts.AlertActionBase"
          }
        },
        "rule": {
          "$ref": "#/components/schemas/alerts.AlertRuleBase"
        }
      }
    },
    "alerts.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Invalid request: missing required fields"
        }
      }
    },
    "alerts.UpdateAlertRuleRequest": {
      "type": "object",
      "required": [
        "actions",
        "rule"
      ],
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/alerts.AlertActionBase"
          }
        },
        "rule": {
          "$ref": "#/components/schemas/alerts.AlertRuleBase"
        }
      }
    },
    "examples.DeleteExamplesRequest": {
      "type": "object",
      "required": [
        "example_ids",
        "hard_delete"
      ],
      "properties": {
        "example_ids": {
          "description": "ExampleIDs is a list of UUIDs identifying the examples to delete.",
          "type": "array",
          "maxItems": 1000,
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "hard_delete": {
          "description": "HardDelete indicates whether to perform a hard delete.\nCurrently only True is supported.",
          "type": "boolean"
        }
      }
    },
    "examples.ErrorResponse": {
      "type": "object",
      "properties": {
        "details": {
          "description": "Optional error details as JSON string",
          "type": "string",
          "example": "{\"field\":\"dataset_id\",\"reason\":\"required\"}"
        },
        "error": {
          "description": "Error message",
          "type": "string",
          "example": "Invalid request: missing required fields"
        }
      }
    },
    "examples.ExamplesCreatedResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "example_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"123e4567-e89b-12d3-a456-426614174000\"]"
          ]
        }
      }
    },
    "examples.ExamplesDeletedResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "example_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"123e4567-e89b-12d3-a456-426614174000\"]"
          ]
        }
      }
    },
    "examples.ExamplesUpdatedResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "example_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"123e4567-e89b-12d3-a456-426614174000\"]"
          ]
        }
      }
    },
    "experiment_view_overrides.ColumnOverride": {
      "type": "object",
      "required": [
        "column"
      ],
      "properties": {
        "color_gradient": {
          "type": "array",
          "maxItems": 20,
          "items": {
            "type": "array",
            "items": {}
          }
        },
        "color_map": {
          "type": "object",
          "additionalProperties": true
        },
        "column": {
          "type": "string",
          "maxLength": 200
        },
        "hide": {
          "type": "boolean"
        },
        "precision": {
          "type": "integer",
          "maximum": 6,
          "minimum": 1
        }
      }
    },
    "experiment_view_overrides.ExperimentViewOverride": {
      "type": "object",
      "properties": {
        "column_overrides": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/experiment_view_overrides.ColumnOverride"
          }
        },
        "created_at": {
          "type": "string"
        },
        "dataset_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "modified_at": {
          "type": "string"
        }
      }
    },
    "experiment_view_overrides.ExperimentViewOverridePatchRequest": {
      "type": "object",
      "required": [
        "column_overrides"
      ],
      "properties": {
        "column_overrides": {
          "type": "array",
          "maxItems": 50,
          "minItems": 1,
          "items": {
            "$ref": "#/components/schemas/experiment_view_overrides.ColumnOverride"
          }
        }
      }
    },
    "experiment_view_overrides.ExperimentViewOverridePostRequest": {
      "type": "object",
      "required": [
        "column_overrides"
      ],
      "properties": {
        "column_overrides": {
          "type": "array",
          "maxItems": 50,
          "minItems": 1,
          "items": {
            "$ref": "#/components/schemas/experiment_view_overrides.ColumnOverride"
          }
        }
      }
    },
    "feedback.FeedbackCategory": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "minLength": 1
        },
        "value": {
          "type": "number"
        }
      }
    },
    "feedback.FeedbackConfig": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/feedback.FeedbackCategory"
          }
        },
        "max": {
          "type": "number"
        },
        "min": {
          "type": "number"
        },
        "type": {
          "$ref": "#/components/schemas/feedback.FeedbackType"
        }
      }
    },
    "feedback.FeedbackCreateSchema": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "comparative_experiment_id": {
          "type": "string"
        },
        "correction": {},
        "created_at": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "feedback_config": {
          "$ref": "#/components/schemas/feedback.FeedbackConfig"
        },
        "feedback_group_id": {
          "type": "string"
        },
        "feedback_source": {
          "$ref": "#/components/schemas/feedback.FeedbackSource"
        },
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "modified_at": {
          "type": "string"
        },
        "run_id": {
          "type": "string"
        },
        "score": {},
        "session_id": {
          "type": "string"
        },
        "trace_id": {
          "type": "string"
        },
        "value": {}
      }
    },
    "feedback.FeedbackSource": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": true
        },
        "type": {
          "type": "string"
        }
      }
    },
    "feedback.FeedbackType": {
      "type": "string",
      "enum": [
        "continuous",
        "categorical",
        "freeform"
      ],
      "x-enum-varnames": [
        "FeedbackTypeContinuous",
        "FeedbackTypeCategorical",
        "FeedbackTypeFreeform"
      ]
    },
    "runs.ErrorResponse": {
      "type": "object",
      "properties": {
        "details": {
          "description": "Optional error details as JSON string",
          "type": "string",
          "example": "{\"field\":\"dataset_id\",\"reason\":\"required\"}"
        },
        "error": {
          "description": "Error message",
          "type": "string",
          "example": "Invalid request: missing required fields"
        }
      }
    },
    "runs.Run": {
      "type": "object",
      "properties": {
        "dotted_order": {
          "type": "string"
        },
        "end_time": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "extra": {
          "type": "object",
          "additionalProperties": true
        },
        "id": {
          "type": "string"
        },
        "input_attachments": {
          "type": "object",
          "additionalProperties": true
        },
        "inputs": {
          "type": "object",
          "additionalProperties": true
        },
        "name": {
          "type": "string"
        },
        "output_attachments": {
          "type": "object",
          "additionalProperties": true
        },
        "outputs": {
          "type": "object",
          "additionalProperties": true
        },
        "parent_run_id": {
          "type": "string"
        },
        "reference_example_id": {
          "type": "string"
        },
        "run_type": {
          "type": "string",
          "enum": [
            "tool",
            "chain",
            "llm",
            "retriever",
            "embedding",
            "prompt",
            "parser"
          ]
        },
        "serialized": {
          "type": "object",
          "additionalProperties": true
        },
        "session_id": {
          "type": "string"
        },
        "session_name": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "trace_id": {
          "type": "string"
        }
      }
    }
  }
}