/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * OrgUsage
 */
@JsonPropertyOrder({
  OrgUsage.JSON_PROPERTY_CUSTOMER_ID,
  OrgUsage.JSON_PROPERTY_BILLABLE_METRIC_ID,
  OrgUsage.JSON_PROPERTY_BILLABLE_METRIC_NAME,
  OrgUsage.JSON_PROPERTY_START_TIMESTAMP,
  OrgUsage.JSON_PROPERTY_END_TIMESTAMP,
  OrgUsage.JSON_PROPERTY_VALUE,
  OrgUsage.JSON_PROPERTY_GROUPS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class OrgUsage {
  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  @javax.annotation.Nonnull
  private String customerId;

  public static final String JSON_PROPERTY_BILLABLE_METRIC_ID = "billable_metric_id";
  @javax.annotation.Nonnull
  private String billableMetricId;

  public static final String JSON_PROPERTY_BILLABLE_METRIC_NAME = "billable_metric_name";
  @javax.annotation.Nonnull
  private String billableMetricName;

  public static final String JSON_PROPERTY_START_TIMESTAMP = "start_timestamp";
  @javax.annotation.Nonnull
  private String startTimestamp;

  public static final String JSON_PROPERTY_END_TIMESTAMP = "end_timestamp";
  @javax.annotation.Nonnull
  private String endTimestamp;

  public static final String JSON_PROPERTY_VALUE = "value";
  @javax.annotation.Nullable
  private BigDecimal value;

  public static final String JSON_PROPERTY_GROUPS = "groups";
  @javax.annotation.Nullable
  private Map<String, BigDecimal> groups;

  public OrgUsage() { 
  }

  public OrgUsage customerId(@javax.annotation.Nonnull String customerId) {
    this.customerId = customerId;
    return this;
  }

  /**
   * Get customerId
   * @return customerId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(@javax.annotation.Nonnull String customerId) {
    this.customerId = customerId;
  }


  public OrgUsage billableMetricId(@javax.annotation.Nonnull String billableMetricId) {
    this.billableMetricId = billableMetricId;
    return this;
  }

  /**
   * Get billableMetricId
   * @return billableMetricId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BILLABLE_METRIC_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getBillableMetricId() {
    return billableMetricId;
  }


  @JsonProperty(JSON_PROPERTY_BILLABLE_METRIC_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBillableMetricId(@javax.annotation.Nonnull String billableMetricId) {
    this.billableMetricId = billableMetricId;
  }


  public OrgUsage billableMetricName(@javax.annotation.Nonnull String billableMetricName) {
    this.billableMetricName = billableMetricName;
    return this;
  }

  /**
   * Get billableMetricName
   * @return billableMetricName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BILLABLE_METRIC_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getBillableMetricName() {
    return billableMetricName;
  }


  @JsonProperty(JSON_PROPERTY_BILLABLE_METRIC_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBillableMetricName(@javax.annotation.Nonnull String billableMetricName) {
    this.billableMetricName = billableMetricName;
  }


  public OrgUsage startTimestamp(@javax.annotation.Nonnull String startTimestamp) {
    this.startTimestamp = startTimestamp;
    return this;
  }

  /**
   * Get startTimestamp
   * @return startTimestamp
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getStartTimestamp() {
    return startTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_START_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartTimestamp(@javax.annotation.Nonnull String startTimestamp) {
    this.startTimestamp = startTimestamp;
  }


  public OrgUsage endTimestamp(@javax.annotation.Nonnull String endTimestamp) {
    this.endTimestamp = endTimestamp;
    return this;
  }

  /**
   * Get endTimestamp
   * @return endTimestamp
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_END_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getEndTimestamp() {
    return endTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_END_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndTimestamp(@javax.annotation.Nonnull String endTimestamp) {
    this.endTimestamp = endTimestamp;
  }


  public OrgUsage value(@javax.annotation.Nullable BigDecimal value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public BigDecimal getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValue(@javax.annotation.Nullable BigDecimal value) {
    this.value = value;
  }


  public OrgUsage groups(@javax.annotation.Nullable Map<String, BigDecimal> groups) {
    this.groups = groups;
    return this;
  }

  public OrgUsage putGroupsItem(String key, BigDecimal groupsItem) {
    if (this.groups == null) {
      this.groups = new HashMap<>();
    }
    this.groups.put(key, groupsItem);
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
  public Map<String, BigDecimal> getGroups() {
    return groups;
  }


  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
  public void setGroups(@javax.annotation.Nullable Map<String, BigDecimal> groups) {
    this.groups = groups;
  }


  /**
   * Return true if this OrgUsage object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgUsage orgUsage = (OrgUsage) o;
    return Objects.equals(this.customerId, orgUsage.customerId) &&
        Objects.equals(this.billableMetricId, orgUsage.billableMetricId) &&
        Objects.equals(this.billableMetricName, orgUsage.billableMetricName) &&
        Objects.equals(this.startTimestamp, orgUsage.startTimestamp) &&
        Objects.equals(this.endTimestamp, orgUsage.endTimestamp) &&
        Objects.equals(this.value, orgUsage.value) &&
        Objects.equals(this.groups, orgUsage.groups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, billableMetricId, billableMetricName, startTimestamp, endTimestamp, value, groups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgUsage {\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    billableMetricId: ").append(toIndentedString(billableMetricId)).append("\n");
    sb.append("    billableMetricName: ").append(toIndentedString(billableMetricName)).append("\n");
    sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
    sb.append("    endTimestamp: ").append(toIndentedString(endTimestamp)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `customer_id` to the URL query string
    if (getCustomerId() != null) {
      joiner.add(String.format("%scustomer_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCustomerId()))));
    }

    // add `billable_metric_id` to the URL query string
    if (getBillableMetricId() != null) {
      joiner.add(String.format("%sbillable_metric_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getBillableMetricId()))));
    }

    // add `billable_metric_name` to the URL query string
    if (getBillableMetricName() != null) {
      joiner.add(String.format("%sbillable_metric_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getBillableMetricName()))));
    }

    // add `start_timestamp` to the URL query string
    if (getStartTimestamp() != null) {
      joiner.add(String.format("%sstart_timestamp%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStartTimestamp()))));
    }

    // add `end_timestamp` to the URL query string
    if (getEndTimestamp() != null) {
      joiner.add(String.format("%send_timestamp%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEndTimestamp()))));
    }

    // add `value` to the URL query string
    if (getValue() != null) {
      joiner.add(String.format("%svalue%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getValue()))));
    }

    // add `groups` to the URL query string
    if (getGroups() != null) {
      for (String _key : getGroups().keySet()) {
        joiner.add(String.format("%sgroups%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getGroups().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getGroups().get(_key)))));
      }
    }

    return joiner.toString();
  }

    public static class Builder {

    private OrgUsage instance;

    public Builder() {
      this(new OrgUsage());
    }

    protected Builder(OrgUsage instance) {
      this.instance = instance;
    }

    public OrgUsage.Builder customerId(String customerId) {
      this.instance.customerId = customerId;
      return this;
    }
    public OrgUsage.Builder billableMetricId(String billableMetricId) {
      this.instance.billableMetricId = billableMetricId;
      return this;
    }
    public OrgUsage.Builder billableMetricName(String billableMetricName) {
      this.instance.billableMetricName = billableMetricName;
      return this;
    }
    public OrgUsage.Builder startTimestamp(String startTimestamp) {
      this.instance.startTimestamp = startTimestamp;
      return this;
    }
    public OrgUsage.Builder endTimestamp(String endTimestamp) {
      this.instance.endTimestamp = endTimestamp;
      return this;
    }
    public OrgUsage.Builder value(BigDecimal value) {
      this.instance.value = value;
      return this;
    }
    public OrgUsage.Builder groups(Map<String, BigDecimal> groups) {
      this.instance.groups = groups;
      return this;
    }


    /**
    * returns a built OrgUsage instance.
    *
    * The builder is not reusable.
    */
    public OrgUsage build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static OrgUsage.Builder builder() {
    return new OrgUsage.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public OrgUsage.Builder toBuilder() {
    return new OrgUsage.Builder()
      .customerId(getCustomerId())
      .billableMetricId(getBillableMetricId())
      .billableMetricName(getBillableMetricName())
      .startTimestamp(getStartTimestamp())
      .endTimestamp(getEndTimestamp())
      .value(getValue())
      .groups(getGroups());
  }

}

