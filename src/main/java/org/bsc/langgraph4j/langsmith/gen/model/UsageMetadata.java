/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.bsc.langgraph4j.langsmith.gen.model.InputTokenDetails;
import org.bsc.langgraph4j.langsmith.gen.model.OutputTokenDetails;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Usage metadata for a message, such as token counts.  This is a standard representation of token usage that is consistent across models.  Example:      .. code-block:: python          {             \&quot;input_tokens\&quot;: 350,             \&quot;output_tokens\&quot;: 240,             \&quot;total_tokens\&quot;: 590,             \&quot;input_token_details\&quot;: {                 \&quot;audio\&quot;: 10,                 \&quot;cache_creation\&quot;: 200,                 \&quot;cache_read\&quot;: 100,             },             \&quot;output_token_details\&quot;: {                 \&quot;audio\&quot;: 10,                 \&quot;reasoning\&quot;: 200,             }         }  .. versionchanged:: 0.3.9      Added &#x60;&#x60;input_token_details&#x60;&#x60; and &#x60;&#x60;output_token_details&#x60;&#x60;.
 */
@JsonPropertyOrder({
  UsageMetadata.JSON_PROPERTY_INPUT_TOKENS,
  UsageMetadata.JSON_PROPERTY_OUTPUT_TOKENS,
  UsageMetadata.JSON_PROPERTY_TOTAL_TOKENS,
  UsageMetadata.JSON_PROPERTY_INPUT_TOKEN_DETAILS,
  UsageMetadata.JSON_PROPERTY_OUTPUT_TOKEN_DETAILS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class UsageMetadata {
  public static final String JSON_PROPERTY_INPUT_TOKENS = "input_tokens";
  @javax.annotation.Nonnull
  private Integer inputTokens;

  public static final String JSON_PROPERTY_OUTPUT_TOKENS = "output_tokens";
  @javax.annotation.Nonnull
  private Integer outputTokens;

  public static final String JSON_PROPERTY_TOTAL_TOKENS = "total_tokens";
  @javax.annotation.Nonnull
  private Integer totalTokens;

  public static final String JSON_PROPERTY_INPUT_TOKEN_DETAILS = "input_token_details";
  @javax.annotation.Nullable
  private InputTokenDetails inputTokenDetails;

  public static final String JSON_PROPERTY_OUTPUT_TOKEN_DETAILS = "output_token_details";
  @javax.annotation.Nullable
  private OutputTokenDetails outputTokenDetails;

  public UsageMetadata() { 
  }

  public UsageMetadata inputTokens(@javax.annotation.Nonnull Integer inputTokens) {
    this.inputTokens = inputTokens;
    return this;
  }

  /**
   * Get inputTokens
   * @return inputTokens
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INPUT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getInputTokens() {
    return inputTokens;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInputTokens(@javax.annotation.Nonnull Integer inputTokens) {
    this.inputTokens = inputTokens;
  }


  public UsageMetadata outputTokens(@javax.annotation.Nonnull Integer outputTokens) {
    this.outputTokens = outputTokens;
    return this;
  }

  /**
   * Get outputTokens
   * @return outputTokens
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OUTPUT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getOutputTokens() {
    return outputTokens;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOutputTokens(@javax.annotation.Nonnull Integer outputTokens) {
    this.outputTokens = outputTokens;
  }


  public UsageMetadata totalTokens(@javax.annotation.Nonnull Integer totalTokens) {
    this.totalTokens = totalTokens;
    return this;
  }

  /**
   * Get totalTokens
   * @return totalTokens
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_TOKENS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getTotalTokens() {
    return totalTokens;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_TOKENS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalTokens(@javax.annotation.Nonnull Integer totalTokens) {
    this.totalTokens = totalTokens;
  }


  public UsageMetadata inputTokenDetails(@javax.annotation.Nullable InputTokenDetails inputTokenDetails) {
    this.inputTokenDetails = inputTokenDetails;
    return this;
  }

  /**
   * Get inputTokenDetails
   * @return inputTokenDetails
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT_TOKEN_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public InputTokenDetails getInputTokenDetails() {
    return inputTokenDetails;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_TOKEN_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputTokenDetails(@javax.annotation.Nullable InputTokenDetails inputTokenDetails) {
    this.inputTokenDetails = inputTokenDetails;
  }


  public UsageMetadata outputTokenDetails(@javax.annotation.Nullable OutputTokenDetails outputTokenDetails) {
    this.outputTokenDetails = outputTokenDetails;
    return this;
  }

  /**
   * Get outputTokenDetails
   * @return outputTokenDetails
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUT_TOKEN_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OutputTokenDetails getOutputTokenDetails() {
    return outputTokenDetails;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_TOKEN_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputTokenDetails(@javax.annotation.Nullable OutputTokenDetails outputTokenDetails) {
    this.outputTokenDetails = outputTokenDetails;
  }


  /**
   * Return true if this UsageMetadata object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsageMetadata usageMetadata = (UsageMetadata) o;
    return Objects.equals(this.inputTokens, usageMetadata.inputTokens) &&
        Objects.equals(this.outputTokens, usageMetadata.outputTokens) &&
        Objects.equals(this.totalTokens, usageMetadata.totalTokens) &&
        Objects.equals(this.inputTokenDetails, usageMetadata.inputTokenDetails) &&
        Objects.equals(this.outputTokenDetails, usageMetadata.outputTokenDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputTokens, outputTokens, totalTokens, inputTokenDetails, outputTokenDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsageMetadata {\n");
    sb.append("    inputTokens: ").append(toIndentedString(inputTokens)).append("\n");
    sb.append("    outputTokens: ").append(toIndentedString(outputTokens)).append("\n");
    sb.append("    totalTokens: ").append(toIndentedString(totalTokens)).append("\n");
    sb.append("    inputTokenDetails: ").append(toIndentedString(inputTokenDetails)).append("\n");
    sb.append("    outputTokenDetails: ").append(toIndentedString(outputTokenDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `input_tokens` to the URL query string
    if (getInputTokens() != null) {
      joiner.add(String.format("%sinput_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInputTokens()))));
    }

    // add `output_tokens` to the URL query string
    if (getOutputTokens() != null) {
      joiner.add(String.format("%soutput_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOutputTokens()))));
    }

    // add `total_tokens` to the URL query string
    if (getTotalTokens() != null) {
      joiner.add(String.format("%stotal_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTotalTokens()))));
    }

    // add `input_token_details` to the URL query string
    if (getInputTokenDetails() != null) {
      joiner.add(getInputTokenDetails().toUrlQueryString(prefix + "input_token_details" + suffix));
    }

    // add `output_token_details` to the URL query string
    if (getOutputTokenDetails() != null) {
      joiner.add(getOutputTokenDetails().toUrlQueryString(prefix + "output_token_details" + suffix));
    }

    return joiner.toString();
  }

    public static class Builder {

    private UsageMetadata instance;

    public Builder() {
      this(new UsageMetadata());
    }

    protected Builder(UsageMetadata instance) {
      this.instance = instance;
    }

    public UsageMetadata.Builder inputTokens(Integer inputTokens) {
      this.instance.inputTokens = inputTokens;
      return this;
    }
    public UsageMetadata.Builder outputTokens(Integer outputTokens) {
      this.instance.outputTokens = outputTokens;
      return this;
    }
    public UsageMetadata.Builder totalTokens(Integer totalTokens) {
      this.instance.totalTokens = totalTokens;
      return this;
    }
    public UsageMetadata.Builder inputTokenDetails(InputTokenDetails inputTokenDetails) {
      this.instance.inputTokenDetails = inputTokenDetails;
      return this;
    }
    public UsageMetadata.Builder outputTokenDetails(OutputTokenDetails outputTokenDetails) {
      this.instance.outputTokenDetails = outputTokenDetails;
      return this;
    }


    /**
    * returns a built UsageMetadata instance.
    *
    * The builder is not reusable.
    */
    public UsageMetadata build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static UsageMetadata.Builder builder() {
    return new UsageMetadata.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public UsageMetadata.Builder toBuilder() {
    return new UsageMetadata.Builder()
      .inputTokens(getInputTokens())
      .outputTokens(getOutputTokens())
      .totalTokens(getTotalTokens())
      .inputTokenDetails(getInputTokenDetails())
      .outputTokenDetails(getOutputTokenDetails());
  }

}

