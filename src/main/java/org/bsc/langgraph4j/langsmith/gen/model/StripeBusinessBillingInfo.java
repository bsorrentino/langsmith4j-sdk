/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.bsc.langgraph4j.langsmith.gen.model.StripeCustomerAddress;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Stripe customer billing information.
 */
@JsonPropertyOrder({
  StripeBusinessBillingInfo.JSON_PROPERTY_NAME,
  StripeBusinessBillingInfo.JSON_PROPERTY_ADDRESS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class StripeBusinessBillingInfo {
  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private JsonNullable<StripeCustomerAddress> address = JsonNullable.<StripeCustomerAddress>undefined();

  public StripeBusinessBillingInfo() { 
  }

  public StripeBusinessBillingInfo name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public StripeBusinessBillingInfo address(@javax.annotation.Nullable StripeCustomerAddress address) {
    this.address = JsonNullable.<StripeCustomerAddress>of(address);
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public StripeCustomerAddress getAddress() {
        return address.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<StripeCustomerAddress> getAddress_JsonNullable() {
    return address;
  }
  
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  public void setAddress_JsonNullable(JsonNullable<StripeCustomerAddress> address) {
    this.address = address;
  }

  public void setAddress(@javax.annotation.Nullable StripeCustomerAddress address) {
    this.address = JsonNullable.<StripeCustomerAddress>of(address);
  }


  /**
   * Return true if this StripeBusinessBillingInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StripeBusinessBillingInfo stripeBusinessBillingInfo = (StripeBusinessBillingInfo) o;
    return Objects.equals(this.name, stripeBusinessBillingInfo.name) &&
        equalsNullable(this.address, stripeBusinessBillingInfo.address);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, hashCodeNullable(address));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StripeBusinessBillingInfo {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `address` to the URL query string
    if (getAddress() != null) {
      joiner.add(getAddress().toUrlQueryString(prefix + "address" + suffix));
    }

    return joiner.toString();
  }

    public static class Builder {

    private StripeBusinessBillingInfo instance;

    public Builder() {
      this(new StripeBusinessBillingInfo());
    }

    protected Builder(StripeBusinessBillingInfo instance) {
      this.instance = instance;
    }

    public StripeBusinessBillingInfo.Builder name(String name) {
      this.instance.name = name;
      return this;
    }
    public StripeBusinessBillingInfo.Builder address(StripeCustomerAddress address) {
      this.instance.address = JsonNullable.<StripeCustomerAddress>of(address);
      return this;
    }
    public StripeBusinessBillingInfo.Builder address(JsonNullable<StripeCustomerAddress> address) {
      this.instance.address = address;
      return this;
    }


    /**
    * returns a built StripeBusinessBillingInfo instance.
    *
    * The builder is not reusable.
    */
    public StripeBusinessBillingInfo build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static StripeBusinessBillingInfo.Builder builder() {
    return new StripeBusinessBillingInfo.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public StripeBusinessBillingInfo.Builder toBuilder() {
    return new StripeBusinessBillingInfo.Builder()
      .name(getName())
      .address(getAddress());
  }

}

