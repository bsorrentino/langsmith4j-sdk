/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Dataset schema for serving.
 */
@JsonPropertyOrder({
  SearchedFewShotExample.JSON_PROPERTY_INPUTS,
  SearchedFewShotExample.JSON_PROPERTY_OUTPUTS,
  SearchedFewShotExample.JSON_PROPERTY_ID,
  SearchedFewShotExample.JSON_PROPERTY_DEBUG_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class SearchedFewShotExample {
  public static final String JSON_PROPERTY_INPUTS = "inputs";
  @javax.annotation.Nonnull
  private Object inputs;

  public static final String JSON_PROPERTY_OUTPUTS = "outputs";
  @javax.annotation.Nonnull
  private Object outputs;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_DEBUG_INFO = "debug_info";
  private JsonNullable<Object> debugInfo = JsonNullable.<Object>undefined();

  public SearchedFewShotExample() { 
  }

  public SearchedFewShotExample inputs(@javax.annotation.Nonnull Object inputs) {
    this.inputs = inputs;
    return this;
  }

  /**
   * Get inputs
   * @return inputs
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INPUTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Object getInputs() {
    return inputs;
  }


  @JsonProperty(JSON_PROPERTY_INPUTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInputs(@javax.annotation.Nonnull Object inputs) {
    this.inputs = inputs;
  }


  public SearchedFewShotExample outputs(@javax.annotation.Nonnull Object outputs) {
    this.outputs = outputs;
    return this;
  }

  /**
   * Get outputs
   * @return outputs
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Object getOutputs() {
    return outputs;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOutputs(@javax.annotation.Nonnull Object outputs) {
    this.outputs = outputs;
  }


  public SearchedFewShotExample id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public SearchedFewShotExample debugInfo(@javax.annotation.Nullable Object debugInfo) {
    this.debugInfo = JsonNullable.<Object>of(debugInfo);
    return this;
  }

  /**
   * Get debugInfo
   * @return debugInfo
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getDebugInfo() {
        return debugInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEBUG_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDebugInfo_JsonNullable() {
    return debugInfo;
  }
  
  @JsonProperty(JSON_PROPERTY_DEBUG_INFO)
  public void setDebugInfo_JsonNullable(JsonNullable<Object> debugInfo) {
    this.debugInfo = debugInfo;
  }

  public void setDebugInfo(@javax.annotation.Nullable Object debugInfo) {
    this.debugInfo = JsonNullable.<Object>of(debugInfo);
  }


  /**
   * Return true if this SearchedFewShotExample object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchedFewShotExample searchedFewShotExample = (SearchedFewShotExample) o;
    return Objects.equals(this.inputs, searchedFewShotExample.inputs) &&
        Objects.equals(this.outputs, searchedFewShotExample.outputs) &&
        Objects.equals(this.id, searchedFewShotExample.id) &&
        equalsNullable(this.debugInfo, searchedFewShotExample.debugInfo);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputs, outputs, id, hashCodeNullable(debugInfo));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchedFewShotExample {\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    debugInfo: ").append(toIndentedString(debugInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `inputs` to the URL query string
    if (getInputs() != null) {
      joiner.add(String.format("%sinputs%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInputs()))));
    }

    // add `outputs` to the URL query string
    if (getOutputs() != null) {
      joiner.add(String.format("%soutputs%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOutputs()))));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `debug_info` to the URL query string
    if (getDebugInfo() != null) {
      joiner.add(String.format("%sdebug_info%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDebugInfo()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private SearchedFewShotExample instance;

    public Builder() {
      this(new SearchedFewShotExample());
    }

    protected Builder(SearchedFewShotExample instance) {
      this.instance = instance;
    }

    public SearchedFewShotExample.Builder inputs(Object inputs) {
      this.instance.inputs = inputs;
      return this;
    }
    public SearchedFewShotExample.Builder outputs(Object outputs) {
      this.instance.outputs = outputs;
      return this;
    }
    public SearchedFewShotExample.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public SearchedFewShotExample.Builder debugInfo(Object debugInfo) {
      this.instance.debugInfo = JsonNullable.<Object>of(debugInfo);
      return this;
    }
    public SearchedFewShotExample.Builder debugInfo(JsonNullable<Object> debugInfo) {
      this.instance.debugInfo = debugInfo;
      return this;
    }


    /**
    * returns a built SearchedFewShotExample instance.
    *
    * The builder is not reusable.
    */
    public SearchedFewShotExample build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static SearchedFewShotExample.Builder builder() {
    return new SearchedFewShotExample.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public SearchedFewShotExample.Builder toBuilder() {
    return new SearchedFewShotExample.Builder()
      .inputs(getInputs())
      .outputs(getOutputs())
      .id(getId())
      .debugInfo(getDebugInfo());
  }

}

