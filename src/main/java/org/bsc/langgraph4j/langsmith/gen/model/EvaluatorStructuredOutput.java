/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Evaluator structured output schema.
 */
@JsonPropertyOrder({
  EvaluatorStructuredOutput.JSON_PROPERTY_HUB_REF,
  EvaluatorStructuredOutput.JSON_PROPERTY_PROMPT,
  EvaluatorStructuredOutput.JSON_PROPERTY_TEMPLATE_FORMAT,
  EvaluatorStructuredOutput.JSON_PROPERTY_SCHEMA,
  EvaluatorStructuredOutput.JSON_PROPERTY_VARIABLE_MAPPING,
  EvaluatorStructuredOutput.JSON_PROPERTY_MODEL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class EvaluatorStructuredOutput {
  public static final String JSON_PROPERTY_HUB_REF = "hub_ref";
  private JsonNullable<String> hubRef = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROMPT = "prompt";
  private JsonNullable<List<List<Object>>> prompt = JsonNullable.<List<List<Object>>>undefined();

  public static final String JSON_PROPERTY_TEMPLATE_FORMAT = "template_format";
  private JsonNullable<String> templateFormat = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SCHEMA = "schema";
  private JsonNullable<Object> schema = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_VARIABLE_MAPPING = "variable_mapping";
  private JsonNullable<Map<String, String>> variableMapping = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_MODEL = "model";
  private JsonNullable<Object> model = JsonNullable.<Object>undefined();

  public EvaluatorStructuredOutput() { 
  }

  public EvaluatorStructuredOutput hubRef(@javax.annotation.Nullable String hubRef) {
    this.hubRef = JsonNullable.<String>of(hubRef);
    return this;
  }

  /**
   * Get hubRef
   * @return hubRef
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getHubRef() {
        return hubRef.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HUB_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHubRef_JsonNullable() {
    return hubRef;
  }
  
  @JsonProperty(JSON_PROPERTY_HUB_REF)
  public void setHubRef_JsonNullable(JsonNullable<String> hubRef) {
    this.hubRef = hubRef;
  }

  public void setHubRef(@javax.annotation.Nullable String hubRef) {
    this.hubRef = JsonNullable.<String>of(hubRef);
  }


  public EvaluatorStructuredOutput prompt(@javax.annotation.Nullable List<List<Object>> prompt) {
    this.prompt = JsonNullable.<List<List<Object>>>of(prompt);
    return this;
  }

  public EvaluatorStructuredOutput addPromptItem(List<Object> promptItem) {
    if (this.prompt == null || !this.prompt.isPresent()) {
      this.prompt = JsonNullable.<List<List<Object>>>of(new ArrayList<>());
    }
    try {
      this.prompt.get().add(promptItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get prompt
   * @return prompt
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<List<Object>> getPrompt() {
        return prompt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROMPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<List<Object>>> getPrompt_JsonNullable() {
    return prompt;
  }
  
  @JsonProperty(JSON_PROPERTY_PROMPT)
  public void setPrompt_JsonNullable(JsonNullable<List<List<Object>>> prompt) {
    this.prompt = prompt;
  }

  public void setPrompt(@javax.annotation.Nullable List<List<Object>> prompt) {
    this.prompt = JsonNullable.<List<List<Object>>>of(prompt);
  }


  public EvaluatorStructuredOutput templateFormat(@javax.annotation.Nullable String templateFormat) {
    this.templateFormat = JsonNullable.<String>of(templateFormat);
    return this;
  }

  /**
   * Get templateFormat
   * @return templateFormat
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTemplateFormat() {
        return templateFormat.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEMPLATE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTemplateFormat_JsonNullable() {
    return templateFormat;
  }
  
  @JsonProperty(JSON_PROPERTY_TEMPLATE_FORMAT)
  public void setTemplateFormat_JsonNullable(JsonNullable<String> templateFormat) {
    this.templateFormat = templateFormat;
  }

  public void setTemplateFormat(@javax.annotation.Nullable String templateFormat) {
    this.templateFormat = JsonNullable.<String>of(templateFormat);
  }


  public EvaluatorStructuredOutput schema(@javax.annotation.Nullable Object schema) {
    this.schema = JsonNullable.<Object>of(schema);
    return this;
  }

  /**
   * Get schema
   * @return schema
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getSchema() {
        return schema.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCHEMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSchema_JsonNullable() {
    return schema;
  }
  
  @JsonProperty(JSON_PROPERTY_SCHEMA)
  public void setSchema_JsonNullable(JsonNullable<Object> schema) {
    this.schema = schema;
  }

  public void setSchema(@javax.annotation.Nullable Object schema) {
    this.schema = JsonNullable.<Object>of(schema);
  }


  public EvaluatorStructuredOutput variableMapping(@javax.annotation.Nullable Map<String, String> variableMapping) {
    this.variableMapping = JsonNullable.<Map<String, String>>of(variableMapping);
    return this;
  }

  public EvaluatorStructuredOutput putVariableMappingItem(String key, String variableMappingItem) {
    if (this.variableMapping == null || !this.variableMapping.isPresent()) {
      this.variableMapping = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.variableMapping.get().put(key, variableMappingItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get variableMapping
   * @return variableMapping
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, String> getVariableMapping() {
        return variableMapping.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VARIABLE_MAPPING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getVariableMapping_JsonNullable() {
    return variableMapping;
  }
  
  @JsonProperty(JSON_PROPERTY_VARIABLE_MAPPING)
  public void setVariableMapping_JsonNullable(JsonNullable<Map<String, String>> variableMapping) {
    this.variableMapping = variableMapping;
  }

  public void setVariableMapping(@javax.annotation.Nullable Map<String, String> variableMapping) {
    this.variableMapping = JsonNullable.<Map<String, String>>of(variableMapping);
  }


  public EvaluatorStructuredOutput model(@javax.annotation.Nullable Object model) {
    this.model = JsonNullable.<Object>of(model);
    return this;
  }

  /**
   * Get model
   * @return model
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getModel() {
        return model.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getModel_JsonNullable() {
    return model;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL)
  public void setModel_JsonNullable(JsonNullable<Object> model) {
    this.model = model;
  }

  public void setModel(@javax.annotation.Nullable Object model) {
    this.model = JsonNullable.<Object>of(model);
  }


  /**
   * Return true if this EvaluatorStructuredOutput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvaluatorStructuredOutput evaluatorStructuredOutput = (EvaluatorStructuredOutput) o;
    return equalsNullable(this.hubRef, evaluatorStructuredOutput.hubRef) &&
        equalsNullable(this.prompt, evaluatorStructuredOutput.prompt) &&
        equalsNullable(this.templateFormat, evaluatorStructuredOutput.templateFormat) &&
        equalsNullable(this.schema, evaluatorStructuredOutput.schema) &&
        equalsNullable(this.variableMapping, evaluatorStructuredOutput.variableMapping) &&
        equalsNullable(this.model, evaluatorStructuredOutput.model);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(hubRef), hashCodeNullable(prompt), hashCodeNullable(templateFormat), hashCodeNullable(schema), hashCodeNullable(variableMapping), hashCodeNullable(model));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvaluatorStructuredOutput {\n");
    sb.append("    hubRef: ").append(toIndentedString(hubRef)).append("\n");
    sb.append("    prompt: ").append(toIndentedString(prompt)).append("\n");
    sb.append("    templateFormat: ").append(toIndentedString(templateFormat)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    variableMapping: ").append(toIndentedString(variableMapping)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `hub_ref` to the URL query string
    if (getHubRef() != null) {
      joiner.add(String.format("%shub_ref%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getHubRef()))));
    }

    // add `prompt` to the URL query string
    if (getPrompt() != null) {
      for (int i = 0; i < getPrompt().size(); i++) {
        joiner.add(String.format("%sprompt%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getPrompt().get(i)))));
      }
    }

    // add `template_format` to the URL query string
    if (getTemplateFormat() != null) {
      joiner.add(String.format("%stemplate_format%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTemplateFormat()))));
    }

    // add `schema` to the URL query string
    if (getSchema() != null) {
      joiner.add(String.format("%sschema%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSchema()))));
    }

    // add `variable_mapping` to the URL query string
    if (getVariableMapping() != null) {
      for (String _key : getVariableMapping().keySet()) {
        joiner.add(String.format("%svariable_mapping%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getVariableMapping().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getVariableMapping().get(_key)))));
      }
    }

    // add `model` to the URL query string
    if (getModel() != null) {
      joiner.add(String.format("%smodel%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getModel()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private EvaluatorStructuredOutput instance;

    public Builder() {
      this(new EvaluatorStructuredOutput());
    }

    protected Builder(EvaluatorStructuredOutput instance) {
      this.instance = instance;
    }

    public EvaluatorStructuredOutput.Builder hubRef(String hubRef) {
      this.instance.hubRef = JsonNullable.<String>of(hubRef);
      return this;
    }
    public EvaluatorStructuredOutput.Builder hubRef(JsonNullable<String> hubRef) {
      this.instance.hubRef = hubRef;
      return this;
    }
    public EvaluatorStructuredOutput.Builder prompt(List<List<Object>> prompt) {
      this.instance.prompt = JsonNullable.<List<List<Object>>>of(prompt);
      return this;
    }
    public EvaluatorStructuredOutput.Builder prompt(JsonNullable<List<List<Object>>> prompt) {
      this.instance.prompt = prompt;
      return this;
    }
    public EvaluatorStructuredOutput.Builder templateFormat(String templateFormat) {
      this.instance.templateFormat = JsonNullable.<String>of(templateFormat);
      return this;
    }
    public EvaluatorStructuredOutput.Builder templateFormat(JsonNullable<String> templateFormat) {
      this.instance.templateFormat = templateFormat;
      return this;
    }
    public EvaluatorStructuredOutput.Builder schema(Object schema) {
      this.instance.schema = JsonNullable.<Object>of(schema);
      return this;
    }
    public EvaluatorStructuredOutput.Builder schema(JsonNullable<Object> schema) {
      this.instance.schema = schema;
      return this;
    }
    public EvaluatorStructuredOutput.Builder variableMapping(Map<String, String> variableMapping) {
      this.instance.variableMapping = JsonNullable.<Map<String, String>>of(variableMapping);
      return this;
    }
    public EvaluatorStructuredOutput.Builder variableMapping(JsonNullable<Map<String, String>> variableMapping) {
      this.instance.variableMapping = variableMapping;
      return this;
    }
    public EvaluatorStructuredOutput.Builder model(Object model) {
      this.instance.model = JsonNullable.<Object>of(model);
      return this;
    }
    public EvaluatorStructuredOutput.Builder model(JsonNullable<Object> model) {
      this.instance.model = model;
      return this;
    }


    /**
    * returns a built EvaluatorStructuredOutput instance.
    *
    * The builder is not reusable.
    */
    public EvaluatorStructuredOutput build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static EvaluatorStructuredOutput.Builder builder() {
    return new EvaluatorStructuredOutput.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public EvaluatorStructuredOutput.Builder toBuilder() {
    return new EvaluatorStructuredOutput.Builder()
      .hubRef(getHubRef())
      .prompt(getPrompt())
      .templateFormat(getTemplateFormat())
      .schema(getSchema())
      .variableMapping(getVariableMapping())
      .model(getModel());
  }

}

