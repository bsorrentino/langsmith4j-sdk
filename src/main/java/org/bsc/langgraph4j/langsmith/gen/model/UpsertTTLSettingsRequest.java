/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.TraceTier;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Base TTL settings model.
 */
@JsonPropertyOrder({
  UpsertTTLSettingsRequest.JSON_PROPERTY_TENANT_ID,
  UpsertTTLSettingsRequest.JSON_PROPERTY_DEFAULT_TRACE_TIER,
  UpsertTTLSettingsRequest.JSON_PROPERTY_APPLY_TO_ALL_PROJECTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class UpsertTTLSettingsRequest {
  public static final String JSON_PROPERTY_TENANT_ID = "tenant_id";
  private JsonNullable<UUID> tenantId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_DEFAULT_TRACE_TIER = "default_trace_tier";
  @javax.annotation.Nonnull
  private TraceTier defaultTraceTier;

  public static final String JSON_PROPERTY_APPLY_TO_ALL_PROJECTS = "apply_to_all_projects";
  @javax.annotation.Nullable
  private Boolean applyToAllProjects = false;

  public UpsertTTLSettingsRequest() { 
  }

  public UpsertTTLSettingsRequest tenantId(@javax.annotation.Nullable UUID tenantId) {
    this.tenantId = JsonNullable.<UUID>of(tenantId);
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getTenantId() {
        return tenantId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTenantId_JsonNullable() {
    return tenantId;
  }
  
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  public void setTenantId_JsonNullable(JsonNullable<UUID> tenantId) {
    this.tenantId = tenantId;
  }

  public void setTenantId(@javax.annotation.Nullable UUID tenantId) {
    this.tenantId = JsonNullable.<UUID>of(tenantId);
  }


  public UpsertTTLSettingsRequest defaultTraceTier(@javax.annotation.Nonnull TraceTier defaultTraceTier) {
    this.defaultTraceTier = defaultTraceTier;
    return this;
  }

  /**
   * Get defaultTraceTier
   * @return defaultTraceTier
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEFAULT_TRACE_TIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TraceTier getDefaultTraceTier() {
    return defaultTraceTier;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_TRACE_TIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefaultTraceTier(@javax.annotation.Nonnull TraceTier defaultTraceTier) {
    this.defaultTraceTier = defaultTraceTier;
  }


  public UpsertTTLSettingsRequest applyToAllProjects(@javax.annotation.Nullable Boolean applyToAllProjects) {
    this.applyToAllProjects = applyToAllProjects;
    return this;
  }

  /**
   * Get applyToAllProjects
   * @return applyToAllProjects
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLY_TO_ALL_PROJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getApplyToAllProjects() {
    return applyToAllProjects;
  }


  @JsonProperty(JSON_PROPERTY_APPLY_TO_ALL_PROJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplyToAllProjects(@javax.annotation.Nullable Boolean applyToAllProjects) {
    this.applyToAllProjects = applyToAllProjects;
  }


  /**
   * Return true if this UpsertTTLSettingsRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpsertTTLSettingsRequest upsertTTLSettingsRequest = (UpsertTTLSettingsRequest) o;
    return equalsNullable(this.tenantId, upsertTTLSettingsRequest.tenantId) &&
        Objects.equals(this.defaultTraceTier, upsertTTLSettingsRequest.defaultTraceTier) &&
        Objects.equals(this.applyToAllProjects, upsertTTLSettingsRequest.applyToAllProjects);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(tenantId), defaultTraceTier, applyToAllProjects);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpsertTTLSettingsRequest {\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    defaultTraceTier: ").append(toIndentedString(defaultTraceTier)).append("\n");
    sb.append("    applyToAllProjects: ").append(toIndentedString(applyToAllProjects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `tenant_id` to the URL query string
    if (getTenantId() != null) {
      joiner.add(String.format("%stenant_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTenantId()))));
    }

    // add `default_trace_tier` to the URL query string
    if (getDefaultTraceTier() != null) {
      joiner.add(String.format("%sdefault_trace_tier%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDefaultTraceTier()))));
    }

    // add `apply_to_all_projects` to the URL query string
    if (getApplyToAllProjects() != null) {
      joiner.add(String.format("%sapply_to_all_projects%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getApplyToAllProjects()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private UpsertTTLSettingsRequest instance;

    public Builder() {
      this(new UpsertTTLSettingsRequest());
    }

    protected Builder(UpsertTTLSettingsRequest instance) {
      this.instance = instance;
    }

    public UpsertTTLSettingsRequest.Builder tenantId(UUID tenantId) {
      this.instance.tenantId = JsonNullable.<UUID>of(tenantId);
      return this;
    }
    public UpsertTTLSettingsRequest.Builder tenantId(JsonNullable<UUID> tenantId) {
      this.instance.tenantId = tenantId;
      return this;
    }
    public UpsertTTLSettingsRequest.Builder defaultTraceTier(TraceTier defaultTraceTier) {
      this.instance.defaultTraceTier = defaultTraceTier;
      return this;
    }
    public UpsertTTLSettingsRequest.Builder applyToAllProjects(Boolean applyToAllProjects) {
      this.instance.applyToAllProjects = applyToAllProjects;
      return this;
    }


    /**
    * returns a built UpsertTTLSettingsRequest instance.
    *
    * The builder is not reusable.
    */
    public UpsertTTLSettingsRequest build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static UpsertTTLSettingsRequest.Builder builder() {
    return new UpsertTTLSettingsRequest.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public UpsertTTLSettingsRequest.Builder toBuilder() {
    return new UpsertTTLSettingsRequest.Builder()
      .tenantId(getTenantId())
      .defaultTraceTier(getDefaultTraceTier())
      .applyToAllProjects(getApplyToAllProjects());
  }

}

