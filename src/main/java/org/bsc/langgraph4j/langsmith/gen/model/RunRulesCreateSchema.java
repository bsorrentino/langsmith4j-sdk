/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.CodeEvaluatorTopLevel;
import org.bsc.langgraph4j.langsmith.gen.model.EvaluatorTopLevel;
import org.bsc.langgraph4j.langsmith.gen.model.RunRulesPagerdutyAlertSchema;
import org.bsc.langgraph4j.langsmith.gen.model.RunRulesWebhookSchema;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * RunRulesCreateSchema
 */
@JsonPropertyOrder({
  RunRulesCreateSchema.JSON_PROPERTY_DISPLAY_NAME,
  RunRulesCreateSchema.JSON_PROPERTY_SESSION_ID,
  RunRulesCreateSchema.JSON_PROPERTY_IS_ENABLED,
  RunRulesCreateSchema.JSON_PROPERTY_DATASET_ID,
  RunRulesCreateSchema.JSON_PROPERTY_SAMPLING_RATE,
  RunRulesCreateSchema.JSON_PROPERTY_FILTER,
  RunRulesCreateSchema.JSON_PROPERTY_TRACE_FILTER,
  RunRulesCreateSchema.JSON_PROPERTY_TREE_FILTER,
  RunRulesCreateSchema.JSON_PROPERTY_BACKFILL_FROM,
  RunRulesCreateSchema.JSON_PROPERTY_USE_CORRECTIONS_DATASET,
  RunRulesCreateSchema.JSON_PROPERTY_NUM_FEW_SHOT_EXAMPLES,
  RunRulesCreateSchema.JSON_PROPERTY_EXTEND_ONLY,
  RunRulesCreateSchema.JSON_PROPERTY_TRANSIENT,
  RunRulesCreateSchema.JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_ID,
  RunRulesCreateSchema.JSON_PROPERTY_ADD_TO_DATASET_ID,
  RunRulesCreateSchema.JSON_PROPERTY_ADD_TO_DATASET_PREFER_CORRECTION,
  RunRulesCreateSchema.JSON_PROPERTY_EVALUATORS,
  RunRulesCreateSchema.JSON_PROPERTY_CODE_EVALUATORS,
  RunRulesCreateSchema.JSON_PROPERTY_ALERTS,
  RunRulesCreateSchema.JSON_PROPERTY_WEBHOOKS,
  RunRulesCreateSchema.JSON_PROPERTY_EVALUATOR_VERSION,
  RunRulesCreateSchema.JSON_PROPERTY_CREATE_ALIGNMENT_QUEUE,
  RunRulesCreateSchema.JSON_PROPERTY_INCLUDE_EXTENDED_STATS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:14:57.775316+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class RunRulesCreateSchema {
  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  @javax.annotation.Nonnull
  private String displayName;

  public static final String JSON_PROPERTY_SESSION_ID = "session_id";
  private JsonNullable<UUID> sessionId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_IS_ENABLED = "is_enabled";
  @javax.annotation.Nullable
  private Boolean isEnabled = true;

  public static final String JSON_PROPERTY_DATASET_ID = "dataset_id";
  private JsonNullable<UUID> datasetId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_SAMPLING_RATE = "sampling_rate";
  @javax.annotation.Nonnull
  private BigDecimal samplingRate;

  public static final String JSON_PROPERTY_FILTER = "filter";
  private JsonNullable<String> filter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TRACE_FILTER = "trace_filter";
  private JsonNullable<String> traceFilter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TREE_FILTER = "tree_filter";
  private JsonNullable<String> treeFilter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BACKFILL_FROM = "backfill_from";
  private JsonNullable<OffsetDateTime> backfillFrom = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_USE_CORRECTIONS_DATASET = "use_corrections_dataset";
  @javax.annotation.Nullable
  private Boolean useCorrectionsDataset = false;

  public static final String JSON_PROPERTY_NUM_FEW_SHOT_EXAMPLES = "num_few_shot_examples";
  private JsonNullable<Integer> numFewShotExamples = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_EXTEND_ONLY = "extend_only";
  @javax.annotation.Nullable
  private Boolean extendOnly = false;

  public static final String JSON_PROPERTY_TRANSIENT = "transient";
  @javax.annotation.Nullable
  private Boolean _transient = false;

  public static final String JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_ID = "add_to_annotation_queue_id";
  private JsonNullable<UUID> addToAnnotationQueueId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_ADD_TO_DATASET_ID = "add_to_dataset_id";
  private JsonNullable<UUID> addToDatasetId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_ADD_TO_DATASET_PREFER_CORRECTION = "add_to_dataset_prefer_correction";
  @javax.annotation.Nullable
  private Boolean addToDatasetPreferCorrection = false;

  public static final String JSON_PROPERTY_EVALUATORS = "evaluators";
  private JsonNullable<List<EvaluatorTopLevel>> evaluators = JsonNullable.<List<EvaluatorTopLevel>>undefined();

  public static final String JSON_PROPERTY_CODE_EVALUATORS = "code_evaluators";
  private JsonNullable<List<CodeEvaluatorTopLevel>> codeEvaluators = JsonNullable.<List<CodeEvaluatorTopLevel>>undefined();

  public static final String JSON_PROPERTY_ALERTS = "alerts";
  private JsonNullable<List<RunRulesPagerdutyAlertSchema>> alerts = JsonNullable.<List<RunRulesPagerdutyAlertSchema>>undefined();

  public static final String JSON_PROPERTY_WEBHOOKS = "webhooks";
  private JsonNullable<List<RunRulesWebhookSchema>> webhooks = JsonNullable.<List<RunRulesWebhookSchema>>undefined();

  public static final String JSON_PROPERTY_EVALUATOR_VERSION = "evaluator_version";
  private JsonNullable<Integer> evaluatorVersion = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_CREATE_ALIGNMENT_QUEUE = "create_alignment_queue";
  @javax.annotation.Nullable
  private Boolean createAlignmentQueue = false;

  public static final String JSON_PROPERTY_INCLUDE_EXTENDED_STATS = "include_extended_stats";
  @javax.annotation.Nullable
  private Boolean includeExtendedStats = false;

  public RunRulesCreateSchema() { 
  }

  public RunRulesCreateSchema displayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
  }


  public RunRulesCreateSchema sessionId(@javax.annotation.Nullable UUID sessionId) {
    this.sessionId = JsonNullable.<UUID>of(sessionId);
    return this;
  }

  /**
   * Get sessionId
   * @return sessionId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getSessionId() {
        return sessionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getSessionId_JsonNullable() {
    return sessionId;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  public void setSessionId_JsonNullable(JsonNullable<UUID> sessionId) {
    this.sessionId = sessionId;
  }

  public void setSessionId(@javax.annotation.Nullable UUID sessionId) {
    this.sessionId = JsonNullable.<UUID>of(sessionId);
  }


  public RunRulesCreateSchema isEnabled(@javax.annotation.Nullable Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

  /**
   * Get isEnabled
   * @return isEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsEnabled() {
    return isEnabled;
  }


  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsEnabled(@javax.annotation.Nullable Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public RunRulesCreateSchema datasetId(@javax.annotation.Nullable UUID datasetId) {
    this.datasetId = JsonNullable.<UUID>of(datasetId);
    return this;
  }

  /**
   * Get datasetId
   * @return datasetId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getDatasetId() {
        return datasetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getDatasetId_JsonNullable() {
    return datasetId;
  }
  
  @JsonProperty(JSON_PROPERTY_DATASET_ID)
  public void setDatasetId_JsonNullable(JsonNullable<UUID> datasetId) {
    this.datasetId = datasetId;
  }

  public void setDatasetId(@javax.annotation.Nullable UUID datasetId) {
    this.datasetId = JsonNullable.<UUID>of(datasetId);
  }


  public RunRulesCreateSchema samplingRate(@javax.annotation.Nonnull BigDecimal samplingRate) {
    this.samplingRate = samplingRate;
    return this;
  }

  /**
   * Get samplingRate
   * @return samplingRate
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SAMPLING_RATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public BigDecimal getSamplingRate() {
    return samplingRate;
  }


  @JsonProperty(JSON_PROPERTY_SAMPLING_RATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSamplingRate(@javax.annotation.Nonnull BigDecimal samplingRate) {
    this.samplingRate = samplingRate;
  }


  public RunRulesCreateSchema filter(@javax.annotation.Nullable String filter) {
    this.filter = JsonNullable.<String>of(filter);
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFilter() {
        return filter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFilter_JsonNullable() {
    return filter;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER)
  public void setFilter_JsonNullable(JsonNullable<String> filter) {
    this.filter = filter;
  }

  public void setFilter(@javax.annotation.Nullable String filter) {
    this.filter = JsonNullable.<String>of(filter);
  }


  public RunRulesCreateSchema traceFilter(@javax.annotation.Nullable String traceFilter) {
    this.traceFilter = JsonNullable.<String>of(traceFilter);
    return this;
  }

  /**
   * Get traceFilter
   * @return traceFilter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTraceFilter() {
        return traceFilter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRACE_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTraceFilter_JsonNullable() {
    return traceFilter;
  }
  
  @JsonProperty(JSON_PROPERTY_TRACE_FILTER)
  public void setTraceFilter_JsonNullable(JsonNullable<String> traceFilter) {
    this.traceFilter = traceFilter;
  }

  public void setTraceFilter(@javax.annotation.Nullable String traceFilter) {
    this.traceFilter = JsonNullable.<String>of(traceFilter);
  }


  public RunRulesCreateSchema treeFilter(@javax.annotation.Nullable String treeFilter) {
    this.treeFilter = JsonNullable.<String>of(treeFilter);
    return this;
  }

  /**
   * Get treeFilter
   * @return treeFilter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTreeFilter() {
        return treeFilter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TREE_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTreeFilter_JsonNullable() {
    return treeFilter;
  }
  
  @JsonProperty(JSON_PROPERTY_TREE_FILTER)
  public void setTreeFilter_JsonNullable(JsonNullable<String> treeFilter) {
    this.treeFilter = treeFilter;
  }

  public void setTreeFilter(@javax.annotation.Nullable String treeFilter) {
    this.treeFilter = JsonNullable.<String>of(treeFilter);
  }


  public RunRulesCreateSchema backfillFrom(@javax.annotation.Nullable OffsetDateTime backfillFrom) {
    this.backfillFrom = JsonNullable.<OffsetDateTime>of(backfillFrom);
    return this;
  }

  /**
   * Get backfillFrom
   * @return backfillFrom
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getBackfillFrom() {
        return backfillFrom.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BACKFILL_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getBackfillFrom_JsonNullable() {
    return backfillFrom;
  }
  
  @JsonProperty(JSON_PROPERTY_BACKFILL_FROM)
  public void setBackfillFrom_JsonNullable(JsonNullable<OffsetDateTime> backfillFrom) {
    this.backfillFrom = backfillFrom;
  }

  public void setBackfillFrom(@javax.annotation.Nullable OffsetDateTime backfillFrom) {
    this.backfillFrom = JsonNullable.<OffsetDateTime>of(backfillFrom);
  }


  public RunRulesCreateSchema useCorrectionsDataset(@javax.annotation.Nullable Boolean useCorrectionsDataset) {
    this.useCorrectionsDataset = useCorrectionsDataset;
    return this;
  }

  /**
   * Get useCorrectionsDataset
   * @return useCorrectionsDataset
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_CORRECTIONS_DATASET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getUseCorrectionsDataset() {
    return useCorrectionsDataset;
  }


  @JsonProperty(JSON_PROPERTY_USE_CORRECTIONS_DATASET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseCorrectionsDataset(@javax.annotation.Nullable Boolean useCorrectionsDataset) {
    this.useCorrectionsDataset = useCorrectionsDataset;
  }


  public RunRulesCreateSchema numFewShotExamples(@javax.annotation.Nullable Integer numFewShotExamples) {
    this.numFewShotExamples = JsonNullable.<Integer>of(numFewShotExamples);
    return this;
  }

  /**
   * Get numFewShotExamples
   * @return numFewShotExamples
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getNumFewShotExamples() {
        return numFewShotExamples.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUM_FEW_SHOT_EXAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getNumFewShotExamples_JsonNullable() {
    return numFewShotExamples;
  }
  
  @JsonProperty(JSON_PROPERTY_NUM_FEW_SHOT_EXAMPLES)
  public void setNumFewShotExamples_JsonNullable(JsonNullable<Integer> numFewShotExamples) {
    this.numFewShotExamples = numFewShotExamples;
  }

  public void setNumFewShotExamples(@javax.annotation.Nullable Integer numFewShotExamples) {
    this.numFewShotExamples = JsonNullable.<Integer>of(numFewShotExamples);
  }


  public RunRulesCreateSchema extendOnly(@javax.annotation.Nullable Boolean extendOnly) {
    this.extendOnly = extendOnly;
    return this;
  }

  /**
   * Get extendOnly
   * @return extendOnly
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTEND_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getExtendOnly() {
    return extendOnly;
  }


  @JsonProperty(JSON_PROPERTY_EXTEND_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtendOnly(@javax.annotation.Nullable Boolean extendOnly) {
    this.extendOnly = extendOnly;
  }


  public RunRulesCreateSchema _transient(@javax.annotation.Nullable Boolean _transient) {
    this._transient = _transient;
    return this;
  }

  /**
   * Get _transient
   * @return _transient
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getTransient() {
    return _transient;
  }


  @JsonProperty(JSON_PROPERTY_TRANSIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransient(@javax.annotation.Nullable Boolean _transient) {
    this._transient = _transient;
  }


  public RunRulesCreateSchema addToAnnotationQueueId(@javax.annotation.Nullable UUID addToAnnotationQueueId) {
    this.addToAnnotationQueueId = JsonNullable.<UUID>of(addToAnnotationQueueId);
    return this;
  }

  /**
   * Get addToAnnotationQueueId
   * @return addToAnnotationQueueId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getAddToAnnotationQueueId() {
        return addToAnnotationQueueId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getAddToAnnotationQueueId_JsonNullable() {
    return addToAnnotationQueueId;
  }
  
  @JsonProperty(JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_ID)
  public void setAddToAnnotationQueueId_JsonNullable(JsonNullable<UUID> addToAnnotationQueueId) {
    this.addToAnnotationQueueId = addToAnnotationQueueId;
  }

  public void setAddToAnnotationQueueId(@javax.annotation.Nullable UUID addToAnnotationQueueId) {
    this.addToAnnotationQueueId = JsonNullable.<UUID>of(addToAnnotationQueueId);
  }


  public RunRulesCreateSchema addToDatasetId(@javax.annotation.Nullable UUID addToDatasetId) {
    this.addToDatasetId = JsonNullable.<UUID>of(addToDatasetId);
    return this;
  }

  /**
   * Get addToDatasetId
   * @return addToDatasetId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getAddToDatasetId() {
        return addToDatasetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADD_TO_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getAddToDatasetId_JsonNullable() {
    return addToDatasetId;
  }
  
  @JsonProperty(JSON_PROPERTY_ADD_TO_DATASET_ID)
  public void setAddToDatasetId_JsonNullable(JsonNullable<UUID> addToDatasetId) {
    this.addToDatasetId = addToDatasetId;
  }

  public void setAddToDatasetId(@javax.annotation.Nullable UUID addToDatasetId) {
    this.addToDatasetId = JsonNullable.<UUID>of(addToDatasetId);
  }


  public RunRulesCreateSchema addToDatasetPreferCorrection(@javax.annotation.Nullable Boolean addToDatasetPreferCorrection) {
    this.addToDatasetPreferCorrection = addToDatasetPreferCorrection;
    return this;
  }

  /**
   * Get addToDatasetPreferCorrection
   * @return addToDatasetPreferCorrection
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADD_TO_DATASET_PREFER_CORRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAddToDatasetPreferCorrection() {
    return addToDatasetPreferCorrection;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TO_DATASET_PREFER_CORRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddToDatasetPreferCorrection(@javax.annotation.Nullable Boolean addToDatasetPreferCorrection) {
    this.addToDatasetPreferCorrection = addToDatasetPreferCorrection;
  }


  public RunRulesCreateSchema evaluators(@javax.annotation.Nullable List<EvaluatorTopLevel> evaluators) {
    this.evaluators = JsonNullable.<List<EvaluatorTopLevel>>of(evaluators);
    return this;
  }

  public RunRulesCreateSchema addEvaluatorsItem(EvaluatorTopLevel evaluatorsItem) {
    if (this.evaluators == null || !this.evaluators.isPresent()) {
      this.evaluators = JsonNullable.<List<EvaluatorTopLevel>>of(new ArrayList<>());
    }
    try {
      this.evaluators.get().add(evaluatorsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get evaluators
   * @return evaluators
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<EvaluatorTopLevel> getEvaluators() {
        return evaluators.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVALUATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EvaluatorTopLevel>> getEvaluators_JsonNullable() {
    return evaluators;
  }
  
  @JsonProperty(JSON_PROPERTY_EVALUATORS)
  public void setEvaluators_JsonNullable(JsonNullable<List<EvaluatorTopLevel>> evaluators) {
    this.evaluators = evaluators;
  }

  public void setEvaluators(@javax.annotation.Nullable List<EvaluatorTopLevel> evaluators) {
    this.evaluators = JsonNullable.<List<EvaluatorTopLevel>>of(evaluators);
  }


  public RunRulesCreateSchema codeEvaluators(@javax.annotation.Nullable List<CodeEvaluatorTopLevel> codeEvaluators) {
    this.codeEvaluators = JsonNullable.<List<CodeEvaluatorTopLevel>>of(codeEvaluators);
    return this;
  }

  public RunRulesCreateSchema addCodeEvaluatorsItem(CodeEvaluatorTopLevel codeEvaluatorsItem) {
    if (this.codeEvaluators == null || !this.codeEvaluators.isPresent()) {
      this.codeEvaluators = JsonNullable.<List<CodeEvaluatorTopLevel>>of(new ArrayList<>());
    }
    try {
      this.codeEvaluators.get().add(codeEvaluatorsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get codeEvaluators
   * @return codeEvaluators
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<CodeEvaluatorTopLevel> getCodeEvaluators() {
        return codeEvaluators.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CODE_EVALUATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<CodeEvaluatorTopLevel>> getCodeEvaluators_JsonNullable() {
    return codeEvaluators;
  }
  
  @JsonProperty(JSON_PROPERTY_CODE_EVALUATORS)
  public void setCodeEvaluators_JsonNullable(JsonNullable<List<CodeEvaluatorTopLevel>> codeEvaluators) {
    this.codeEvaluators = codeEvaluators;
  }

  public void setCodeEvaluators(@javax.annotation.Nullable List<CodeEvaluatorTopLevel> codeEvaluators) {
    this.codeEvaluators = JsonNullable.<List<CodeEvaluatorTopLevel>>of(codeEvaluators);
  }


  public RunRulesCreateSchema alerts(@javax.annotation.Nullable List<RunRulesPagerdutyAlertSchema> alerts) {
    this.alerts = JsonNullable.<List<RunRulesPagerdutyAlertSchema>>of(alerts);
    return this;
  }

  public RunRulesCreateSchema addAlertsItem(RunRulesPagerdutyAlertSchema alertsItem) {
    if (this.alerts == null || !this.alerts.isPresent()) {
      this.alerts = JsonNullable.<List<RunRulesPagerdutyAlertSchema>>of(new ArrayList<>());
    }
    try {
      this.alerts.get().add(alertsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get alerts
   * @return alerts
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<RunRulesPagerdutyAlertSchema> getAlerts() {
        return alerts.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALERTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<RunRulesPagerdutyAlertSchema>> getAlerts_JsonNullable() {
    return alerts;
  }
  
  @JsonProperty(JSON_PROPERTY_ALERTS)
  public void setAlerts_JsonNullable(JsonNullable<List<RunRulesPagerdutyAlertSchema>> alerts) {
    this.alerts = alerts;
  }

  public void setAlerts(@javax.annotation.Nullable List<RunRulesPagerdutyAlertSchema> alerts) {
    this.alerts = JsonNullable.<List<RunRulesPagerdutyAlertSchema>>of(alerts);
  }


  public RunRulesCreateSchema webhooks(@javax.annotation.Nullable List<RunRulesWebhookSchema> webhooks) {
    this.webhooks = JsonNullable.<List<RunRulesWebhookSchema>>of(webhooks);
    return this;
  }

  public RunRulesCreateSchema addWebhooksItem(RunRulesWebhookSchema webhooksItem) {
    if (this.webhooks == null || !this.webhooks.isPresent()) {
      this.webhooks = JsonNullable.<List<RunRulesWebhookSchema>>of(new ArrayList<>());
    }
    try {
      this.webhooks.get().add(webhooksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get webhooks
   * @return webhooks
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<RunRulesWebhookSchema> getWebhooks() {
        return webhooks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<RunRulesWebhookSchema>> getWebhooks_JsonNullable() {
    return webhooks;
  }
  
  @JsonProperty(JSON_PROPERTY_WEBHOOKS)
  public void setWebhooks_JsonNullable(JsonNullable<List<RunRulesWebhookSchema>> webhooks) {
    this.webhooks = webhooks;
  }

  public void setWebhooks(@javax.annotation.Nullable List<RunRulesWebhookSchema> webhooks) {
    this.webhooks = JsonNullable.<List<RunRulesWebhookSchema>>of(webhooks);
  }


  public RunRulesCreateSchema evaluatorVersion(@javax.annotation.Nullable Integer evaluatorVersion) {
    this.evaluatorVersion = JsonNullable.<Integer>of(evaluatorVersion);
    return this;
  }

  /**
   * Get evaluatorVersion
   * @return evaluatorVersion
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getEvaluatorVersion() {
        return evaluatorVersion.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVALUATOR_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getEvaluatorVersion_JsonNullable() {
    return evaluatorVersion;
  }
  
  @JsonProperty(JSON_PROPERTY_EVALUATOR_VERSION)
  public void setEvaluatorVersion_JsonNullable(JsonNullable<Integer> evaluatorVersion) {
    this.evaluatorVersion = evaluatorVersion;
  }

  public void setEvaluatorVersion(@javax.annotation.Nullable Integer evaluatorVersion) {
    this.evaluatorVersion = JsonNullable.<Integer>of(evaluatorVersion);
  }


  public RunRulesCreateSchema createAlignmentQueue(@javax.annotation.Nullable Boolean createAlignmentQueue) {
    this.createAlignmentQueue = createAlignmentQueue;
    return this;
  }

  /**
   * Get createAlignmentQueue
   * @return createAlignmentQueue
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_ALIGNMENT_QUEUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getCreateAlignmentQueue() {
    return createAlignmentQueue;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_ALIGNMENT_QUEUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateAlignmentQueue(@javax.annotation.Nullable Boolean createAlignmentQueue) {
    this.createAlignmentQueue = createAlignmentQueue;
  }


  public RunRulesCreateSchema includeExtendedStats(@javax.annotation.Nullable Boolean includeExtendedStats) {
    this.includeExtendedStats = includeExtendedStats;
    return this;
  }

  /**
   * Get includeExtendedStats
   * @return includeExtendedStats
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDE_EXTENDED_STATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIncludeExtendedStats() {
    return includeExtendedStats;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_EXTENDED_STATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeExtendedStats(@javax.annotation.Nullable Boolean includeExtendedStats) {
    this.includeExtendedStats = includeExtendedStats;
  }


  /**
   * Return true if this RunRulesCreateSchema object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunRulesCreateSchema runRulesCreateSchema = (RunRulesCreateSchema) o;
    return Objects.equals(this.displayName, runRulesCreateSchema.displayName) &&
        equalsNullable(this.sessionId, runRulesCreateSchema.sessionId) &&
        Objects.equals(this.isEnabled, runRulesCreateSchema.isEnabled) &&
        equalsNullable(this.datasetId, runRulesCreateSchema.datasetId) &&
        Objects.equals(this.samplingRate, runRulesCreateSchema.samplingRate) &&
        equalsNullable(this.filter, runRulesCreateSchema.filter) &&
        equalsNullable(this.traceFilter, runRulesCreateSchema.traceFilter) &&
        equalsNullable(this.treeFilter, runRulesCreateSchema.treeFilter) &&
        equalsNullable(this.backfillFrom, runRulesCreateSchema.backfillFrom) &&
        Objects.equals(this.useCorrectionsDataset, runRulesCreateSchema.useCorrectionsDataset) &&
        equalsNullable(this.numFewShotExamples, runRulesCreateSchema.numFewShotExamples) &&
        Objects.equals(this.extendOnly, runRulesCreateSchema.extendOnly) &&
        Objects.equals(this._transient, runRulesCreateSchema._transient) &&
        equalsNullable(this.addToAnnotationQueueId, runRulesCreateSchema.addToAnnotationQueueId) &&
        equalsNullable(this.addToDatasetId, runRulesCreateSchema.addToDatasetId) &&
        Objects.equals(this.addToDatasetPreferCorrection, runRulesCreateSchema.addToDatasetPreferCorrection) &&
        equalsNullable(this.evaluators, runRulesCreateSchema.evaluators) &&
        equalsNullable(this.codeEvaluators, runRulesCreateSchema.codeEvaluators) &&
        equalsNullable(this.alerts, runRulesCreateSchema.alerts) &&
        equalsNullable(this.webhooks, runRulesCreateSchema.webhooks) &&
        equalsNullable(this.evaluatorVersion, runRulesCreateSchema.evaluatorVersion) &&
        Objects.equals(this.createAlignmentQueue, runRulesCreateSchema.createAlignmentQueue) &&
        Objects.equals(this.includeExtendedStats, runRulesCreateSchema.includeExtendedStats);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, hashCodeNullable(sessionId), isEnabled, hashCodeNullable(datasetId), samplingRate, hashCodeNullable(filter), hashCodeNullable(traceFilter), hashCodeNullable(treeFilter), hashCodeNullable(backfillFrom), useCorrectionsDataset, hashCodeNullable(numFewShotExamples), extendOnly, _transient, hashCodeNullable(addToAnnotationQueueId), hashCodeNullable(addToDatasetId), addToDatasetPreferCorrection, hashCodeNullable(evaluators), hashCodeNullable(codeEvaluators), hashCodeNullable(alerts), hashCodeNullable(webhooks), hashCodeNullable(evaluatorVersion), createAlignmentQueue, includeExtendedStats);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunRulesCreateSchema {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("    samplingRate: ").append(toIndentedString(samplingRate)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    traceFilter: ").append(toIndentedString(traceFilter)).append("\n");
    sb.append("    treeFilter: ").append(toIndentedString(treeFilter)).append("\n");
    sb.append("    backfillFrom: ").append(toIndentedString(backfillFrom)).append("\n");
    sb.append("    useCorrectionsDataset: ").append(toIndentedString(useCorrectionsDataset)).append("\n");
    sb.append("    numFewShotExamples: ").append(toIndentedString(numFewShotExamples)).append("\n");
    sb.append("    extendOnly: ").append(toIndentedString(extendOnly)).append("\n");
    sb.append("    _transient: ").append(toIndentedString(_transient)).append("\n");
    sb.append("    addToAnnotationQueueId: ").append(toIndentedString(addToAnnotationQueueId)).append("\n");
    sb.append("    addToDatasetId: ").append(toIndentedString(addToDatasetId)).append("\n");
    sb.append("    addToDatasetPreferCorrection: ").append(toIndentedString(addToDatasetPreferCorrection)).append("\n");
    sb.append("    evaluators: ").append(toIndentedString(evaluators)).append("\n");
    sb.append("    codeEvaluators: ").append(toIndentedString(codeEvaluators)).append("\n");
    sb.append("    alerts: ").append(toIndentedString(alerts)).append("\n");
    sb.append("    webhooks: ").append(toIndentedString(webhooks)).append("\n");
    sb.append("    evaluatorVersion: ").append(toIndentedString(evaluatorVersion)).append("\n");
    sb.append("    createAlignmentQueue: ").append(toIndentedString(createAlignmentQueue)).append("\n");
    sb.append("    includeExtendedStats: ").append(toIndentedString(includeExtendedStats)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `display_name` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sdisplay_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDisplayName()))));
    }

    // add `session_id` to the URL query string
    if (getSessionId() != null) {
      joiner.add(String.format("%ssession_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionId()))));
    }

    // add `is_enabled` to the URL query string
    if (getIsEnabled() != null) {
      joiner.add(String.format("%sis_enabled%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsEnabled()))));
    }

    // add `dataset_id` to the URL query string
    if (getDatasetId() != null) {
      joiner.add(String.format("%sdataset_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDatasetId()))));
    }

    // add `sampling_rate` to the URL query string
    if (getSamplingRate() != null) {
      joiner.add(String.format("%ssampling_rate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSamplingRate()))));
    }

    // add `filter` to the URL query string
    if (getFilter() != null) {
      joiner.add(String.format("%sfilter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFilter()))));
    }

    // add `trace_filter` to the URL query string
    if (getTraceFilter() != null) {
      joiner.add(String.format("%strace_filter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTraceFilter()))));
    }

    // add `tree_filter` to the URL query string
    if (getTreeFilter() != null) {
      joiner.add(String.format("%stree_filter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTreeFilter()))));
    }

    // add `backfill_from` to the URL query string
    if (getBackfillFrom() != null) {
      joiner.add(String.format("%sbackfill_from%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getBackfillFrom()))));
    }

    // add `use_corrections_dataset` to the URL query string
    if (getUseCorrectionsDataset() != null) {
      joiner.add(String.format("%suse_corrections_dataset%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUseCorrectionsDataset()))));
    }

    // add `num_few_shot_examples` to the URL query string
    if (getNumFewShotExamples() != null) {
      joiner.add(String.format("%snum_few_shot_examples%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNumFewShotExamples()))));
    }

    // add `extend_only` to the URL query string
    if (getExtendOnly() != null) {
      joiner.add(String.format("%sextend_only%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExtendOnly()))));
    }

    // add `transient` to the URL query string
    if (getTransient() != null) {
      joiner.add(String.format("%stransient%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTransient()))));
    }

    // add `add_to_annotation_queue_id` to the URL query string
    if (getAddToAnnotationQueueId() != null) {
      joiner.add(String.format("%sadd_to_annotation_queue_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAddToAnnotationQueueId()))));
    }

    // add `add_to_dataset_id` to the URL query string
    if (getAddToDatasetId() != null) {
      joiner.add(String.format("%sadd_to_dataset_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAddToDatasetId()))));
    }

    // add `add_to_dataset_prefer_correction` to the URL query string
    if (getAddToDatasetPreferCorrection() != null) {
      joiner.add(String.format("%sadd_to_dataset_prefer_correction%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAddToDatasetPreferCorrection()))));
    }

    // add `evaluators` to the URL query string
    if (getEvaluators() != null) {
      for (int i = 0; i < getEvaluators().size(); i++) {
        if (getEvaluators().get(i) != null) {
          joiner.add(getEvaluators().get(i).toUrlQueryString(String.format("%sevaluators%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `code_evaluators` to the URL query string
    if (getCodeEvaluators() != null) {
      for (int i = 0; i < getCodeEvaluators().size(); i++) {
        if (getCodeEvaluators().get(i) != null) {
          joiner.add(getCodeEvaluators().get(i).toUrlQueryString(String.format("%scode_evaluators%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `alerts` to the URL query string
    if (getAlerts() != null) {
      for (int i = 0; i < getAlerts().size(); i++) {
        if (getAlerts().get(i) != null) {
          joiner.add(getAlerts().get(i).toUrlQueryString(String.format("%salerts%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `webhooks` to the URL query string
    if (getWebhooks() != null) {
      for (int i = 0; i < getWebhooks().size(); i++) {
        if (getWebhooks().get(i) != null) {
          joiner.add(getWebhooks().get(i).toUrlQueryString(String.format("%swebhooks%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `evaluator_version` to the URL query string
    if (getEvaluatorVersion() != null) {
      joiner.add(String.format("%sevaluator_version%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEvaluatorVersion()))));
    }

    // add `create_alignment_queue` to the URL query string
    if (getCreateAlignmentQueue() != null) {
      joiner.add(String.format("%screate_alignment_queue%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreateAlignmentQueue()))));
    }

    // add `include_extended_stats` to the URL query string
    if (getIncludeExtendedStats() != null) {
      joiner.add(String.format("%sinclude_extended_stats%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIncludeExtendedStats()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private RunRulesCreateSchema instance;

    public Builder() {
      this(new RunRulesCreateSchema());
    }

    protected Builder(RunRulesCreateSchema instance) {
      this.instance = instance;
    }

    public RunRulesCreateSchema.Builder displayName(String displayName) {
      this.instance.displayName = displayName;
      return this;
    }
    public RunRulesCreateSchema.Builder sessionId(UUID sessionId) {
      this.instance.sessionId = JsonNullable.<UUID>of(sessionId);
      return this;
    }
    public RunRulesCreateSchema.Builder sessionId(JsonNullable<UUID> sessionId) {
      this.instance.sessionId = sessionId;
      return this;
    }
    public RunRulesCreateSchema.Builder isEnabled(Boolean isEnabled) {
      this.instance.isEnabled = isEnabled;
      return this;
    }
    public RunRulesCreateSchema.Builder datasetId(UUID datasetId) {
      this.instance.datasetId = JsonNullable.<UUID>of(datasetId);
      return this;
    }
    public RunRulesCreateSchema.Builder datasetId(JsonNullable<UUID> datasetId) {
      this.instance.datasetId = datasetId;
      return this;
    }
    public RunRulesCreateSchema.Builder samplingRate(BigDecimal samplingRate) {
      this.instance.samplingRate = samplingRate;
      return this;
    }
    public RunRulesCreateSchema.Builder filter(String filter) {
      this.instance.filter = JsonNullable.<String>of(filter);
      return this;
    }
    public RunRulesCreateSchema.Builder filter(JsonNullable<String> filter) {
      this.instance.filter = filter;
      return this;
    }
    public RunRulesCreateSchema.Builder traceFilter(String traceFilter) {
      this.instance.traceFilter = JsonNullable.<String>of(traceFilter);
      return this;
    }
    public RunRulesCreateSchema.Builder traceFilter(JsonNullable<String> traceFilter) {
      this.instance.traceFilter = traceFilter;
      return this;
    }
    public RunRulesCreateSchema.Builder treeFilter(String treeFilter) {
      this.instance.treeFilter = JsonNullable.<String>of(treeFilter);
      return this;
    }
    public RunRulesCreateSchema.Builder treeFilter(JsonNullable<String> treeFilter) {
      this.instance.treeFilter = treeFilter;
      return this;
    }
    public RunRulesCreateSchema.Builder backfillFrom(OffsetDateTime backfillFrom) {
      this.instance.backfillFrom = JsonNullable.<OffsetDateTime>of(backfillFrom);
      return this;
    }
    public RunRulesCreateSchema.Builder backfillFrom(JsonNullable<OffsetDateTime> backfillFrom) {
      this.instance.backfillFrom = backfillFrom;
      return this;
    }
    public RunRulesCreateSchema.Builder useCorrectionsDataset(Boolean useCorrectionsDataset) {
      this.instance.useCorrectionsDataset = useCorrectionsDataset;
      return this;
    }
    public RunRulesCreateSchema.Builder numFewShotExamples(Integer numFewShotExamples) {
      this.instance.numFewShotExamples = JsonNullable.<Integer>of(numFewShotExamples);
      return this;
    }
    public RunRulesCreateSchema.Builder numFewShotExamples(JsonNullable<Integer> numFewShotExamples) {
      this.instance.numFewShotExamples = numFewShotExamples;
      return this;
    }
    public RunRulesCreateSchema.Builder extendOnly(Boolean extendOnly) {
      this.instance.extendOnly = extendOnly;
      return this;
    }
    public RunRulesCreateSchema.Builder _transient(Boolean _transient) {
      this.instance._transient = _transient;
      return this;
    }
    public RunRulesCreateSchema.Builder addToAnnotationQueueId(UUID addToAnnotationQueueId) {
      this.instance.addToAnnotationQueueId = JsonNullable.<UUID>of(addToAnnotationQueueId);
      return this;
    }
    public RunRulesCreateSchema.Builder addToAnnotationQueueId(JsonNullable<UUID> addToAnnotationQueueId) {
      this.instance.addToAnnotationQueueId = addToAnnotationQueueId;
      return this;
    }
    public RunRulesCreateSchema.Builder addToDatasetId(UUID addToDatasetId) {
      this.instance.addToDatasetId = JsonNullable.<UUID>of(addToDatasetId);
      return this;
    }
    public RunRulesCreateSchema.Builder addToDatasetId(JsonNullable<UUID> addToDatasetId) {
      this.instance.addToDatasetId = addToDatasetId;
      return this;
    }
    public RunRulesCreateSchema.Builder addToDatasetPreferCorrection(Boolean addToDatasetPreferCorrection) {
      this.instance.addToDatasetPreferCorrection = addToDatasetPreferCorrection;
      return this;
    }
    public RunRulesCreateSchema.Builder evaluators(List<EvaluatorTopLevel> evaluators) {
      this.instance.evaluators = JsonNullable.<List<EvaluatorTopLevel>>of(evaluators);
      return this;
    }
    public RunRulesCreateSchema.Builder evaluators(JsonNullable<List<EvaluatorTopLevel>> evaluators) {
      this.instance.evaluators = evaluators;
      return this;
    }
    public RunRulesCreateSchema.Builder codeEvaluators(List<CodeEvaluatorTopLevel> codeEvaluators) {
      this.instance.codeEvaluators = JsonNullable.<List<CodeEvaluatorTopLevel>>of(codeEvaluators);
      return this;
    }
    public RunRulesCreateSchema.Builder codeEvaluators(JsonNullable<List<CodeEvaluatorTopLevel>> codeEvaluators) {
      this.instance.codeEvaluators = codeEvaluators;
      return this;
    }
    public RunRulesCreateSchema.Builder alerts(List<RunRulesPagerdutyAlertSchema> alerts) {
      this.instance.alerts = JsonNullable.<List<RunRulesPagerdutyAlertSchema>>of(alerts);
      return this;
    }
    public RunRulesCreateSchema.Builder alerts(JsonNullable<List<RunRulesPagerdutyAlertSchema>> alerts) {
      this.instance.alerts = alerts;
      return this;
    }
    public RunRulesCreateSchema.Builder webhooks(List<RunRulesWebhookSchema> webhooks) {
      this.instance.webhooks = JsonNullable.<List<RunRulesWebhookSchema>>of(webhooks);
      return this;
    }
    public RunRulesCreateSchema.Builder webhooks(JsonNullable<List<RunRulesWebhookSchema>> webhooks) {
      this.instance.webhooks = webhooks;
      return this;
    }
    public RunRulesCreateSchema.Builder evaluatorVersion(Integer evaluatorVersion) {
      this.instance.evaluatorVersion = JsonNullable.<Integer>of(evaluatorVersion);
      return this;
    }
    public RunRulesCreateSchema.Builder evaluatorVersion(JsonNullable<Integer> evaluatorVersion) {
      this.instance.evaluatorVersion = evaluatorVersion;
      return this;
    }
    public RunRulesCreateSchema.Builder createAlignmentQueue(Boolean createAlignmentQueue) {
      this.instance.createAlignmentQueue = createAlignmentQueue;
      return this;
    }
    public RunRulesCreateSchema.Builder includeExtendedStats(Boolean includeExtendedStats) {
      this.instance.includeExtendedStats = includeExtendedStats;
      return this;
    }


    /**
    * returns a built RunRulesCreateSchema instance.
    *
    * The builder is not reusable.
    */
    public RunRulesCreateSchema build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static RunRulesCreateSchema.Builder builder() {
    return new RunRulesCreateSchema.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public RunRulesCreateSchema.Builder toBuilder() {
    return new RunRulesCreateSchema.Builder()
      .displayName(getDisplayName())
      .sessionId(getSessionId())
      .isEnabled(getIsEnabled())
      .datasetId(getDatasetId())
      .samplingRate(getSamplingRate())
      .filter(getFilter())
      .traceFilter(getTraceFilter())
      .treeFilter(getTreeFilter())
      .backfillFrom(getBackfillFrom())
      .useCorrectionsDataset(getUseCorrectionsDataset())
      .numFewShotExamples(getNumFewShotExamples())
      .extendOnly(getExtendOnly())
      ._transient(getTransient())
      .addToAnnotationQueueId(getAddToAnnotationQueueId())
      .addToDatasetId(getAddToDatasetId())
      .addToDatasetPreferCorrection(getAddToDatasetPreferCorrection())
      .evaluators(getEvaluators())
      .codeEvaluators(getCodeEvaluators())
      .alerts(getAlerts())
      .webhooks(getWebhooks())
      .evaluatorVersion(getEvaluatorVersion())
      .createAlignmentQueue(getCreateAlignmentQueue())
      .includeExtendedStats(getIncludeExtendedStats());
  }

}

