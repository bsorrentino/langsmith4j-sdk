/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.BulkExportRunMetadata;
import org.bsc.langgraph4j.langsmith.gen.model.BulkExportRunStatus;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * BulkExportRun
 */
@JsonPropertyOrder({
  BulkExportRun.JSON_PROPERTY_BULK_EXPORT_ID,
  BulkExportRun.JSON_PROPERTY_METADATA,
  BulkExportRun.JSON_PROPERTY_ID,
  BulkExportRun.JSON_PROPERTY_STATUS,
  BulkExportRun.JSON_PROPERTY_RETRY_NUMBER,
  BulkExportRun.JSON_PROPERTY_ERRORS,
  BulkExportRun.JSON_PROPERTY_CREATED_AT,
  BulkExportRun.JSON_PROPERTY_UPDATED_AT,
  BulkExportRun.JSON_PROPERTY_FINISHED_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class BulkExportRun {
  public static final String JSON_PROPERTY_BULK_EXPORT_ID = "bulk_export_id";
  @javax.annotation.Nonnull
  private UUID bulkExportId;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @javax.annotation.Nonnull
  private BulkExportRunMetadata metadata;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nonnull
  private BulkExportRunStatus status;

  public static final String JSON_PROPERTY_RETRY_NUMBER = "retry_number";
  @javax.annotation.Nullable
  private Integer retryNumber = 0;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private JsonNullable<Object> errors = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @javax.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  @javax.annotation.Nonnull
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_FINISHED_AT = "finished_at";
  @javax.annotation.Nullable
  private OffsetDateTime finishedAt;

  public BulkExportRun() { 
  }

  public BulkExportRun bulkExportId(@javax.annotation.Nonnull UUID bulkExportId) {
    this.bulkExportId = bulkExportId;
    return this;
  }

  /**
   * Get bulkExportId
   * @return bulkExportId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BULK_EXPORT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getBulkExportId() {
    return bulkExportId;
  }


  @JsonProperty(JSON_PROPERTY_BULK_EXPORT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBulkExportId(@javax.annotation.Nonnull UUID bulkExportId) {
    this.bulkExportId = bulkExportId;
  }


  public BulkExportRun metadata(@javax.annotation.Nonnull BulkExportRunMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public BulkExportRunMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetadata(@javax.annotation.Nonnull BulkExportRunMetadata metadata) {
    this.metadata = metadata;
  }


  public BulkExportRun id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public BulkExportRun status(@javax.annotation.Nonnull BulkExportRunStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public BulkExportRunStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@javax.annotation.Nonnull BulkExportRunStatus status) {
    this.status = status;
  }


  public BulkExportRun retryNumber(@javax.annotation.Nullable Integer retryNumber) {
    this.retryNumber = retryNumber;
    return this;
  }

  /**
   * Get retryNumber
   * @return retryNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETRY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getRetryNumber() {
    return retryNumber;
  }


  @JsonProperty(JSON_PROPERTY_RETRY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetryNumber(@javax.annotation.Nullable Integer retryNumber) {
    this.retryNumber = retryNumber;
  }


  public BulkExportRun errors(@javax.annotation.Nullable Object errors) {
    this.errors = JsonNullable.<Object>of(errors);
    return this;
  }

  /**
   * Get errors
   * @return errors
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getErrors() {
        return errors.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getErrors_JsonNullable() {
    return errors;
  }
  
  @JsonProperty(JSON_PROPERTY_ERRORS)
  public void setErrors_JsonNullable(JsonNullable<Object> errors) {
    this.errors = errors;
  }

  public void setErrors(@javax.annotation.Nullable Object errors) {
    this.errors = JsonNullable.<Object>of(errors);
  }


  public BulkExportRun createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public BulkExportRun updatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public BulkExportRun finishedAt(@javax.annotation.Nullable OffsetDateTime finishedAt) {
    this.finishedAt = finishedAt;
    return this;
  }

  /**
   * Get finishedAt
   * @return finishedAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINISHED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getFinishedAt() {
    return finishedAt;
  }


  @JsonProperty(JSON_PROPERTY_FINISHED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFinishedAt(@javax.annotation.Nullable OffsetDateTime finishedAt) {
    this.finishedAt = finishedAt;
  }


  /**
   * Return true if this BulkExportRun object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkExportRun bulkExportRun = (BulkExportRun) o;
    return Objects.equals(this.bulkExportId, bulkExportRun.bulkExportId) &&
        Objects.equals(this.metadata, bulkExportRun.metadata) &&
        Objects.equals(this.id, bulkExportRun.id) &&
        Objects.equals(this.status, bulkExportRun.status) &&
        Objects.equals(this.retryNumber, bulkExportRun.retryNumber) &&
        equalsNullable(this.errors, bulkExportRun.errors) &&
        Objects.equals(this.createdAt, bulkExportRun.createdAt) &&
        Objects.equals(this.updatedAt, bulkExportRun.updatedAt) &&
        Objects.equals(this.finishedAt, bulkExportRun.finishedAt);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(bulkExportId, metadata, id, status, retryNumber, hashCodeNullable(errors), createdAt, updatedAt, finishedAt);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkExportRun {\n");
    sb.append("    bulkExportId: ").append(toIndentedString(bulkExportId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    retryNumber: ").append(toIndentedString(retryNumber)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    finishedAt: ").append(toIndentedString(finishedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `bulk_export_id` to the URL query string
    if (getBulkExportId() != null) {
      joiner.add(String.format("%sbulk_export_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getBulkExportId()))));
    }

    // add `metadata` to the URL query string
    if (getMetadata() != null) {
      joiner.add(getMetadata().toUrlQueryString(prefix + "metadata" + suffix));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
    }

    // add `retry_number` to the URL query string
    if (getRetryNumber() != null) {
      joiner.add(String.format("%sretry_number%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRetryNumber()))));
    }

    // add `errors` to the URL query string
    if (getErrors() != null) {
      joiner.add(String.format("%serrors%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getErrors()))));
    }

    // add `created_at` to the URL query string
    if (getCreatedAt() != null) {
      joiner.add(String.format("%screated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
    }

    // add `updated_at` to the URL query string
    if (getUpdatedAt() != null) {
      joiner.add(String.format("%supdated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUpdatedAt()))));
    }

    // add `finished_at` to the URL query string
    if (getFinishedAt() != null) {
      joiner.add(String.format("%sfinished_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFinishedAt()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private BulkExportRun instance;

    public Builder() {
      this(new BulkExportRun());
    }

    protected Builder(BulkExportRun instance) {
      this.instance = instance;
    }

    public BulkExportRun.Builder bulkExportId(UUID bulkExportId) {
      this.instance.bulkExportId = bulkExportId;
      return this;
    }
    public BulkExportRun.Builder metadata(BulkExportRunMetadata metadata) {
      this.instance.metadata = metadata;
      return this;
    }
    public BulkExportRun.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public BulkExportRun.Builder status(BulkExportRunStatus status) {
      this.instance.status = status;
      return this;
    }
    public BulkExportRun.Builder retryNumber(Integer retryNumber) {
      this.instance.retryNumber = retryNumber;
      return this;
    }
    public BulkExportRun.Builder errors(Object errors) {
      this.instance.errors = JsonNullable.<Object>of(errors);
      return this;
    }
    public BulkExportRun.Builder errors(JsonNullable<Object> errors) {
      this.instance.errors = errors;
      return this;
    }
    public BulkExportRun.Builder createdAt(OffsetDateTime createdAt) {
      this.instance.createdAt = createdAt;
      return this;
    }
    public BulkExportRun.Builder updatedAt(OffsetDateTime updatedAt) {
      this.instance.updatedAt = updatedAt;
      return this;
    }
    public BulkExportRun.Builder finishedAt(OffsetDateTime finishedAt) {
      this.instance.finishedAt = finishedAt;
      return this;
    }


    /**
    * returns a built BulkExportRun instance.
    *
    * The builder is not reusable.
    */
    public BulkExportRun build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static BulkExportRun.Builder builder() {
    return new BulkExportRun.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public BulkExportRun.Builder toBuilder() {
    return new BulkExportRun.Builder()
      .bulkExportId(getBulkExportId())
      .metadata(getMetadata())
      .id(getId())
      .status(getStatus())
      .retryNumber(getRetryNumber())
      .errors(getErrors())
      .createdAt(getCreatedAt())
      .updatedAt(getUpdatedAt())
      .finishedAt(getFinishedAt());
  }

}

