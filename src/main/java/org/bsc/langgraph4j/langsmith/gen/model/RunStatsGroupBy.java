/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Group by param for run stats.
 */
@JsonPropertyOrder({
  RunStatsGroupBy.JSON_PROPERTY_ATTRIBUTE,
  RunStatsGroupBy.JSON_PROPERTY_PATH,
  RunStatsGroupBy.JSON_PROPERTY_MAX_GROUPS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class RunStatsGroupBy {
  /**
   * Gets or Sets attribute
   */
  public enum AttributeEnum {
    NAME(String.valueOf("name")),
    
    RUN_TYPE(String.valueOf("run_type")),
    
    TAG(String.valueOf("tag")),
    
    METADATA(String.valueOf("metadata"));

    private String value;

    AttributeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AttributeEnum fromValue(String value) {
      for (AttributeEnum b : AttributeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ATTRIBUTE = "attribute";
  @javax.annotation.Nonnull
  private AttributeEnum attribute;

  public static final String JSON_PROPERTY_PATH = "path";
  private JsonNullable<String> path = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAX_GROUPS = "max_groups";
  @javax.annotation.Nullable
  private Integer maxGroups = 5;

  public RunStatsGroupBy() { 
  }

  public RunStatsGroupBy attribute(@javax.annotation.Nonnull AttributeEnum attribute) {
    this.attribute = attribute;
    return this;
  }

  /**
   * Get attribute
   * @return attribute
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public AttributeEnum getAttribute() {
    return attribute;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAttribute(@javax.annotation.Nonnull AttributeEnum attribute) {
    this.attribute = attribute;
  }


  public RunStatsGroupBy path(@javax.annotation.Nullable String path) {
    this.path = JsonNullable.<String>of(path);
    return this;
  }

  /**
   * Get path
   * @return path
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPath() {
        return path.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPath_JsonNullable() {
    return path;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH)
  public void setPath_JsonNullable(JsonNullable<String> path) {
    this.path = path;
  }

  public void setPath(@javax.annotation.Nullable String path) {
    this.path = JsonNullable.<String>of(path);
  }


  public RunStatsGroupBy maxGroups(@javax.annotation.Nullable Integer maxGroups) {
    this.maxGroups = maxGroups;
    return this;
  }

  /**
   * Get maxGroups
   * @return maxGroups
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getMaxGroups() {
    return maxGroups;
  }


  @JsonProperty(JSON_PROPERTY_MAX_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxGroups(@javax.annotation.Nullable Integer maxGroups) {
    this.maxGroups = maxGroups;
  }


  /**
   * Return true if this RunStatsGroupBy object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunStatsGroupBy runStatsGroupBy = (RunStatsGroupBy) o;
    return Objects.equals(this.attribute, runStatsGroupBy.attribute) &&
        equalsNullable(this.path, runStatsGroupBy.path) &&
        Objects.equals(this.maxGroups, runStatsGroupBy.maxGroups);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(attribute, hashCodeNullable(path), maxGroups);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunStatsGroupBy {\n");
    sb.append("    attribute: ").append(toIndentedString(attribute)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    maxGroups: ").append(toIndentedString(maxGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `attribute` to the URL query string
    if (getAttribute() != null) {
      joiner.add(String.format("%sattribute%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAttribute()))));
    }

    // add `path` to the URL query string
    if (getPath() != null) {
      joiner.add(String.format("%spath%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPath()))));
    }

    // add `max_groups` to the URL query string
    if (getMaxGroups() != null) {
      joiner.add(String.format("%smax_groups%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMaxGroups()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private RunStatsGroupBy instance;

    public Builder() {
      this(new RunStatsGroupBy());
    }

    protected Builder(RunStatsGroupBy instance) {
      this.instance = instance;
    }

    public RunStatsGroupBy.Builder attribute(AttributeEnum attribute) {
      this.instance.attribute = attribute;
      return this;
    }
    public RunStatsGroupBy.Builder path(String path) {
      this.instance.path = JsonNullable.<String>of(path);
      return this;
    }
    public RunStatsGroupBy.Builder path(JsonNullable<String> path) {
      this.instance.path = path;
      return this;
    }
    public RunStatsGroupBy.Builder maxGroups(Integer maxGroups) {
      this.instance.maxGroups = maxGroups;
      return this;
    }


    /**
    * returns a built RunStatsGroupBy instance.
    *
    * The builder is not reusable.
    */
    public RunStatsGroupBy build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static RunStatsGroupBy.Builder builder() {
    return new RunStatsGroupBy.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public RunStatsGroupBy.Builder toBuilder() {
    return new RunStatsGroupBy.Builder()
      .attribute(getAttribute())
      .path(getPath())
      .maxGroups(getMaxGroups());
  }

}

