/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.CodeEvaluatorTopLevel;
import org.bsc.langgraph4j.langsmith.gen.model.EvaluatorTopLevel;
import org.bsc.langgraph4j.langsmith.gen.model.RunRulesPagerdutyAlertSchema;
import org.bsc.langgraph4j.langsmith.gen.model.RunRulesWebhookSchema;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Run rules schema.
 */
@JsonPropertyOrder({
  RunRulesSchema.JSON_PROPERTY_ID,
  RunRulesSchema.JSON_PROPERTY_TENANT_ID,
  RunRulesSchema.JSON_PROPERTY_IS_ENABLED,
  RunRulesSchema.JSON_PROPERTY_SESSION_ID,
  RunRulesSchema.JSON_PROPERTY_SESSION_NAME,
  RunRulesSchema.JSON_PROPERTY_DATASET_ID,
  RunRulesSchema.JSON_PROPERTY_DATASET_NAME,
  RunRulesSchema.JSON_PROPERTY_DISPLAY_NAME,
  RunRulesSchema.JSON_PROPERTY_SAMPLING_RATE,
  RunRulesSchema.JSON_PROPERTY_FILTER,
  RunRulesSchema.JSON_PROPERTY_TRACE_FILTER,
  RunRulesSchema.JSON_PROPERTY_TREE_FILTER,
  RunRulesSchema.JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_ID,
  RunRulesSchema.JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_NAME,
  RunRulesSchema.JSON_PROPERTY_ADD_TO_DATASET_ID,
  RunRulesSchema.JSON_PROPERTY_ADD_TO_DATASET_NAME,
  RunRulesSchema.JSON_PROPERTY_ADD_TO_DATASET_PREFER_CORRECTION,
  RunRulesSchema.JSON_PROPERTY_CORRECTIONS_DATASET_ID,
  RunRulesSchema.JSON_PROPERTY_USE_CORRECTIONS_DATASET,
  RunRulesSchema.JSON_PROPERTY_NUM_FEW_SHOT_EXAMPLES,
  RunRulesSchema.JSON_PROPERTY_EVALUATORS,
  RunRulesSchema.JSON_PROPERTY_CODE_EVALUATORS,
  RunRulesSchema.JSON_PROPERTY_ALERTS,
  RunRulesSchema.JSON_PROPERTY_WEBHOOKS,
  RunRulesSchema.JSON_PROPERTY_EXTEND_ONLY,
  RunRulesSchema.JSON_PROPERTY_INCLUDE_EXTENDED_STATS,
  RunRulesSchema.JSON_PROPERTY_CREATED_AT,
  RunRulesSchema.JSON_PROPERTY_UPDATED_AT,
  RunRulesSchema.JSON_PROPERTY_BACKFILL_FROM,
  RunRulesSchema.JSON_PROPERTY_TRANSIENT,
  RunRulesSchema.JSON_PROPERTY_EVALUATOR_VERSION,
  RunRulesSchema.JSON_PROPERTY_EVALUATOR_ID,
  RunRulesSchema.JSON_PROPERTY_ALIGNMENT_ANNOTATION_QUEUE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class RunRulesSchema {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_TENANT_ID = "tenant_id";
  @javax.annotation.Nonnull
  private UUID tenantId;

  public static final String JSON_PROPERTY_IS_ENABLED = "is_enabled";
  @javax.annotation.Nullable
  private Boolean isEnabled = true;

  public static final String JSON_PROPERTY_SESSION_ID = "session_id";
  private JsonNullable<UUID> sessionId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_SESSION_NAME = "session_name";
  private JsonNullable<String> sessionName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATASET_ID = "dataset_id";
  private JsonNullable<UUID> datasetId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_DATASET_NAME = "dataset_name";
  private JsonNullable<String> datasetName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  @javax.annotation.Nonnull
  private String displayName;

  public static final String JSON_PROPERTY_SAMPLING_RATE = "sampling_rate";
  @javax.annotation.Nonnull
  private BigDecimal samplingRate;

  public static final String JSON_PROPERTY_FILTER = "filter";
  private JsonNullable<String> filter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TRACE_FILTER = "trace_filter";
  private JsonNullable<String> traceFilter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TREE_FILTER = "tree_filter";
  private JsonNullable<String> treeFilter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_ID = "add_to_annotation_queue_id";
  private JsonNullable<UUID> addToAnnotationQueueId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_NAME = "add_to_annotation_queue_name";
  private JsonNullable<String> addToAnnotationQueueName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ADD_TO_DATASET_ID = "add_to_dataset_id";
  private JsonNullable<UUID> addToDatasetId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_ADD_TO_DATASET_NAME = "add_to_dataset_name";
  private JsonNullable<String> addToDatasetName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ADD_TO_DATASET_PREFER_CORRECTION = "add_to_dataset_prefer_correction";
  @javax.annotation.Nullable
  private Boolean addToDatasetPreferCorrection = false;

  public static final String JSON_PROPERTY_CORRECTIONS_DATASET_ID = "corrections_dataset_id";
  private JsonNullable<UUID> correctionsDatasetId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_USE_CORRECTIONS_DATASET = "use_corrections_dataset";
  @javax.annotation.Nullable
  private Boolean useCorrectionsDataset = false;

  public static final String JSON_PROPERTY_NUM_FEW_SHOT_EXAMPLES = "num_few_shot_examples";
  private JsonNullable<Integer> numFewShotExamples = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_EVALUATORS = "evaluators";
  private JsonNullable<List<EvaluatorTopLevel>> evaluators = JsonNullable.<List<EvaluatorTopLevel>>undefined();

  public static final String JSON_PROPERTY_CODE_EVALUATORS = "code_evaluators";
  private JsonNullable<List<CodeEvaluatorTopLevel>> codeEvaluators = JsonNullable.<List<CodeEvaluatorTopLevel>>undefined();

  public static final String JSON_PROPERTY_ALERTS = "alerts";
  private JsonNullable<List<RunRulesPagerdutyAlertSchema>> alerts = JsonNullable.<List<RunRulesPagerdutyAlertSchema>>undefined();

  public static final String JSON_PROPERTY_WEBHOOKS = "webhooks";
  @javax.annotation.Nullable
  private List<RunRulesWebhookSchema> webhooks;

  public static final String JSON_PROPERTY_EXTEND_ONLY = "extend_only";
  @javax.annotation.Nullable
  private Boolean extendOnly = false;

  public static final String JSON_PROPERTY_INCLUDE_EXTENDED_STATS = "include_extended_stats";
  @javax.annotation.Nullable
  private Boolean includeExtendedStats = false;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @javax.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  @javax.annotation.Nonnull
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_BACKFILL_FROM = "backfill_from";
  private JsonNullable<OffsetDateTime> backfillFrom = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_TRANSIENT = "transient";
  @javax.annotation.Nullable
  private Boolean _transient = false;

  public static final String JSON_PROPERTY_EVALUATOR_VERSION = "evaluator_version";
  @javax.annotation.Nonnull
  private Integer evaluatorVersion;

  public static final String JSON_PROPERTY_EVALUATOR_ID = "evaluator_id";
  private JsonNullable<UUID> evaluatorId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_ALIGNMENT_ANNOTATION_QUEUE_ID = "alignment_annotation_queue_id";
  private JsonNullable<UUID> alignmentAnnotationQueueId = JsonNullable.<UUID>undefined();

  public RunRulesSchema() { 
  }

  public RunRulesSchema id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public RunRulesSchema tenantId(@javax.annotation.Nonnull UUID tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenantId(@javax.annotation.Nonnull UUID tenantId) {
    this.tenantId = tenantId;
  }


  public RunRulesSchema isEnabled(@javax.annotation.Nullable Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

  /**
   * Get isEnabled
   * @return isEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsEnabled() {
    return isEnabled;
  }


  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsEnabled(@javax.annotation.Nullable Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public RunRulesSchema sessionId(@javax.annotation.Nullable UUID sessionId) {
    this.sessionId = JsonNullable.<UUID>of(sessionId);
    return this;
  }

  /**
   * Get sessionId
   * @return sessionId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getSessionId() {
        return sessionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getSessionId_JsonNullable() {
    return sessionId;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  public void setSessionId_JsonNullable(JsonNullable<UUID> sessionId) {
    this.sessionId = sessionId;
  }

  public void setSessionId(@javax.annotation.Nullable UUID sessionId) {
    this.sessionId = JsonNullable.<UUID>of(sessionId);
  }


  public RunRulesSchema sessionName(@javax.annotation.Nullable String sessionName) {
    this.sessionName = JsonNullable.<String>of(sessionName);
    return this;
  }

  /**
   * Get sessionName
   * @return sessionName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSessionName() {
        return sessionName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSessionName_JsonNullable() {
    return sessionName;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_NAME)
  public void setSessionName_JsonNullable(JsonNullable<String> sessionName) {
    this.sessionName = sessionName;
  }

  public void setSessionName(@javax.annotation.Nullable String sessionName) {
    this.sessionName = JsonNullable.<String>of(sessionName);
  }


  public RunRulesSchema datasetId(@javax.annotation.Nullable UUID datasetId) {
    this.datasetId = JsonNullable.<UUID>of(datasetId);
    return this;
  }

  /**
   * Get datasetId
   * @return datasetId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getDatasetId() {
        return datasetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getDatasetId_JsonNullable() {
    return datasetId;
  }
  
  @JsonProperty(JSON_PROPERTY_DATASET_ID)
  public void setDatasetId_JsonNullable(JsonNullable<UUID> datasetId) {
    this.datasetId = datasetId;
  }

  public void setDatasetId(@javax.annotation.Nullable UUID datasetId) {
    this.datasetId = JsonNullable.<UUID>of(datasetId);
  }


  public RunRulesSchema datasetName(@javax.annotation.Nullable String datasetName) {
    this.datasetName = JsonNullable.<String>of(datasetName);
    return this;
  }

  /**
   * Get datasetName
   * @return datasetName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDatasetName() {
        return datasetName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATASET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDatasetName_JsonNullable() {
    return datasetName;
  }
  
  @JsonProperty(JSON_PROPERTY_DATASET_NAME)
  public void setDatasetName_JsonNullable(JsonNullable<String> datasetName) {
    this.datasetName = datasetName;
  }

  public void setDatasetName(@javax.annotation.Nullable String datasetName) {
    this.datasetName = JsonNullable.<String>of(datasetName);
  }


  public RunRulesSchema displayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
  }


  public RunRulesSchema samplingRate(@javax.annotation.Nonnull BigDecimal samplingRate) {
    this.samplingRate = samplingRate;
    return this;
  }

  /**
   * Get samplingRate
   * @return samplingRate
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SAMPLING_RATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public BigDecimal getSamplingRate() {
    return samplingRate;
  }


  @JsonProperty(JSON_PROPERTY_SAMPLING_RATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSamplingRate(@javax.annotation.Nonnull BigDecimal samplingRate) {
    this.samplingRate = samplingRate;
  }


  public RunRulesSchema filter(@javax.annotation.Nullable String filter) {
    this.filter = JsonNullable.<String>of(filter);
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFilter() {
        return filter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFilter_JsonNullable() {
    return filter;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER)
  public void setFilter_JsonNullable(JsonNullable<String> filter) {
    this.filter = filter;
  }

  public void setFilter(@javax.annotation.Nullable String filter) {
    this.filter = JsonNullable.<String>of(filter);
  }


  public RunRulesSchema traceFilter(@javax.annotation.Nullable String traceFilter) {
    this.traceFilter = JsonNullable.<String>of(traceFilter);
    return this;
  }

  /**
   * Get traceFilter
   * @return traceFilter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTraceFilter() {
        return traceFilter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRACE_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTraceFilter_JsonNullable() {
    return traceFilter;
  }
  
  @JsonProperty(JSON_PROPERTY_TRACE_FILTER)
  public void setTraceFilter_JsonNullable(JsonNullable<String> traceFilter) {
    this.traceFilter = traceFilter;
  }

  public void setTraceFilter(@javax.annotation.Nullable String traceFilter) {
    this.traceFilter = JsonNullable.<String>of(traceFilter);
  }


  public RunRulesSchema treeFilter(@javax.annotation.Nullable String treeFilter) {
    this.treeFilter = JsonNullable.<String>of(treeFilter);
    return this;
  }

  /**
   * Get treeFilter
   * @return treeFilter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTreeFilter() {
        return treeFilter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TREE_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTreeFilter_JsonNullable() {
    return treeFilter;
  }
  
  @JsonProperty(JSON_PROPERTY_TREE_FILTER)
  public void setTreeFilter_JsonNullable(JsonNullable<String> treeFilter) {
    this.treeFilter = treeFilter;
  }

  public void setTreeFilter(@javax.annotation.Nullable String treeFilter) {
    this.treeFilter = JsonNullable.<String>of(treeFilter);
  }


  public RunRulesSchema addToAnnotationQueueId(@javax.annotation.Nullable UUID addToAnnotationQueueId) {
    this.addToAnnotationQueueId = JsonNullable.<UUID>of(addToAnnotationQueueId);
    return this;
  }

  /**
   * Get addToAnnotationQueueId
   * @return addToAnnotationQueueId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getAddToAnnotationQueueId() {
        return addToAnnotationQueueId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getAddToAnnotationQueueId_JsonNullable() {
    return addToAnnotationQueueId;
  }
  
  @JsonProperty(JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_ID)
  public void setAddToAnnotationQueueId_JsonNullable(JsonNullable<UUID> addToAnnotationQueueId) {
    this.addToAnnotationQueueId = addToAnnotationQueueId;
  }

  public void setAddToAnnotationQueueId(@javax.annotation.Nullable UUID addToAnnotationQueueId) {
    this.addToAnnotationQueueId = JsonNullable.<UUID>of(addToAnnotationQueueId);
  }


  public RunRulesSchema addToAnnotationQueueName(@javax.annotation.Nullable String addToAnnotationQueueName) {
    this.addToAnnotationQueueName = JsonNullable.<String>of(addToAnnotationQueueName);
    return this;
  }

  /**
   * Get addToAnnotationQueueName
   * @return addToAnnotationQueueName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAddToAnnotationQueueName() {
        return addToAnnotationQueueName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAddToAnnotationQueueName_JsonNullable() {
    return addToAnnotationQueueName;
  }
  
  @JsonProperty(JSON_PROPERTY_ADD_TO_ANNOTATION_QUEUE_NAME)
  public void setAddToAnnotationQueueName_JsonNullable(JsonNullable<String> addToAnnotationQueueName) {
    this.addToAnnotationQueueName = addToAnnotationQueueName;
  }

  public void setAddToAnnotationQueueName(@javax.annotation.Nullable String addToAnnotationQueueName) {
    this.addToAnnotationQueueName = JsonNullable.<String>of(addToAnnotationQueueName);
  }


  public RunRulesSchema addToDatasetId(@javax.annotation.Nullable UUID addToDatasetId) {
    this.addToDatasetId = JsonNullable.<UUID>of(addToDatasetId);
    return this;
  }

  /**
   * Get addToDatasetId
   * @return addToDatasetId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getAddToDatasetId() {
        return addToDatasetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADD_TO_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getAddToDatasetId_JsonNullable() {
    return addToDatasetId;
  }
  
  @JsonProperty(JSON_PROPERTY_ADD_TO_DATASET_ID)
  public void setAddToDatasetId_JsonNullable(JsonNullable<UUID> addToDatasetId) {
    this.addToDatasetId = addToDatasetId;
  }

  public void setAddToDatasetId(@javax.annotation.Nullable UUID addToDatasetId) {
    this.addToDatasetId = JsonNullable.<UUID>of(addToDatasetId);
  }


  public RunRulesSchema addToDatasetName(@javax.annotation.Nullable String addToDatasetName) {
    this.addToDatasetName = JsonNullable.<String>of(addToDatasetName);
    return this;
  }

  /**
   * Get addToDatasetName
   * @return addToDatasetName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAddToDatasetName() {
        return addToDatasetName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADD_TO_DATASET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAddToDatasetName_JsonNullable() {
    return addToDatasetName;
  }
  
  @JsonProperty(JSON_PROPERTY_ADD_TO_DATASET_NAME)
  public void setAddToDatasetName_JsonNullable(JsonNullable<String> addToDatasetName) {
    this.addToDatasetName = addToDatasetName;
  }

  public void setAddToDatasetName(@javax.annotation.Nullable String addToDatasetName) {
    this.addToDatasetName = JsonNullable.<String>of(addToDatasetName);
  }


  public RunRulesSchema addToDatasetPreferCorrection(@javax.annotation.Nullable Boolean addToDatasetPreferCorrection) {
    this.addToDatasetPreferCorrection = addToDatasetPreferCorrection;
    return this;
  }

  /**
   * Get addToDatasetPreferCorrection
   * @return addToDatasetPreferCorrection
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADD_TO_DATASET_PREFER_CORRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAddToDatasetPreferCorrection() {
    return addToDatasetPreferCorrection;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TO_DATASET_PREFER_CORRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddToDatasetPreferCorrection(@javax.annotation.Nullable Boolean addToDatasetPreferCorrection) {
    this.addToDatasetPreferCorrection = addToDatasetPreferCorrection;
  }


  public RunRulesSchema correctionsDatasetId(@javax.annotation.Nullable UUID correctionsDatasetId) {
    this.correctionsDatasetId = JsonNullable.<UUID>of(correctionsDatasetId);
    return this;
  }

  /**
   * Get correctionsDatasetId
   * @return correctionsDatasetId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getCorrectionsDatasetId() {
        return correctionsDatasetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CORRECTIONS_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getCorrectionsDatasetId_JsonNullable() {
    return correctionsDatasetId;
  }
  
  @JsonProperty(JSON_PROPERTY_CORRECTIONS_DATASET_ID)
  public void setCorrectionsDatasetId_JsonNullable(JsonNullable<UUID> correctionsDatasetId) {
    this.correctionsDatasetId = correctionsDatasetId;
  }

  public void setCorrectionsDatasetId(@javax.annotation.Nullable UUID correctionsDatasetId) {
    this.correctionsDatasetId = JsonNullable.<UUID>of(correctionsDatasetId);
  }


  public RunRulesSchema useCorrectionsDataset(@javax.annotation.Nullable Boolean useCorrectionsDataset) {
    this.useCorrectionsDataset = useCorrectionsDataset;
    return this;
  }

  /**
   * Get useCorrectionsDataset
   * @return useCorrectionsDataset
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_CORRECTIONS_DATASET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getUseCorrectionsDataset() {
    return useCorrectionsDataset;
  }


  @JsonProperty(JSON_PROPERTY_USE_CORRECTIONS_DATASET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseCorrectionsDataset(@javax.annotation.Nullable Boolean useCorrectionsDataset) {
    this.useCorrectionsDataset = useCorrectionsDataset;
  }


  public RunRulesSchema numFewShotExamples(@javax.annotation.Nullable Integer numFewShotExamples) {
    this.numFewShotExamples = JsonNullable.<Integer>of(numFewShotExamples);
    return this;
  }

  /**
   * Get numFewShotExamples
   * @return numFewShotExamples
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getNumFewShotExamples() {
        return numFewShotExamples.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUM_FEW_SHOT_EXAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getNumFewShotExamples_JsonNullable() {
    return numFewShotExamples;
  }
  
  @JsonProperty(JSON_PROPERTY_NUM_FEW_SHOT_EXAMPLES)
  public void setNumFewShotExamples_JsonNullable(JsonNullable<Integer> numFewShotExamples) {
    this.numFewShotExamples = numFewShotExamples;
  }

  public void setNumFewShotExamples(@javax.annotation.Nullable Integer numFewShotExamples) {
    this.numFewShotExamples = JsonNullable.<Integer>of(numFewShotExamples);
  }


  public RunRulesSchema evaluators(@javax.annotation.Nullable List<EvaluatorTopLevel> evaluators) {
    this.evaluators = JsonNullable.<List<EvaluatorTopLevel>>of(evaluators);
    return this;
  }

  public RunRulesSchema addEvaluatorsItem(EvaluatorTopLevel evaluatorsItem) {
    if (this.evaluators == null || !this.evaluators.isPresent()) {
      this.evaluators = JsonNullable.<List<EvaluatorTopLevel>>of(new ArrayList<>());
    }
    try {
      this.evaluators.get().add(evaluatorsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get evaluators
   * @return evaluators
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<EvaluatorTopLevel> getEvaluators() {
        return evaluators.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVALUATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EvaluatorTopLevel>> getEvaluators_JsonNullable() {
    return evaluators;
  }
  
  @JsonProperty(JSON_PROPERTY_EVALUATORS)
  public void setEvaluators_JsonNullable(JsonNullable<List<EvaluatorTopLevel>> evaluators) {
    this.evaluators = evaluators;
  }

  public void setEvaluators(@javax.annotation.Nullable List<EvaluatorTopLevel> evaluators) {
    this.evaluators = JsonNullable.<List<EvaluatorTopLevel>>of(evaluators);
  }


  public RunRulesSchema codeEvaluators(@javax.annotation.Nullable List<CodeEvaluatorTopLevel> codeEvaluators) {
    this.codeEvaluators = JsonNullable.<List<CodeEvaluatorTopLevel>>of(codeEvaluators);
    return this;
  }

  public RunRulesSchema addCodeEvaluatorsItem(CodeEvaluatorTopLevel codeEvaluatorsItem) {
    if (this.codeEvaluators == null || !this.codeEvaluators.isPresent()) {
      this.codeEvaluators = JsonNullable.<List<CodeEvaluatorTopLevel>>of(new ArrayList<>());
    }
    try {
      this.codeEvaluators.get().add(codeEvaluatorsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get codeEvaluators
   * @return codeEvaluators
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<CodeEvaluatorTopLevel> getCodeEvaluators() {
        return codeEvaluators.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CODE_EVALUATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<CodeEvaluatorTopLevel>> getCodeEvaluators_JsonNullable() {
    return codeEvaluators;
  }
  
  @JsonProperty(JSON_PROPERTY_CODE_EVALUATORS)
  public void setCodeEvaluators_JsonNullable(JsonNullable<List<CodeEvaluatorTopLevel>> codeEvaluators) {
    this.codeEvaluators = codeEvaluators;
  }

  public void setCodeEvaluators(@javax.annotation.Nullable List<CodeEvaluatorTopLevel> codeEvaluators) {
    this.codeEvaluators = JsonNullable.<List<CodeEvaluatorTopLevel>>of(codeEvaluators);
  }


  public RunRulesSchema alerts(@javax.annotation.Nullable List<RunRulesPagerdutyAlertSchema> alerts) {
    this.alerts = JsonNullable.<List<RunRulesPagerdutyAlertSchema>>of(alerts);
    return this;
  }

  public RunRulesSchema addAlertsItem(RunRulesPagerdutyAlertSchema alertsItem) {
    if (this.alerts == null || !this.alerts.isPresent()) {
      this.alerts = JsonNullable.<List<RunRulesPagerdutyAlertSchema>>of(new ArrayList<>());
    }
    try {
      this.alerts.get().add(alertsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get alerts
   * @return alerts
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<RunRulesPagerdutyAlertSchema> getAlerts() {
        return alerts.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALERTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<RunRulesPagerdutyAlertSchema>> getAlerts_JsonNullable() {
    return alerts;
  }
  
  @JsonProperty(JSON_PROPERTY_ALERTS)
  public void setAlerts_JsonNullable(JsonNullable<List<RunRulesPagerdutyAlertSchema>> alerts) {
    this.alerts = alerts;
  }

  public void setAlerts(@javax.annotation.Nullable List<RunRulesPagerdutyAlertSchema> alerts) {
    this.alerts = JsonNullable.<List<RunRulesPagerdutyAlertSchema>>of(alerts);
  }


  public RunRulesSchema webhooks(@javax.annotation.Nullable List<RunRulesWebhookSchema> webhooks) {
    this.webhooks = webhooks;
    return this;
  }

  public RunRulesSchema addWebhooksItem(RunRulesWebhookSchema webhooksItem) {
    if (this.webhooks == null) {
      this.webhooks = new ArrayList<>();
    }
    this.webhooks.add(webhooksItem);
    return this;
  }

  /**
   * Get webhooks
   * @return webhooks
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBHOOKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<RunRulesWebhookSchema> getWebhooks() {
    return webhooks;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWebhooks(@javax.annotation.Nullable List<RunRulesWebhookSchema> webhooks) {
    this.webhooks = webhooks;
  }


  public RunRulesSchema extendOnly(@javax.annotation.Nullable Boolean extendOnly) {
    this.extendOnly = extendOnly;
    return this;
  }

  /**
   * Get extendOnly
   * @return extendOnly
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTEND_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getExtendOnly() {
    return extendOnly;
  }


  @JsonProperty(JSON_PROPERTY_EXTEND_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtendOnly(@javax.annotation.Nullable Boolean extendOnly) {
    this.extendOnly = extendOnly;
  }


  public RunRulesSchema includeExtendedStats(@javax.annotation.Nullable Boolean includeExtendedStats) {
    this.includeExtendedStats = includeExtendedStats;
    return this;
  }

  /**
   * Get includeExtendedStats
   * @return includeExtendedStats
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDE_EXTENDED_STATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIncludeExtendedStats() {
    return includeExtendedStats;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_EXTENDED_STATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeExtendedStats(@javax.annotation.Nullable Boolean includeExtendedStats) {
    this.includeExtendedStats = includeExtendedStats;
  }


  public RunRulesSchema createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public RunRulesSchema updatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public RunRulesSchema backfillFrom(@javax.annotation.Nullable OffsetDateTime backfillFrom) {
    this.backfillFrom = JsonNullable.<OffsetDateTime>of(backfillFrom);
    return this;
  }

  /**
   * Get backfillFrom
   * @return backfillFrom
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getBackfillFrom() {
        return backfillFrom.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BACKFILL_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getBackfillFrom_JsonNullable() {
    return backfillFrom;
  }
  
  @JsonProperty(JSON_PROPERTY_BACKFILL_FROM)
  public void setBackfillFrom_JsonNullable(JsonNullable<OffsetDateTime> backfillFrom) {
    this.backfillFrom = backfillFrom;
  }

  public void setBackfillFrom(@javax.annotation.Nullable OffsetDateTime backfillFrom) {
    this.backfillFrom = JsonNullable.<OffsetDateTime>of(backfillFrom);
  }


  public RunRulesSchema _transient(@javax.annotation.Nullable Boolean _transient) {
    this._transient = _transient;
    return this;
  }

  /**
   * Get _transient
   * @return _transient
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getTransient() {
    return _transient;
  }


  @JsonProperty(JSON_PROPERTY_TRANSIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransient(@javax.annotation.Nullable Boolean _transient) {
    this._transient = _transient;
  }


  public RunRulesSchema evaluatorVersion(@javax.annotation.Nonnull Integer evaluatorVersion) {
    this.evaluatorVersion = evaluatorVersion;
    return this;
  }

  /**
   * Get evaluatorVersion
   * @return evaluatorVersion
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EVALUATOR_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getEvaluatorVersion() {
    return evaluatorVersion;
  }


  @JsonProperty(JSON_PROPERTY_EVALUATOR_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEvaluatorVersion(@javax.annotation.Nonnull Integer evaluatorVersion) {
    this.evaluatorVersion = evaluatorVersion;
  }


  public RunRulesSchema evaluatorId(@javax.annotation.Nullable UUID evaluatorId) {
    this.evaluatorId = JsonNullable.<UUID>of(evaluatorId);
    return this;
  }

  /**
   * Get evaluatorId
   * @return evaluatorId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getEvaluatorId() {
        return evaluatorId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVALUATOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getEvaluatorId_JsonNullable() {
    return evaluatorId;
  }
  
  @JsonProperty(JSON_PROPERTY_EVALUATOR_ID)
  public void setEvaluatorId_JsonNullable(JsonNullable<UUID> evaluatorId) {
    this.evaluatorId = evaluatorId;
  }

  public void setEvaluatorId(@javax.annotation.Nullable UUID evaluatorId) {
    this.evaluatorId = JsonNullable.<UUID>of(evaluatorId);
  }


  public RunRulesSchema alignmentAnnotationQueueId(@javax.annotation.Nullable UUID alignmentAnnotationQueueId) {
    this.alignmentAnnotationQueueId = JsonNullable.<UUID>of(alignmentAnnotationQueueId);
    return this;
  }

  /**
   * Get alignmentAnnotationQueueId
   * @return alignmentAnnotationQueueId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getAlignmentAnnotationQueueId() {
        return alignmentAnnotationQueueId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALIGNMENT_ANNOTATION_QUEUE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getAlignmentAnnotationQueueId_JsonNullable() {
    return alignmentAnnotationQueueId;
  }
  
  @JsonProperty(JSON_PROPERTY_ALIGNMENT_ANNOTATION_QUEUE_ID)
  public void setAlignmentAnnotationQueueId_JsonNullable(JsonNullable<UUID> alignmentAnnotationQueueId) {
    this.alignmentAnnotationQueueId = alignmentAnnotationQueueId;
  }

  public void setAlignmentAnnotationQueueId(@javax.annotation.Nullable UUID alignmentAnnotationQueueId) {
    this.alignmentAnnotationQueueId = JsonNullable.<UUID>of(alignmentAnnotationQueueId);
  }


  /**
   * Return true if this RunRulesSchema object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunRulesSchema runRulesSchema = (RunRulesSchema) o;
    return Objects.equals(this.id, runRulesSchema.id) &&
        Objects.equals(this.tenantId, runRulesSchema.tenantId) &&
        Objects.equals(this.isEnabled, runRulesSchema.isEnabled) &&
        equalsNullable(this.sessionId, runRulesSchema.sessionId) &&
        equalsNullable(this.sessionName, runRulesSchema.sessionName) &&
        equalsNullable(this.datasetId, runRulesSchema.datasetId) &&
        equalsNullable(this.datasetName, runRulesSchema.datasetName) &&
        Objects.equals(this.displayName, runRulesSchema.displayName) &&
        Objects.equals(this.samplingRate, runRulesSchema.samplingRate) &&
        equalsNullable(this.filter, runRulesSchema.filter) &&
        equalsNullable(this.traceFilter, runRulesSchema.traceFilter) &&
        equalsNullable(this.treeFilter, runRulesSchema.treeFilter) &&
        equalsNullable(this.addToAnnotationQueueId, runRulesSchema.addToAnnotationQueueId) &&
        equalsNullable(this.addToAnnotationQueueName, runRulesSchema.addToAnnotationQueueName) &&
        equalsNullable(this.addToDatasetId, runRulesSchema.addToDatasetId) &&
        equalsNullable(this.addToDatasetName, runRulesSchema.addToDatasetName) &&
        Objects.equals(this.addToDatasetPreferCorrection, runRulesSchema.addToDatasetPreferCorrection) &&
        equalsNullable(this.correctionsDatasetId, runRulesSchema.correctionsDatasetId) &&
        Objects.equals(this.useCorrectionsDataset, runRulesSchema.useCorrectionsDataset) &&
        equalsNullable(this.numFewShotExamples, runRulesSchema.numFewShotExamples) &&
        equalsNullable(this.evaluators, runRulesSchema.evaluators) &&
        equalsNullable(this.codeEvaluators, runRulesSchema.codeEvaluators) &&
        equalsNullable(this.alerts, runRulesSchema.alerts) &&
        Objects.equals(this.webhooks, runRulesSchema.webhooks) &&
        Objects.equals(this.extendOnly, runRulesSchema.extendOnly) &&
        Objects.equals(this.includeExtendedStats, runRulesSchema.includeExtendedStats) &&
        Objects.equals(this.createdAt, runRulesSchema.createdAt) &&
        Objects.equals(this.updatedAt, runRulesSchema.updatedAt) &&
        equalsNullable(this.backfillFrom, runRulesSchema.backfillFrom) &&
        Objects.equals(this._transient, runRulesSchema._transient) &&
        Objects.equals(this.evaluatorVersion, runRulesSchema.evaluatorVersion) &&
        equalsNullable(this.evaluatorId, runRulesSchema.evaluatorId) &&
        equalsNullable(this.alignmentAnnotationQueueId, runRulesSchema.alignmentAnnotationQueueId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tenantId, isEnabled, hashCodeNullable(sessionId), hashCodeNullable(sessionName), hashCodeNullable(datasetId), hashCodeNullable(datasetName), displayName, samplingRate, hashCodeNullable(filter), hashCodeNullable(traceFilter), hashCodeNullable(treeFilter), hashCodeNullable(addToAnnotationQueueId), hashCodeNullable(addToAnnotationQueueName), hashCodeNullable(addToDatasetId), hashCodeNullable(addToDatasetName), addToDatasetPreferCorrection, hashCodeNullable(correctionsDatasetId), useCorrectionsDataset, hashCodeNullable(numFewShotExamples), hashCodeNullable(evaluators), hashCodeNullable(codeEvaluators), hashCodeNullable(alerts), webhooks, extendOnly, includeExtendedStats, createdAt, updatedAt, hashCodeNullable(backfillFrom), _transient, evaluatorVersion, hashCodeNullable(evaluatorId), hashCodeNullable(alignmentAnnotationQueueId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunRulesSchema {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    sessionName: ").append(toIndentedString(sessionName)).append("\n");
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("    datasetName: ").append(toIndentedString(datasetName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    samplingRate: ").append(toIndentedString(samplingRate)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    traceFilter: ").append(toIndentedString(traceFilter)).append("\n");
    sb.append("    treeFilter: ").append(toIndentedString(treeFilter)).append("\n");
    sb.append("    addToAnnotationQueueId: ").append(toIndentedString(addToAnnotationQueueId)).append("\n");
    sb.append("    addToAnnotationQueueName: ").append(toIndentedString(addToAnnotationQueueName)).append("\n");
    sb.append("    addToDatasetId: ").append(toIndentedString(addToDatasetId)).append("\n");
    sb.append("    addToDatasetName: ").append(toIndentedString(addToDatasetName)).append("\n");
    sb.append("    addToDatasetPreferCorrection: ").append(toIndentedString(addToDatasetPreferCorrection)).append("\n");
    sb.append("    correctionsDatasetId: ").append(toIndentedString(correctionsDatasetId)).append("\n");
    sb.append("    useCorrectionsDataset: ").append(toIndentedString(useCorrectionsDataset)).append("\n");
    sb.append("    numFewShotExamples: ").append(toIndentedString(numFewShotExamples)).append("\n");
    sb.append("    evaluators: ").append(toIndentedString(evaluators)).append("\n");
    sb.append("    codeEvaluators: ").append(toIndentedString(codeEvaluators)).append("\n");
    sb.append("    alerts: ").append(toIndentedString(alerts)).append("\n");
    sb.append("    webhooks: ").append(toIndentedString(webhooks)).append("\n");
    sb.append("    extendOnly: ").append(toIndentedString(extendOnly)).append("\n");
    sb.append("    includeExtendedStats: ").append(toIndentedString(includeExtendedStats)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    backfillFrom: ").append(toIndentedString(backfillFrom)).append("\n");
    sb.append("    _transient: ").append(toIndentedString(_transient)).append("\n");
    sb.append("    evaluatorVersion: ").append(toIndentedString(evaluatorVersion)).append("\n");
    sb.append("    evaluatorId: ").append(toIndentedString(evaluatorId)).append("\n");
    sb.append("    alignmentAnnotationQueueId: ").append(toIndentedString(alignmentAnnotationQueueId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `tenant_id` to the URL query string
    if (getTenantId() != null) {
      joiner.add(String.format("%stenant_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTenantId()))));
    }

    // add `is_enabled` to the URL query string
    if (getIsEnabled() != null) {
      joiner.add(String.format("%sis_enabled%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsEnabled()))));
    }

    // add `session_id` to the URL query string
    if (getSessionId() != null) {
      joiner.add(String.format("%ssession_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionId()))));
    }

    // add `session_name` to the URL query string
    if (getSessionName() != null) {
      joiner.add(String.format("%ssession_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionName()))));
    }

    // add `dataset_id` to the URL query string
    if (getDatasetId() != null) {
      joiner.add(String.format("%sdataset_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDatasetId()))));
    }

    // add `dataset_name` to the URL query string
    if (getDatasetName() != null) {
      joiner.add(String.format("%sdataset_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDatasetName()))));
    }

    // add `display_name` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sdisplay_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDisplayName()))));
    }

    // add `sampling_rate` to the URL query string
    if (getSamplingRate() != null) {
      joiner.add(String.format("%ssampling_rate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSamplingRate()))));
    }

    // add `filter` to the URL query string
    if (getFilter() != null) {
      joiner.add(String.format("%sfilter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFilter()))));
    }

    // add `trace_filter` to the URL query string
    if (getTraceFilter() != null) {
      joiner.add(String.format("%strace_filter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTraceFilter()))));
    }

    // add `tree_filter` to the URL query string
    if (getTreeFilter() != null) {
      joiner.add(String.format("%stree_filter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTreeFilter()))));
    }

    // add `add_to_annotation_queue_id` to the URL query string
    if (getAddToAnnotationQueueId() != null) {
      joiner.add(String.format("%sadd_to_annotation_queue_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAddToAnnotationQueueId()))));
    }

    // add `add_to_annotation_queue_name` to the URL query string
    if (getAddToAnnotationQueueName() != null) {
      joiner.add(String.format("%sadd_to_annotation_queue_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAddToAnnotationQueueName()))));
    }

    // add `add_to_dataset_id` to the URL query string
    if (getAddToDatasetId() != null) {
      joiner.add(String.format("%sadd_to_dataset_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAddToDatasetId()))));
    }

    // add `add_to_dataset_name` to the URL query string
    if (getAddToDatasetName() != null) {
      joiner.add(String.format("%sadd_to_dataset_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAddToDatasetName()))));
    }

    // add `add_to_dataset_prefer_correction` to the URL query string
    if (getAddToDatasetPreferCorrection() != null) {
      joiner.add(String.format("%sadd_to_dataset_prefer_correction%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAddToDatasetPreferCorrection()))));
    }

    // add `corrections_dataset_id` to the URL query string
    if (getCorrectionsDatasetId() != null) {
      joiner.add(String.format("%scorrections_dataset_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCorrectionsDatasetId()))));
    }

    // add `use_corrections_dataset` to the URL query string
    if (getUseCorrectionsDataset() != null) {
      joiner.add(String.format("%suse_corrections_dataset%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUseCorrectionsDataset()))));
    }

    // add `num_few_shot_examples` to the URL query string
    if (getNumFewShotExamples() != null) {
      joiner.add(String.format("%snum_few_shot_examples%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNumFewShotExamples()))));
    }

    // add `evaluators` to the URL query string
    if (getEvaluators() != null) {
      for (int i = 0; i < getEvaluators().size(); i++) {
        if (getEvaluators().get(i) != null) {
          joiner.add(getEvaluators().get(i).toUrlQueryString(String.format("%sevaluators%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `code_evaluators` to the URL query string
    if (getCodeEvaluators() != null) {
      for (int i = 0; i < getCodeEvaluators().size(); i++) {
        if (getCodeEvaluators().get(i) != null) {
          joiner.add(getCodeEvaluators().get(i).toUrlQueryString(String.format("%scode_evaluators%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `alerts` to the URL query string
    if (getAlerts() != null) {
      for (int i = 0; i < getAlerts().size(); i++) {
        if (getAlerts().get(i) != null) {
          joiner.add(getAlerts().get(i).toUrlQueryString(String.format("%salerts%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `webhooks` to the URL query string
    if (getWebhooks() != null) {
      for (int i = 0; i < getWebhooks().size(); i++) {
        if (getWebhooks().get(i) != null) {
          joiner.add(getWebhooks().get(i).toUrlQueryString(String.format("%swebhooks%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `extend_only` to the URL query string
    if (getExtendOnly() != null) {
      joiner.add(String.format("%sextend_only%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExtendOnly()))));
    }

    // add `include_extended_stats` to the URL query string
    if (getIncludeExtendedStats() != null) {
      joiner.add(String.format("%sinclude_extended_stats%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIncludeExtendedStats()))));
    }

    // add `created_at` to the URL query string
    if (getCreatedAt() != null) {
      joiner.add(String.format("%screated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
    }

    // add `updated_at` to the URL query string
    if (getUpdatedAt() != null) {
      joiner.add(String.format("%supdated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUpdatedAt()))));
    }

    // add `backfill_from` to the URL query string
    if (getBackfillFrom() != null) {
      joiner.add(String.format("%sbackfill_from%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getBackfillFrom()))));
    }

    // add `transient` to the URL query string
    if (getTransient() != null) {
      joiner.add(String.format("%stransient%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTransient()))));
    }

    // add `evaluator_version` to the URL query string
    if (getEvaluatorVersion() != null) {
      joiner.add(String.format("%sevaluator_version%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEvaluatorVersion()))));
    }

    // add `evaluator_id` to the URL query string
    if (getEvaluatorId() != null) {
      joiner.add(String.format("%sevaluator_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEvaluatorId()))));
    }

    // add `alignment_annotation_queue_id` to the URL query string
    if (getAlignmentAnnotationQueueId() != null) {
      joiner.add(String.format("%salignment_annotation_queue_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAlignmentAnnotationQueueId()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private RunRulesSchema instance;

    public Builder() {
      this(new RunRulesSchema());
    }

    protected Builder(RunRulesSchema instance) {
      this.instance = instance;
    }

    public RunRulesSchema.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public RunRulesSchema.Builder tenantId(UUID tenantId) {
      this.instance.tenantId = tenantId;
      return this;
    }
    public RunRulesSchema.Builder isEnabled(Boolean isEnabled) {
      this.instance.isEnabled = isEnabled;
      return this;
    }
    public RunRulesSchema.Builder sessionId(UUID sessionId) {
      this.instance.sessionId = JsonNullable.<UUID>of(sessionId);
      return this;
    }
    public RunRulesSchema.Builder sessionId(JsonNullable<UUID> sessionId) {
      this.instance.sessionId = sessionId;
      return this;
    }
    public RunRulesSchema.Builder sessionName(String sessionName) {
      this.instance.sessionName = JsonNullable.<String>of(sessionName);
      return this;
    }
    public RunRulesSchema.Builder sessionName(JsonNullable<String> sessionName) {
      this.instance.sessionName = sessionName;
      return this;
    }
    public RunRulesSchema.Builder datasetId(UUID datasetId) {
      this.instance.datasetId = JsonNullable.<UUID>of(datasetId);
      return this;
    }
    public RunRulesSchema.Builder datasetId(JsonNullable<UUID> datasetId) {
      this.instance.datasetId = datasetId;
      return this;
    }
    public RunRulesSchema.Builder datasetName(String datasetName) {
      this.instance.datasetName = JsonNullable.<String>of(datasetName);
      return this;
    }
    public RunRulesSchema.Builder datasetName(JsonNullable<String> datasetName) {
      this.instance.datasetName = datasetName;
      return this;
    }
    public RunRulesSchema.Builder displayName(String displayName) {
      this.instance.displayName = displayName;
      return this;
    }
    public RunRulesSchema.Builder samplingRate(BigDecimal samplingRate) {
      this.instance.samplingRate = samplingRate;
      return this;
    }
    public RunRulesSchema.Builder filter(String filter) {
      this.instance.filter = JsonNullable.<String>of(filter);
      return this;
    }
    public RunRulesSchema.Builder filter(JsonNullable<String> filter) {
      this.instance.filter = filter;
      return this;
    }
    public RunRulesSchema.Builder traceFilter(String traceFilter) {
      this.instance.traceFilter = JsonNullable.<String>of(traceFilter);
      return this;
    }
    public RunRulesSchema.Builder traceFilter(JsonNullable<String> traceFilter) {
      this.instance.traceFilter = traceFilter;
      return this;
    }
    public RunRulesSchema.Builder treeFilter(String treeFilter) {
      this.instance.treeFilter = JsonNullable.<String>of(treeFilter);
      return this;
    }
    public RunRulesSchema.Builder treeFilter(JsonNullable<String> treeFilter) {
      this.instance.treeFilter = treeFilter;
      return this;
    }
    public RunRulesSchema.Builder addToAnnotationQueueId(UUID addToAnnotationQueueId) {
      this.instance.addToAnnotationQueueId = JsonNullable.<UUID>of(addToAnnotationQueueId);
      return this;
    }
    public RunRulesSchema.Builder addToAnnotationQueueId(JsonNullable<UUID> addToAnnotationQueueId) {
      this.instance.addToAnnotationQueueId = addToAnnotationQueueId;
      return this;
    }
    public RunRulesSchema.Builder addToAnnotationQueueName(String addToAnnotationQueueName) {
      this.instance.addToAnnotationQueueName = JsonNullable.<String>of(addToAnnotationQueueName);
      return this;
    }
    public RunRulesSchema.Builder addToAnnotationQueueName(JsonNullable<String> addToAnnotationQueueName) {
      this.instance.addToAnnotationQueueName = addToAnnotationQueueName;
      return this;
    }
    public RunRulesSchema.Builder addToDatasetId(UUID addToDatasetId) {
      this.instance.addToDatasetId = JsonNullable.<UUID>of(addToDatasetId);
      return this;
    }
    public RunRulesSchema.Builder addToDatasetId(JsonNullable<UUID> addToDatasetId) {
      this.instance.addToDatasetId = addToDatasetId;
      return this;
    }
    public RunRulesSchema.Builder addToDatasetName(String addToDatasetName) {
      this.instance.addToDatasetName = JsonNullable.<String>of(addToDatasetName);
      return this;
    }
    public RunRulesSchema.Builder addToDatasetName(JsonNullable<String> addToDatasetName) {
      this.instance.addToDatasetName = addToDatasetName;
      return this;
    }
    public RunRulesSchema.Builder addToDatasetPreferCorrection(Boolean addToDatasetPreferCorrection) {
      this.instance.addToDatasetPreferCorrection = addToDatasetPreferCorrection;
      return this;
    }
    public RunRulesSchema.Builder correctionsDatasetId(UUID correctionsDatasetId) {
      this.instance.correctionsDatasetId = JsonNullable.<UUID>of(correctionsDatasetId);
      return this;
    }
    public RunRulesSchema.Builder correctionsDatasetId(JsonNullable<UUID> correctionsDatasetId) {
      this.instance.correctionsDatasetId = correctionsDatasetId;
      return this;
    }
    public RunRulesSchema.Builder useCorrectionsDataset(Boolean useCorrectionsDataset) {
      this.instance.useCorrectionsDataset = useCorrectionsDataset;
      return this;
    }
    public RunRulesSchema.Builder numFewShotExamples(Integer numFewShotExamples) {
      this.instance.numFewShotExamples = JsonNullable.<Integer>of(numFewShotExamples);
      return this;
    }
    public RunRulesSchema.Builder numFewShotExamples(JsonNullable<Integer> numFewShotExamples) {
      this.instance.numFewShotExamples = numFewShotExamples;
      return this;
    }
    public RunRulesSchema.Builder evaluators(List<EvaluatorTopLevel> evaluators) {
      this.instance.evaluators = JsonNullable.<List<EvaluatorTopLevel>>of(evaluators);
      return this;
    }
    public RunRulesSchema.Builder evaluators(JsonNullable<List<EvaluatorTopLevel>> evaluators) {
      this.instance.evaluators = evaluators;
      return this;
    }
    public RunRulesSchema.Builder codeEvaluators(List<CodeEvaluatorTopLevel> codeEvaluators) {
      this.instance.codeEvaluators = JsonNullable.<List<CodeEvaluatorTopLevel>>of(codeEvaluators);
      return this;
    }
    public RunRulesSchema.Builder codeEvaluators(JsonNullable<List<CodeEvaluatorTopLevel>> codeEvaluators) {
      this.instance.codeEvaluators = codeEvaluators;
      return this;
    }
    public RunRulesSchema.Builder alerts(List<RunRulesPagerdutyAlertSchema> alerts) {
      this.instance.alerts = JsonNullable.<List<RunRulesPagerdutyAlertSchema>>of(alerts);
      return this;
    }
    public RunRulesSchema.Builder alerts(JsonNullable<List<RunRulesPagerdutyAlertSchema>> alerts) {
      this.instance.alerts = alerts;
      return this;
    }
    public RunRulesSchema.Builder webhooks(List<RunRulesWebhookSchema> webhooks) {
      this.instance.webhooks = webhooks;
      return this;
    }
    public RunRulesSchema.Builder extendOnly(Boolean extendOnly) {
      this.instance.extendOnly = extendOnly;
      return this;
    }
    public RunRulesSchema.Builder includeExtendedStats(Boolean includeExtendedStats) {
      this.instance.includeExtendedStats = includeExtendedStats;
      return this;
    }
    public RunRulesSchema.Builder createdAt(OffsetDateTime createdAt) {
      this.instance.createdAt = createdAt;
      return this;
    }
    public RunRulesSchema.Builder updatedAt(OffsetDateTime updatedAt) {
      this.instance.updatedAt = updatedAt;
      return this;
    }
    public RunRulesSchema.Builder backfillFrom(OffsetDateTime backfillFrom) {
      this.instance.backfillFrom = JsonNullable.<OffsetDateTime>of(backfillFrom);
      return this;
    }
    public RunRulesSchema.Builder backfillFrom(JsonNullable<OffsetDateTime> backfillFrom) {
      this.instance.backfillFrom = backfillFrom;
      return this;
    }
    public RunRulesSchema.Builder _transient(Boolean _transient) {
      this.instance._transient = _transient;
      return this;
    }
    public RunRulesSchema.Builder evaluatorVersion(Integer evaluatorVersion) {
      this.instance.evaluatorVersion = evaluatorVersion;
      return this;
    }
    public RunRulesSchema.Builder evaluatorId(UUID evaluatorId) {
      this.instance.evaluatorId = JsonNullable.<UUID>of(evaluatorId);
      return this;
    }
    public RunRulesSchema.Builder evaluatorId(JsonNullable<UUID> evaluatorId) {
      this.instance.evaluatorId = evaluatorId;
      return this;
    }
    public RunRulesSchema.Builder alignmentAnnotationQueueId(UUID alignmentAnnotationQueueId) {
      this.instance.alignmentAnnotationQueueId = JsonNullable.<UUID>of(alignmentAnnotationQueueId);
      return this;
    }
    public RunRulesSchema.Builder alignmentAnnotationQueueId(JsonNullable<UUID> alignmentAnnotationQueueId) {
      this.instance.alignmentAnnotationQueueId = alignmentAnnotationQueueId;
      return this;
    }


    /**
    * returns a built RunRulesSchema instance.
    *
    * The builder is not reusable.
    */
    public RunRulesSchema build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static RunRulesSchema.Builder builder() {
    return new RunRulesSchema.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public RunRulesSchema.Builder toBuilder() {
    return new RunRulesSchema.Builder()
      .id(getId())
      .tenantId(getTenantId())
      .isEnabled(getIsEnabled())
      .sessionId(getSessionId())
      .sessionName(getSessionName())
      .datasetId(getDatasetId())
      .datasetName(getDatasetName())
      .displayName(getDisplayName())
      .samplingRate(getSamplingRate())
      .filter(getFilter())
      .traceFilter(getTraceFilter())
      .treeFilter(getTreeFilter())
      .addToAnnotationQueueId(getAddToAnnotationQueueId())
      .addToAnnotationQueueName(getAddToAnnotationQueueName())
      .addToDatasetId(getAddToDatasetId())
      .addToDatasetName(getAddToDatasetName())
      .addToDatasetPreferCorrection(getAddToDatasetPreferCorrection())
      .correctionsDatasetId(getCorrectionsDatasetId())
      .useCorrectionsDataset(getUseCorrectionsDataset())
      .numFewShotExamples(getNumFewShotExamples())
      .evaluators(getEvaluators())
      .codeEvaluators(getCodeEvaluators())
      .alerts(getAlerts())
      .webhooks(getWebhooks())
      .extendOnly(getExtendOnly())
      .includeExtendedStats(getIncludeExtendedStats())
      .createdAt(getCreatedAt())
      .updatedAt(getUpdatedAt())
      .backfillFrom(getBackfillFrom())
      ._transient(getTransient())
      .evaluatorVersion(getEvaluatorVersion())
      .evaluatorId(getEvaluatorId())
      .alignmentAnnotationQueueId(getAlignmentAnnotationQueueId());
  }

}

