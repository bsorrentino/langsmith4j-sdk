/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * TenantShareRunToken
 */
@JsonPropertyOrder({
  TenantShareRunToken.JSON_PROPERTY_TYPE,
  TenantShareRunToken.JSON_PROPERTY_SHARE_TOKEN,
  TenantShareRunToken.JSON_PROPERTY_CREATED_AT,
  TenantShareRunToken.JSON_PROPERTY_RUN_ID,
  TenantShareRunToken.JSON_PROPERTY_RUN_NAME,
  TenantShareRunToken.JSON_PROPERTY_RUN_TYPE,
  TenantShareRunToken.JSON_PROPERTY_SESSION_ID,
  TenantShareRunToken.JSON_PROPERTY_SESSION_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class TenantShareRunToken {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    RUN(String.valueOf("run"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private TypeEnum type;

  public static final String JSON_PROPERTY_SHARE_TOKEN = "share_token";
  @javax.annotation.Nonnull
  private String shareToken;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @javax.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_RUN_ID = "run_id";
  @javax.annotation.Nonnull
  private UUID runId;

  public static final String JSON_PROPERTY_RUN_NAME = "run_name";
  private JsonNullable<String> runName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RUN_TYPE = "run_type";
  private JsonNullable<String> runType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SESSION_ID = "session_id";
  private JsonNullable<UUID> sessionId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_SESSION_NAME = "session_name";
  private JsonNullable<String> sessionName = JsonNullable.<String>undefined();

  public TenantShareRunToken() { 
  }

  public TenantShareRunToken type(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
  }


  public TenantShareRunToken shareToken(@javax.annotation.Nonnull String shareToken) {
    this.shareToken = shareToken;
    return this;
  }

  /**
   * Get shareToken
   * @return shareToken
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHARE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getShareToken() {
    return shareToken;
  }


  @JsonProperty(JSON_PROPERTY_SHARE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShareToken(@javax.annotation.Nonnull String shareToken) {
    this.shareToken = shareToken;
  }


  public TenantShareRunToken createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public TenantShareRunToken runId(@javax.annotation.Nonnull UUID runId) {
    this.runId = runId;
    return this;
  }

  /**
   * Get runId
   * @return runId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getRunId() {
    return runId;
  }


  @JsonProperty(JSON_PROPERTY_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRunId(@javax.annotation.Nonnull UUID runId) {
    this.runId = runId;
  }


  public TenantShareRunToken runName(@javax.annotation.Nullable String runName) {
    this.runName = JsonNullable.<String>of(runName);
    return this;
  }

  /**
   * Get runName
   * @return runName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getRunName() {
        return runName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RUN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRunName_JsonNullable() {
    return runName;
  }
  
  @JsonProperty(JSON_PROPERTY_RUN_NAME)
  public void setRunName_JsonNullable(JsonNullable<String> runName) {
    this.runName = runName;
  }

  public void setRunName(@javax.annotation.Nullable String runName) {
    this.runName = JsonNullable.<String>of(runName);
  }


  public TenantShareRunToken runType(@javax.annotation.Nullable String runType) {
    this.runType = JsonNullable.<String>of(runType);
    return this;
  }

  /**
   * Get runType
   * @return runType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getRunType() {
        return runType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRunType_JsonNullable() {
    return runType;
  }
  
  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  public void setRunType_JsonNullable(JsonNullable<String> runType) {
    this.runType = runType;
  }

  public void setRunType(@javax.annotation.Nullable String runType) {
    this.runType = JsonNullable.<String>of(runType);
  }


  public TenantShareRunToken sessionId(@javax.annotation.Nullable UUID sessionId) {
    this.sessionId = JsonNullable.<UUID>of(sessionId);
    return this;
  }

  /**
   * Get sessionId
   * @return sessionId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getSessionId() {
        return sessionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getSessionId_JsonNullable() {
    return sessionId;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  public void setSessionId_JsonNullable(JsonNullable<UUID> sessionId) {
    this.sessionId = sessionId;
  }

  public void setSessionId(@javax.annotation.Nullable UUID sessionId) {
    this.sessionId = JsonNullable.<UUID>of(sessionId);
  }


  public TenantShareRunToken sessionName(@javax.annotation.Nullable String sessionName) {
    this.sessionName = JsonNullable.<String>of(sessionName);
    return this;
  }

  /**
   * Get sessionName
   * @return sessionName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSessionName() {
        return sessionName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSessionName_JsonNullable() {
    return sessionName;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_NAME)
  public void setSessionName_JsonNullable(JsonNullable<String> sessionName) {
    this.sessionName = sessionName;
  }

  public void setSessionName(@javax.annotation.Nullable String sessionName) {
    this.sessionName = JsonNullable.<String>of(sessionName);
  }


  /**
   * Return true if this TenantShareRunToken object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TenantShareRunToken tenantShareRunToken = (TenantShareRunToken) o;
    return Objects.equals(this.type, tenantShareRunToken.type) &&
        Objects.equals(this.shareToken, tenantShareRunToken.shareToken) &&
        Objects.equals(this.createdAt, tenantShareRunToken.createdAt) &&
        Objects.equals(this.runId, tenantShareRunToken.runId) &&
        equalsNullable(this.runName, tenantShareRunToken.runName) &&
        equalsNullable(this.runType, tenantShareRunToken.runType) &&
        equalsNullable(this.sessionId, tenantShareRunToken.sessionId) &&
        equalsNullable(this.sessionName, tenantShareRunToken.sessionName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, shareToken, createdAt, runId, hashCodeNullable(runName), hashCodeNullable(runType), hashCodeNullable(sessionId), hashCodeNullable(sessionName));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TenantShareRunToken {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    shareToken: ").append(toIndentedString(shareToken)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
    sb.append("    runName: ").append(toIndentedString(runName)).append("\n");
    sb.append("    runType: ").append(toIndentedString(runType)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    sessionName: ").append(toIndentedString(sessionName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `share_token` to the URL query string
    if (getShareToken() != null) {
      joiner.add(String.format("%sshare_token%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getShareToken()))));
    }

    // add `created_at` to the URL query string
    if (getCreatedAt() != null) {
      joiner.add(String.format("%screated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
    }

    // add `run_id` to the URL query string
    if (getRunId() != null) {
      joiner.add(String.format("%srun_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRunId()))));
    }

    // add `run_name` to the URL query string
    if (getRunName() != null) {
      joiner.add(String.format("%srun_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRunName()))));
    }

    // add `run_type` to the URL query string
    if (getRunType() != null) {
      joiner.add(String.format("%srun_type%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRunType()))));
    }

    // add `session_id` to the URL query string
    if (getSessionId() != null) {
      joiner.add(String.format("%ssession_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionId()))));
    }

    // add `session_name` to the URL query string
    if (getSessionName() != null) {
      joiner.add(String.format("%ssession_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionName()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private TenantShareRunToken instance;

    public Builder() {
      this(new TenantShareRunToken());
    }

    protected Builder(TenantShareRunToken instance) {
      this.instance = instance;
    }

    public TenantShareRunToken.Builder type(TypeEnum type) {
      this.instance.type = type;
      return this;
    }
    public TenantShareRunToken.Builder shareToken(String shareToken) {
      this.instance.shareToken = shareToken;
      return this;
    }
    public TenantShareRunToken.Builder createdAt(OffsetDateTime createdAt) {
      this.instance.createdAt = createdAt;
      return this;
    }
    public TenantShareRunToken.Builder runId(UUID runId) {
      this.instance.runId = runId;
      return this;
    }
    public TenantShareRunToken.Builder runName(String runName) {
      this.instance.runName = JsonNullable.<String>of(runName);
      return this;
    }
    public TenantShareRunToken.Builder runName(JsonNullable<String> runName) {
      this.instance.runName = runName;
      return this;
    }
    public TenantShareRunToken.Builder runType(String runType) {
      this.instance.runType = JsonNullable.<String>of(runType);
      return this;
    }
    public TenantShareRunToken.Builder runType(JsonNullable<String> runType) {
      this.instance.runType = runType;
      return this;
    }
    public TenantShareRunToken.Builder sessionId(UUID sessionId) {
      this.instance.sessionId = JsonNullable.<UUID>of(sessionId);
      return this;
    }
    public TenantShareRunToken.Builder sessionId(JsonNullable<UUID> sessionId) {
      this.instance.sessionId = sessionId;
      return this;
    }
    public TenantShareRunToken.Builder sessionName(String sessionName) {
      this.instance.sessionName = JsonNullable.<String>of(sessionName);
      return this;
    }
    public TenantShareRunToken.Builder sessionName(JsonNullable<String> sessionName) {
      this.instance.sessionName = sessionName;
      return this;
    }


    /**
    * returns a built TenantShareRunToken instance.
    *
    * The builder is not reusable.
    */
    public TenantShareRunToken build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static TenantShareRunToken.Builder builder() {
    return new TenantShareRunToken.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public TenantShareRunToken.Builder toBuilder() {
    return new TenantShareRunToken.Builder()
      .type(getType())
      .shareToken(getShareToken())
      .createdAt(getCreatedAt())
      .runId(getRunId())
      .runName(getRunName())
      .runType(getRunType())
      .sessionId(getSessionId())
      .sessionName(getSessionName());
  }

}

