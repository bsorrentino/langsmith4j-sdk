/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import com.fasterxml.jackson.annotation.*;
import org.bsc.langgraph4j.langsmith.gen.ApiClient;

import java.util.*;
/**
 * RunsRun
 */
@JsonPropertyOrder({
  RunsRun.JSON_PROPERTY_DOTTED_ORDER,
  RunsRun.JSON_PROPERTY_END_TIME,
  RunsRun.JSON_PROPERTY_ERROR,
  RunsRun.JSON_PROPERTY_EVENTS,
  RunsRun.JSON_PROPERTY_EXTRA,
  RunsRun.JSON_PROPERTY_ID,
  RunsRun.JSON_PROPERTY_INPUT_ATTACHMENTS,
  RunsRun.JSON_PROPERTY_INPUTS,
  RunsRun.JSON_PROPERTY_NAME,
  RunsRun.JSON_PROPERTY_OUTPUT_ATTACHMENTS,
  RunsRun.JSON_PROPERTY_OUTPUTS,
  RunsRun.JSON_PROPERTY_PARENT_RUN_ID,
  RunsRun.JSON_PROPERTY_REFERENCE_EXAMPLE_ID,
  RunsRun.JSON_PROPERTY_RUN_TYPE,
  RunsRun.JSON_PROPERTY_SERIALIZED,
  RunsRun.JSON_PROPERTY_SESSION_ID,
  RunsRun.JSON_PROPERTY_SESSION_NAME,
  RunsRun.JSON_PROPERTY_START_TIME,
  RunsRun.JSON_PROPERTY_STATUS,
  RunsRun.JSON_PROPERTY_TAGS,
  RunsRun.JSON_PROPERTY_TRACE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class RunsRun {
  public static final String JSON_PROPERTY_DOTTED_ORDER = "dotted_order";
  @javax.annotation.Nullable
  private String dottedOrder;

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  @javax.annotation.Nullable
  private String endTime;

  public static final String JSON_PROPERTY_ERROR = "error";
  @javax.annotation.Nullable
  private String error;

  public static final String JSON_PROPERTY_EVENTS = "events";
  @javax.annotation.Nullable
  private List<Map<String, Object>> events = new ArrayList<>();

  public static final String JSON_PROPERTY_EXTRA = "extra";
  @javax.annotation.Nullable
  private Map<String, Object> extra = new HashMap<>();

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_INPUT_ATTACHMENTS = "input_attachments";
  @javax.annotation.Nullable
  private Map<String, Object> inputAttachments = new HashMap<>();

  public static final String JSON_PROPERTY_INPUTS = "inputs";
  @javax.annotation.Nullable
  private Map<String, Object> inputs = new HashMap<>();

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_OUTPUT_ATTACHMENTS = "output_attachments";
  @javax.annotation.Nullable
  private Map<String, Object> outputAttachments = new HashMap<>();

  public static final String JSON_PROPERTY_OUTPUTS = "outputs";
  @javax.annotation.Nullable
  private Map<String, Object> outputs = new HashMap<>();

  public static final String JSON_PROPERTY_PARENT_RUN_ID = "parent_run_id";
  @javax.annotation.Nullable
  private String parentRunId;

  public static final String JSON_PROPERTY_REFERENCE_EXAMPLE_ID = "reference_example_id";
  @javax.annotation.Nullable
  private String referenceExampleId;

  /**
   * Gets or Sets runType
   */
  public enum RunTypeEnum {
    TOOL(String.valueOf("tool")),
    
    CHAIN(String.valueOf("chain")),
    
    LLM(String.valueOf("llm")),
    
    RETRIEVER(String.valueOf("retriever")),
    
    EMBEDDING(String.valueOf("embedding")),
    
    PROMPT(String.valueOf("prompt")),
    
    PARSER(String.valueOf("parser"));

    private String value;

    RunTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RunTypeEnum fromValue(String value) {
      for (RunTypeEnum b : RunTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RUN_TYPE = "run_type";
  @javax.annotation.Nullable
  private RunTypeEnum runType;

  public static final String JSON_PROPERTY_SERIALIZED = "serialized";
  @javax.annotation.Nullable
  private Map<String, Object> serialized = new HashMap<>();

  public static final String JSON_PROPERTY_SESSION_ID = "session_id";
  @javax.annotation.Nullable
  private String sessionId;

  public static final String JSON_PROPERTY_SESSION_NAME = "session_name";
  @javax.annotation.Nullable
  private String sessionName;

  public static final String JSON_PROPERTY_START_TIME = "start_time";
  @javax.annotation.Nullable
  private String startTime;

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nullable
  private String status;

  public static final String JSON_PROPERTY_TAGS = "tags";
  @javax.annotation.Nullable
  private List<String> tags = new ArrayList<>();

  public static final String JSON_PROPERTY_TRACE_ID = "trace_id";
  @javax.annotation.Nullable
  private String traceId;

  public RunsRun() { 
  }

  public RunsRun dottedOrder(@javax.annotation.Nullable String dottedOrder) {
    this.dottedOrder = dottedOrder;
    return this;
  }

  /**
   * Get dottedOrder
   * @return dottedOrder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOTTED_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDottedOrder() {
    return dottedOrder;
  }


  @JsonProperty(JSON_PROPERTY_DOTTED_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDottedOrder(@javax.annotation.Nullable String dottedOrder) {
    this.dottedOrder = dottedOrder;
  }


  public RunsRun endTime(@javax.annotation.Nullable String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(@javax.annotation.Nullable String endTime) {
    this.endTime = endTime;
  }


  public RunsRun error(@javax.annotation.Nullable String error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(@javax.annotation.Nullable String error) {
    this.error = error;
  }


  public RunsRun events(@javax.annotation.Nullable List<Map<String, Object>> events) {
    this.events = events;
    return this;
  }

  public RunsRun addEventsItem(Map<String, Object> eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<>();
    }
    this.events.add(eventsItem);
    return this;
  }

  /**
   * Get events
   * @return events
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Map<String, Object>> getEvents() {
    return events;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvents(@javax.annotation.Nullable List<Map<String, Object>> events) {
    this.events = events;
  }


  public RunsRun extra(@javax.annotation.Nullable Map<String, Object> extra) {
    this.extra = extra;
    return this;
  }

  public RunsRun putExtraItem(String key, Object extraItem) {
    if (this.extra == null) {
      this.extra = new HashMap<>();
    }
    this.extra.put(key, extraItem);
    return this;
  }

  /**
   * Get extra
   * @return extra
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, Object> getExtra() {
    return extra;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtra(@javax.annotation.Nullable Map<String, Object> extra) {
    this.extra = extra;
  }


  public RunsRun id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public RunsRun inputAttachments(@javax.annotation.Nullable Map<String, Object> inputAttachments) {
    this.inputAttachments = inputAttachments;
    return this;
  }

  public RunsRun putInputAttachmentsItem(String key, Object inputAttachmentsItem) {
    if (this.inputAttachments == null) {
      this.inputAttachments = new HashMap<>();
    }
    this.inputAttachments.put(key, inputAttachmentsItem);
    return this;
  }

  /**
   * Get inputAttachments
   * @return inputAttachments
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT_ATTACHMENTS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, Object> getInputAttachments() {
    return inputAttachments;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_ATTACHMENTS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputAttachments(@javax.annotation.Nullable Map<String, Object> inputAttachments) {
    this.inputAttachments = inputAttachments;
  }


  public RunsRun inputs(@javax.annotation.Nullable Map<String, Object> inputs) {
    this.inputs = inputs;
    return this;
  }

  public RunsRun putInputsItem(String key, Object inputsItem) {
    if (this.inputs == null) {
      this.inputs = new HashMap<>();
    }
    this.inputs.put(key, inputsItem);
    return this;
  }

  /**
   * Get inputs
   * @return inputs
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUTS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, Object> getInputs() {
    return inputs;
  }


  @JsonProperty(JSON_PROPERTY_INPUTS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputs(@javax.annotation.Nullable Map<String, Object> inputs) {
    this.inputs = inputs;
  }


  public RunsRun name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public RunsRun outputAttachments(@javax.annotation.Nullable Map<String, Object> outputAttachments) {
    this.outputAttachments = outputAttachments;
    return this;
  }

  public RunsRun putOutputAttachmentsItem(String key, Object outputAttachmentsItem) {
    if (this.outputAttachments == null) {
      this.outputAttachments = new HashMap<>();
    }
    this.outputAttachments.put(key, outputAttachmentsItem);
    return this;
  }

  /**
   * Get outputAttachments
   * @return outputAttachments
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUT_ATTACHMENTS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, Object> getOutputAttachments() {
    return outputAttachments;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_ATTACHMENTS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputAttachments(@javax.annotation.Nullable Map<String, Object> outputAttachments) {
    this.outputAttachments = outputAttachments;
  }


  public RunsRun outputs(@javax.annotation.Nullable Map<String, Object> outputs) {
    this.outputs = outputs;
    return this;
  }

  public RunsRun putOutputsItem(String key, Object outputsItem) {
    if (this.outputs == null) {
      this.outputs = new HashMap<>();
    }
    this.outputs.put(key, outputsItem);
    return this;
  }

  /**
   * Get outputs
   * @return outputs
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, Object> getOutputs() {
    return outputs;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputs(@javax.annotation.Nullable Map<String, Object> outputs) {
    this.outputs = outputs;
  }


  public RunsRun parentRunId(@javax.annotation.Nullable String parentRunId) {
    this.parentRunId = parentRunId;
    return this;
  }

  /**
   * Get parentRunId
   * @return parentRunId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getParentRunId() {
    return parentRunId;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentRunId(@javax.annotation.Nullable String parentRunId) {
    this.parentRunId = parentRunId;
  }


  public RunsRun referenceExampleId(@javax.annotation.Nullable String referenceExampleId) {
    this.referenceExampleId = referenceExampleId;
    return this;
  }

  /**
   * Get referenceExampleId
   * @return referenceExampleId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE_EXAMPLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getReferenceExampleId() {
    return referenceExampleId;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_EXAMPLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceExampleId(@javax.annotation.Nullable String referenceExampleId) {
    this.referenceExampleId = referenceExampleId;
  }


  public RunsRun runType(@javax.annotation.Nullable RunTypeEnum runType) {
    this.runType = runType;
    return this;
  }

  /**
   * Get runType
   * @return runType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public RunTypeEnum getRunType() {
    return runType;
  }


  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRunType(@javax.annotation.Nullable RunTypeEnum runType) {
    this.runType = runType;
  }


  public RunsRun serialized(@javax.annotation.Nullable Map<String, Object> serialized) {
    this.serialized = serialized;
    return this;
  }

  public RunsRun putSerializedItem(String key, Object serializedItem) {
    if (this.serialized == null) {
      this.serialized = new HashMap<>();
    }
    this.serialized.put(key, serializedItem);
    return this;
  }

  /**
   * Get serialized
   * @return serialized
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERIALIZED)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, Object> getSerialized() {
    return serialized;
  }


  @JsonProperty(JSON_PROPERTY_SERIALIZED)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setSerialized(@javax.annotation.Nullable Map<String, Object> serialized) {
    this.serialized = serialized;
  }


  public RunsRun sessionId(@javax.annotation.Nullable String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * Get sessionId
   * @return sessionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSessionId() {
    return sessionId;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionId(@javax.annotation.Nullable String sessionId) {
    this.sessionId = sessionId;
  }


  public RunsRun sessionName(@javax.annotation.Nullable String sessionName) {
    this.sessionName = sessionName;
    return this;
  }

  /**
   * Get sessionName
   * @return sessionName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SESSION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSessionName() {
    return sessionName;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionName(@javax.annotation.Nullable String sessionName) {
    this.sessionName = sessionName;
  }


  public RunsRun startTime(@javax.annotation.Nullable String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(@javax.annotation.Nullable String startTime) {
    this.startTime = startTime;
  }


  public RunsRun status(@javax.annotation.Nullable String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = status;
  }


  public RunsRun tags(@javax.annotation.Nullable List<String> tags) {
    this.tags = tags;
    return this;
  }

  public RunsRun addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(@javax.annotation.Nullable List<String> tags) {
    this.tags = tags;
  }


  public RunsRun traceId(@javax.annotation.Nullable String traceId) {
    this.traceId = traceId;
    return this;
  }

  /**
   * Get traceId
   * @return traceId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTraceId() {
    return traceId;
  }


  @JsonProperty(JSON_PROPERTY_TRACE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTraceId(@javax.annotation.Nullable String traceId) {
    this.traceId = traceId;
  }


  /**
   * Return true if this runs.Run object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunsRun runsRun = (RunsRun) o;
    return Objects.equals(this.dottedOrder, runsRun.dottedOrder) &&
        Objects.equals(this.endTime, runsRun.endTime) &&
        Objects.equals(this.error, runsRun.error) &&
        Objects.equals(this.events, runsRun.events) &&
        Objects.equals(this.extra, runsRun.extra) &&
        Objects.equals(this.id, runsRun.id) &&
        Objects.equals(this.inputAttachments, runsRun.inputAttachments) &&
        Objects.equals(this.inputs, runsRun.inputs) &&
        Objects.equals(this.name, runsRun.name) &&
        Objects.equals(this.outputAttachments, runsRun.outputAttachments) &&
        Objects.equals(this.outputs, runsRun.outputs) &&
        Objects.equals(this.parentRunId, runsRun.parentRunId) &&
        Objects.equals(this.referenceExampleId, runsRun.referenceExampleId) &&
        Objects.equals(this.runType, runsRun.runType) &&
        Objects.equals(this.serialized, runsRun.serialized) &&
        Objects.equals(this.sessionId, runsRun.sessionId) &&
        Objects.equals(this.sessionName, runsRun.sessionName) &&
        Objects.equals(this.startTime, runsRun.startTime) &&
        Objects.equals(this.status, runsRun.status) &&
        Objects.equals(this.tags, runsRun.tags) &&
        Objects.equals(this.traceId, runsRun.traceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dottedOrder, endTime, error, events, extra, id, inputAttachments, inputs, name, outputAttachments, outputs, parentRunId, referenceExampleId, runType, serialized, sessionId, sessionName, startTime, status, tags, traceId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunsRun {\n");
    sb.append("    dottedOrder: ").append(toIndentedString(dottedOrder)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inputAttachments: ").append(toIndentedString(inputAttachments)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    outputAttachments: ").append(toIndentedString(outputAttachments)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    parentRunId: ").append(toIndentedString(parentRunId)).append("\n");
    sb.append("    referenceExampleId: ").append(toIndentedString(referenceExampleId)).append("\n");
    sb.append("    runType: ").append(toIndentedString(runType)).append("\n");
    sb.append("    serialized: ").append(toIndentedString(serialized)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    sessionName: ").append(toIndentedString(sessionName)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    traceId: ").append(toIndentedString(traceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `dotted_order` to the URL query string
    if (getDottedOrder() != null) {
      joiner.add(String.format("%sdotted_order%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDottedOrder()))));
    }

    // add `end_time` to the URL query string
    if (getEndTime() != null) {
      joiner.add(String.format("%send_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEndTime()))));
    }

    // add `error` to the URL query string
    if (getError() != null) {
      joiner.add(String.format("%serror%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getError()))));
    }

    // add `events` to the URL query string
    if (getEvents() != null) {
      for (int i = 0; i < getEvents().size(); i++) {
        joiner.add(String.format("%sevents%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getEvents().get(i)))));
      }
    }

    // add `extra` to the URL query string
    if (getExtra() != null) {
      for (String _key : getExtra().keySet()) {
        joiner.add(String.format("%sextra%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getExtra().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getExtra().get(_key)))));
      }
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `input_attachments` to the URL query string
    if (getInputAttachments() != null) {
      for (String _key : getInputAttachments().keySet()) {
        joiner.add(String.format("%sinput_attachments%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getInputAttachments().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getInputAttachments().get(_key)))));
      }
    }

    // add `inputs` to the URL query string
    if (getInputs() != null) {
      for (String _key : getInputs().keySet()) {
        joiner.add(String.format("%sinputs%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getInputs().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getInputs().get(_key)))));
      }
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `output_attachments` to the URL query string
    if (getOutputAttachments() != null) {
      for (String _key : getOutputAttachments().keySet()) {
        joiner.add(String.format("%soutput_attachments%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getOutputAttachments().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getOutputAttachments().get(_key)))));
      }
    }

    // add `outputs` to the URL query string
    if (getOutputs() != null) {
      for (String _key : getOutputs().keySet()) {
        joiner.add(String.format("%soutputs%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getOutputs().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getOutputs().get(_key)))));
      }
    }

    // add `parent_run_id` to the URL query string
    if (getParentRunId() != null) {
      joiner.add(String.format("%sparent_run_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentRunId()))));
    }

    // add `reference_example_id` to the URL query string
    if (getReferenceExampleId() != null) {
      joiner.add(String.format("%sreference_example_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getReferenceExampleId()))));
    }

    // add `run_type` to the URL query string
    if (getRunType() != null) {
      joiner.add(String.format("%srun_type%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRunType()))));
    }

    // add `serialized` to the URL query string
    if (getSerialized() != null) {
      for (String _key : getSerialized().keySet()) {
        joiner.add(String.format("%sserialized%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getSerialized().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getSerialized().get(_key)))));
      }
    }

    // add `session_id` to the URL query string
    if (getSessionId() != null) {
      joiner.add(String.format("%ssession_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionId()))));
    }

    // add `session_name` to the URL query string
    if (getSessionName() != null) {
      joiner.add(String.format("%ssession_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionName()))));
    }

    // add `start_time` to the URL query string
    if (getStartTime() != null) {
      joiner.add(String.format("%sstart_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStartTime()))));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
    }

    // add `tags` to the URL query string
    if (getTags() != null) {
      for (int i = 0; i < getTags().size(); i++) {
        joiner.add(String.format("%stags%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getTags().get(i)))));
      }
    }

    // add `trace_id` to the URL query string
    if (getTraceId() != null) {
      joiner.add(String.format("%strace_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTraceId()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private RunsRun instance;

    public Builder() {
      this(new RunsRun());
    }

    protected Builder(RunsRun instance) {
      this.instance = instance;
    }

    public RunsRun.Builder dottedOrder(String dottedOrder) {
      this.instance.dottedOrder = dottedOrder;
      return this;
    }
    public RunsRun.Builder endTime(String endTime) {
      this.instance.endTime = endTime;
      return this;
    }
    public RunsRun.Builder error(String error) {
      this.instance.error = error;
      return this;
    }
    public RunsRun.Builder events(List<Map<String, Object>> events) {
      this.instance.events = events;
      return this;
    }
    public RunsRun.Builder extra(Map<String, Object> extra) {
      this.instance.extra = extra;
      return this;
    }
    public RunsRun.Builder id(String id) {
      this.instance.id = id;
      return this;
    }
    public RunsRun.Builder inputAttachments(Map<String, Object> inputAttachments) {
      this.instance.inputAttachments = inputAttachments;
      return this;
    }
    public RunsRun.Builder inputs(Map<String, Object> inputs) {
      this.instance.inputs = inputs;
      return this;
    }
    public RunsRun.Builder name(String name) {
      this.instance.name = name;
      return this;
    }
    public RunsRun.Builder outputAttachments(Map<String, Object> outputAttachments) {
      this.instance.outputAttachments = outputAttachments;
      return this;
    }
    public RunsRun.Builder outputs(Map<String, Object> outputs) {
      this.instance.outputs = outputs;
      return this;
    }
    public RunsRun.Builder parentRunId(String parentRunId) {
      this.instance.parentRunId = parentRunId;
      return this;
    }
    public RunsRun.Builder referenceExampleId(String referenceExampleId) {
      this.instance.referenceExampleId = referenceExampleId;
      return this;
    }
    public RunsRun.Builder runType(RunTypeEnum runType) {
      this.instance.runType = runType;
      return this;
    }
    public RunsRun.Builder serialized(Map<String, Object> serialized) {
      this.instance.serialized = serialized;
      return this;
    }
    public RunsRun.Builder sessionId(String sessionId) {
      this.instance.sessionId = sessionId;
      return this;
    }
    public RunsRun.Builder sessionName(String sessionName) {
      this.instance.sessionName = sessionName;
      return this;
    }
    public RunsRun.Builder startTime(String startTime) {
      this.instance.startTime = startTime;
      return this;
    }
    public RunsRun.Builder status(String status) {
      this.instance.status = status;
      return this;
    }
    public RunsRun.Builder tags(List<String> tags) {
      this.instance.tags = tags;
      return this;
    }
    public RunsRun.Builder traceId(String traceId) {
      this.instance.traceId = traceId;
      return this;
    }


    /**
    * returns a built RunsRun instance.
    *
    * The builder is not reusable.
    */
    public RunsRun build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static RunsRun.Builder builder() {
    return new RunsRun.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public RunsRun.Builder toBuilder() {
    return new RunsRun.Builder()
      .dottedOrder(getDottedOrder())
      .endTime(getEndTime())
      .error(getError())
      .events(getEvents())
      .extra(getExtra())
      .id(getId())
      .inputAttachments(getInputAttachments())
      .inputs(getInputs())
      .name(getName())
      .outputAttachments(getOutputAttachments())
      .outputs(getOutputs())
      .parentRunId(getParentRunId())
      .referenceExampleId(getReferenceExampleId())
      .runType(getRunType())
      .serialized(getSerialized())
      .sessionId(getSessionId())
      .sessionName(getSessionName())
      .startTime(getStartTime())
      .status(getStatus())
      .tags(getTags())
      .traceId(getTraceId());
  }

}

