/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.bsc.langgraph4j.langsmith.gen.model.AccessScope;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * PermissionResponse
 */
@JsonPropertyOrder({
  PermissionResponse.JSON_PROPERTY_NAME,
  PermissionResponse.JSON_PROPERTY_DESCRIPTION,
  PermissionResponse.JSON_PROPERTY_ACCESS_SCOPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class PermissionResponse {
  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nonnull
  private String description;

  public static final String JSON_PROPERTY_ACCESS_SCOPE = "access_scope";
  @javax.annotation.Nonnull
  private AccessScope accessScope;

  public PermissionResponse() { 
  }

  public PermissionResponse name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public PermissionResponse description(@javax.annotation.Nonnull String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(@javax.annotation.Nonnull String description) {
    this.description = description;
  }


  public PermissionResponse accessScope(@javax.annotation.Nonnull AccessScope accessScope) {
    this.accessScope = accessScope;
    return this;
  }

  /**
   * Get accessScope
   * @return accessScope
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCESS_SCOPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public AccessScope getAccessScope() {
    return accessScope;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_SCOPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccessScope(@javax.annotation.Nonnull AccessScope accessScope) {
    this.accessScope = accessScope;
  }


  /**
   * Return true if this PermissionResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PermissionResponse permissionResponse = (PermissionResponse) o;
    return Objects.equals(this.name, permissionResponse.name) &&
        Objects.equals(this.description, permissionResponse.description) &&
        Objects.equals(this.accessScope, permissionResponse.accessScope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, accessScope);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PermissionResponse {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    accessScope: ").append(toIndentedString(accessScope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDescription()))));
    }

    // add `access_scope` to the URL query string
    if (getAccessScope() != null) {
      joiner.add(String.format("%saccess_scope%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAccessScope()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private PermissionResponse instance;

    public Builder() {
      this(new PermissionResponse());
    }

    protected Builder(PermissionResponse instance) {
      this.instance = instance;
    }

    public PermissionResponse.Builder name(String name) {
      this.instance.name = name;
      return this;
    }
    public PermissionResponse.Builder description(String description) {
      this.instance.description = description;
      return this;
    }
    public PermissionResponse.Builder accessScope(AccessScope accessScope) {
      this.instance.accessScope = accessScope;
      return this;
    }


    /**
    * returns a built PermissionResponse instance.
    *
    * The builder is not reusable.
    */
    public PermissionResponse build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static PermissionResponse.Builder builder() {
    return new PermissionResponse.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public PermissionResponse.Builder toBuilder() {
    return new PermissionResponse.Builder()
      .name(getName())
      .description(getDescription())
      .accessScope(getAccessScope());
  }

}

