/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * AnnotationQueueRubricItemSchema
 */
@JsonPropertyOrder({
  AnnotationQueueRubricItemSchema.JSON_PROPERTY_FEEDBACK_KEY,
  AnnotationQueueRubricItemSchema.JSON_PROPERTY_DESCRIPTION,
  AnnotationQueueRubricItemSchema.JSON_PROPERTY_VALUE_DESCRIPTIONS,
  AnnotationQueueRubricItemSchema.JSON_PROPERTY_SCORE_DESCRIPTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class AnnotationQueueRubricItemSchema {
  public static final String JSON_PROPERTY_FEEDBACK_KEY = "feedback_key";
  @javax.annotation.Nonnull
  private String feedbackKey;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VALUE_DESCRIPTIONS = "value_descriptions";
  private JsonNullable<Map<String, String>> valueDescriptions = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_SCORE_DESCRIPTIONS = "score_descriptions";
  private JsonNullable<Map<String, String>> scoreDescriptions = JsonNullable.<Map<String, String>>undefined();

  public AnnotationQueueRubricItemSchema() { 
  }

  public AnnotationQueueRubricItemSchema feedbackKey(@javax.annotation.Nonnull String feedbackKey) {
    this.feedbackKey = feedbackKey;
    return this;
  }

  /**
   * Get feedbackKey
   * @return feedbackKey
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FEEDBACK_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getFeedbackKey() {
    return feedbackKey;
  }


  @JsonProperty(JSON_PROPERTY_FEEDBACK_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFeedbackKey(@javax.annotation.Nonnull String feedbackKey) {
    this.feedbackKey = feedbackKey;
  }


  public AnnotationQueueRubricItemSchema description(@javax.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public AnnotationQueueRubricItemSchema valueDescriptions(@javax.annotation.Nullable Map<String, String> valueDescriptions) {
    this.valueDescriptions = JsonNullable.<Map<String, String>>of(valueDescriptions);
    return this;
  }

  public AnnotationQueueRubricItemSchema putValueDescriptionsItem(String key, String valueDescriptionsItem) {
    if (this.valueDescriptions == null || !this.valueDescriptions.isPresent()) {
      this.valueDescriptions = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.valueDescriptions.get().put(key, valueDescriptionsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get valueDescriptions
   * @return valueDescriptions
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, String> getValueDescriptions() {
        return valueDescriptions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VALUE_DESCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getValueDescriptions_JsonNullable() {
    return valueDescriptions;
  }
  
  @JsonProperty(JSON_PROPERTY_VALUE_DESCRIPTIONS)
  public void setValueDescriptions_JsonNullable(JsonNullable<Map<String, String>> valueDescriptions) {
    this.valueDescriptions = valueDescriptions;
  }

  public void setValueDescriptions(@javax.annotation.Nullable Map<String, String> valueDescriptions) {
    this.valueDescriptions = JsonNullable.<Map<String, String>>of(valueDescriptions);
  }


  public AnnotationQueueRubricItemSchema scoreDescriptions(@javax.annotation.Nullable Map<String, String> scoreDescriptions) {
    this.scoreDescriptions = JsonNullable.<Map<String, String>>of(scoreDescriptions);
    return this;
  }

  public AnnotationQueueRubricItemSchema putScoreDescriptionsItem(String key, String scoreDescriptionsItem) {
    if (this.scoreDescriptions == null || !this.scoreDescriptions.isPresent()) {
      this.scoreDescriptions = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.scoreDescriptions.get().put(key, scoreDescriptionsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get scoreDescriptions
   * @return scoreDescriptions
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, String> getScoreDescriptions() {
        return scoreDescriptions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCORE_DESCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getScoreDescriptions_JsonNullable() {
    return scoreDescriptions;
  }
  
  @JsonProperty(JSON_PROPERTY_SCORE_DESCRIPTIONS)
  public void setScoreDescriptions_JsonNullable(JsonNullable<Map<String, String>> scoreDescriptions) {
    this.scoreDescriptions = scoreDescriptions;
  }

  public void setScoreDescriptions(@javax.annotation.Nullable Map<String, String> scoreDescriptions) {
    this.scoreDescriptions = JsonNullable.<Map<String, String>>of(scoreDescriptions);
  }


  /**
   * Return true if this AnnotationQueueRubricItemSchema object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnnotationQueueRubricItemSchema annotationQueueRubricItemSchema = (AnnotationQueueRubricItemSchema) o;
    return Objects.equals(this.feedbackKey, annotationQueueRubricItemSchema.feedbackKey) &&
        equalsNullable(this.description, annotationQueueRubricItemSchema.description) &&
        equalsNullable(this.valueDescriptions, annotationQueueRubricItemSchema.valueDescriptions) &&
        equalsNullable(this.scoreDescriptions, annotationQueueRubricItemSchema.scoreDescriptions);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(feedbackKey, hashCodeNullable(description), hashCodeNullable(valueDescriptions), hashCodeNullable(scoreDescriptions));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnnotationQueueRubricItemSchema {\n");
    sb.append("    feedbackKey: ").append(toIndentedString(feedbackKey)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    valueDescriptions: ").append(toIndentedString(valueDescriptions)).append("\n");
    sb.append("    scoreDescriptions: ").append(toIndentedString(scoreDescriptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `feedback_key` to the URL query string
    if (getFeedbackKey() != null) {
      joiner.add(String.format("%sfeedback_key%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFeedbackKey()))));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDescription()))));
    }

    // add `value_descriptions` to the URL query string
    if (getValueDescriptions() != null) {
      for (String _key : getValueDescriptions().keySet()) {
        joiner.add(String.format("%svalue_descriptions%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getValueDescriptions().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getValueDescriptions().get(_key)))));
      }
    }

    // add `score_descriptions` to the URL query string
    if (getScoreDescriptions() != null) {
      for (String _key : getScoreDescriptions().keySet()) {
        joiner.add(String.format("%sscore_descriptions%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getScoreDescriptions().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getScoreDescriptions().get(_key)))));
      }
    }

    return joiner.toString();
  }

    public static class Builder {

    private AnnotationQueueRubricItemSchema instance;

    public Builder() {
      this(new AnnotationQueueRubricItemSchema());
    }

    protected Builder(AnnotationQueueRubricItemSchema instance) {
      this.instance = instance;
    }

    public AnnotationQueueRubricItemSchema.Builder feedbackKey(String feedbackKey) {
      this.instance.feedbackKey = feedbackKey;
      return this;
    }
    public AnnotationQueueRubricItemSchema.Builder description(String description) {
      this.instance.description = JsonNullable.<String>of(description);
      return this;
    }
    public AnnotationQueueRubricItemSchema.Builder description(JsonNullable<String> description) {
      this.instance.description = description;
      return this;
    }
    public AnnotationQueueRubricItemSchema.Builder valueDescriptions(Map<String, String> valueDescriptions) {
      this.instance.valueDescriptions = JsonNullable.<Map<String, String>>of(valueDescriptions);
      return this;
    }
    public AnnotationQueueRubricItemSchema.Builder valueDescriptions(JsonNullable<Map<String, String>> valueDescriptions) {
      this.instance.valueDescriptions = valueDescriptions;
      return this;
    }
    public AnnotationQueueRubricItemSchema.Builder scoreDescriptions(Map<String, String> scoreDescriptions) {
      this.instance.scoreDescriptions = JsonNullable.<Map<String, String>>of(scoreDescriptions);
      return this;
    }
    public AnnotationQueueRubricItemSchema.Builder scoreDescriptions(JsonNullable<Map<String, String>> scoreDescriptions) {
      this.instance.scoreDescriptions = scoreDescriptions;
      return this;
    }


    /**
    * returns a built AnnotationQueueRubricItemSchema instance.
    *
    * The builder is not reusable.
    */
    public AnnotationQueueRubricItemSchema build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static AnnotationQueueRubricItemSchema.Builder builder() {
    return new AnnotationQueueRubricItemSchema.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public AnnotationQueueRubricItemSchema.Builder toBuilder() {
    return new AnnotationQueueRubricItemSchema.Builder()
      .feedbackKey(getFeedbackKey())
      .description(getDescription())
      .valueDescriptions(getValueDescriptions())
      .scoreDescriptions(getScoreDescriptions());
  }

}

