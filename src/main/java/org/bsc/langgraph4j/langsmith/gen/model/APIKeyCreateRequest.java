/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * API key POST schema.  expires_at: Optional datetime when the API key will expire. workspaces: List of workspace UUIDs this key can access (feature-flagged). role_id: Optional UUID of the role to assign to API key.     If not provided, uses default role based on read_only flag:     - WORKSPACE_ADMIN if read_only is False     - WORKSPACE_READER if read_only is True
 */
@JsonPropertyOrder({
  APIKeyCreateRequest.JSON_PROPERTY_DESCRIPTION,
  APIKeyCreateRequest.JSON_PROPERTY_READ_ONLY,
  APIKeyCreateRequest.JSON_PROPERTY_EXPIRES_AT,
  APIKeyCreateRequest.JSON_PROPERTY_WORKSPACES,
  APIKeyCreateRequest.JSON_PROPERTY_ROLE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class APIKeyCreateRequest {
  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description = "Default API key";

  public static final String JSON_PROPERTY_READ_ONLY = "read_only";
  @javax.annotation.Nullable
  private Boolean readOnly = false;

  public static final String JSON_PROPERTY_EXPIRES_AT = "expires_at";
  private JsonNullable<OffsetDateTime> expiresAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_WORKSPACES = "workspaces";
  private JsonNullable<List<UUID>> workspaces = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_ROLE_ID = "role_id";
  private JsonNullable<UUID> roleId = JsonNullable.<UUID>undefined();

  public APIKeyCreateRequest() { 
  }

  public APIKeyCreateRequest description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public APIKeyCreateRequest readOnly(@javax.annotation.Nullable Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

  /**
   * Get readOnly
   * @return readOnly
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getReadOnly() {
    return readOnly;
  }


  @JsonProperty(JSON_PROPERTY_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReadOnly(@javax.annotation.Nullable Boolean readOnly) {
    this.readOnly = readOnly;
  }


  public APIKeyCreateRequest expiresAt(@javax.annotation.Nullable OffsetDateTime expiresAt) {
    this.expiresAt = JsonNullable.<OffsetDateTime>of(expiresAt);
    return this;
  }

  /**
   * Get expiresAt
   * @return expiresAt
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getExpiresAt() {
        return expiresAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getExpiresAt_JsonNullable() {
    return expiresAt;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  public void setExpiresAt_JsonNullable(JsonNullable<OffsetDateTime> expiresAt) {
    this.expiresAt = expiresAt;
  }

  public void setExpiresAt(@javax.annotation.Nullable OffsetDateTime expiresAt) {
    this.expiresAt = JsonNullable.<OffsetDateTime>of(expiresAt);
  }


  public APIKeyCreateRequest workspaces(@javax.annotation.Nullable List<UUID> workspaces) {
    this.workspaces = JsonNullable.<List<UUID>>of(workspaces);
    return this;
  }

  public APIKeyCreateRequest addWorkspacesItem(UUID workspacesItem) {
    if (this.workspaces == null || !this.workspaces.isPresent()) {
      this.workspaces = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.workspaces.get().add(workspacesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get workspaces
   * @return workspaces
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getWorkspaces() {
        return workspaces.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORKSPACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getWorkspaces_JsonNullable() {
    return workspaces;
  }
  
  @JsonProperty(JSON_PROPERTY_WORKSPACES)
  public void setWorkspaces_JsonNullable(JsonNullable<List<UUID>> workspaces) {
    this.workspaces = workspaces;
  }

  public void setWorkspaces(@javax.annotation.Nullable List<UUID> workspaces) {
    this.workspaces = JsonNullable.<List<UUID>>of(workspaces);
  }


  public APIKeyCreateRequest roleId(@javax.annotation.Nullable UUID roleId) {
    this.roleId = JsonNullable.<UUID>of(roleId);
    return this;
  }

  /**
   * Get roleId
   * @return roleId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getRoleId() {
        return roleId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getRoleId_JsonNullable() {
    return roleId;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE_ID)
  public void setRoleId_JsonNullable(JsonNullable<UUID> roleId) {
    this.roleId = roleId;
  }

  public void setRoleId(@javax.annotation.Nullable UUID roleId) {
    this.roleId = JsonNullable.<UUID>of(roleId);
  }


  /**
   * Return true if this APIKeyCreateRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIKeyCreateRequest apIKeyCreateRequest = (APIKeyCreateRequest) o;
    return Objects.equals(this.description, apIKeyCreateRequest.description) &&
        Objects.equals(this.readOnly, apIKeyCreateRequest.readOnly) &&
        equalsNullable(this.expiresAt, apIKeyCreateRequest.expiresAt) &&
        equalsNullable(this.workspaces, apIKeyCreateRequest.workspaces) &&
        equalsNullable(this.roleId, apIKeyCreateRequest.roleId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, readOnly, hashCodeNullable(expiresAt), hashCodeNullable(workspaces), hashCodeNullable(roleId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIKeyCreateRequest {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    workspaces: ").append(toIndentedString(workspaces)).append("\n");
    sb.append("    roleId: ").append(toIndentedString(roleId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDescription()))));
    }

    // add `read_only` to the URL query string
    if (getReadOnly() != null) {
      joiner.add(String.format("%sread_only%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getReadOnly()))));
    }

    // add `expires_at` to the URL query string
    if (getExpiresAt() != null) {
      joiner.add(String.format("%sexpires_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExpiresAt()))));
    }

    // add `workspaces` to the URL query string
    if (getWorkspaces() != null) {
      for (int i = 0; i < getWorkspaces().size(); i++) {
        if (getWorkspaces().get(i) != null) {
          joiner.add(String.format("%sworkspaces%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getWorkspaces().get(i)))));
        }
      }
    }

    // add `role_id` to the URL query string
    if (getRoleId() != null) {
      joiner.add(String.format("%srole_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRoleId()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private APIKeyCreateRequest instance;

    public Builder() {
      this(new APIKeyCreateRequest());
    }

    protected Builder(APIKeyCreateRequest instance) {
      this.instance = instance;
    }

    public APIKeyCreateRequest.Builder description(String description) {
      this.instance.description = description;
      return this;
    }
    public APIKeyCreateRequest.Builder readOnly(Boolean readOnly) {
      this.instance.readOnly = readOnly;
      return this;
    }
    public APIKeyCreateRequest.Builder expiresAt(OffsetDateTime expiresAt) {
      this.instance.expiresAt = JsonNullable.<OffsetDateTime>of(expiresAt);
      return this;
    }
    public APIKeyCreateRequest.Builder expiresAt(JsonNullable<OffsetDateTime> expiresAt) {
      this.instance.expiresAt = expiresAt;
      return this;
    }
    public APIKeyCreateRequest.Builder workspaces(List<UUID> workspaces) {
      this.instance.workspaces = JsonNullable.<List<UUID>>of(workspaces);
      return this;
    }
    public APIKeyCreateRequest.Builder workspaces(JsonNullable<List<UUID>> workspaces) {
      this.instance.workspaces = workspaces;
      return this;
    }
    public APIKeyCreateRequest.Builder roleId(UUID roleId) {
      this.instance.roleId = JsonNullable.<UUID>of(roleId);
      return this;
    }
    public APIKeyCreateRequest.Builder roleId(JsonNullable<UUID> roleId) {
      this.instance.roleId = roleId;
      return this;
    }


    /**
    * returns a built APIKeyCreateRequest instance.
    *
    * The builder is not reusable.
    */
    public APIKeyCreateRequest build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static APIKeyCreateRequest.Builder builder() {
    return new APIKeyCreateRequest.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public APIKeyCreateRequest.Builder toBuilder() {
    return new APIKeyCreateRequest.Builder()
      .description(getDescription())
      .readOnly(getReadOnly())
      .expiresAt(getExpiresAt())
      .workspaces(getWorkspaces())
      .roleId(getRoleId());
  }

}

