/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.bsc.langgraph4j.langsmith.gen.model.RunsGenerateQueryFeedbackKeys;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * RequestBodyForRunsGenerateQuery
 */
@JsonPropertyOrder({
  RequestBodyForRunsGenerateQuery.JSON_PROPERTY_QUERY,
  RequestBodyForRunsGenerateQuery.JSON_PROPERTY_FEEDBACK_KEYS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class RequestBodyForRunsGenerateQuery {
  public static final String JSON_PROPERTY_QUERY = "query";
  @javax.annotation.Nonnull
  private String query;

  public static final String JSON_PROPERTY_FEEDBACK_KEYS = "feedback_keys";
  @javax.annotation.Nullable
  private List<RunsGenerateQueryFeedbackKeys> feedbackKeys = new ArrayList<>();

  public RequestBodyForRunsGenerateQuery() { 
  }

  public RequestBodyForRunsGenerateQuery query(@javax.annotation.Nonnull String query) {
    this.query = query;
    return this;
  }

  /**
   * Get query
   * @return query
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getQuery() {
    return query;
  }


  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuery(@javax.annotation.Nonnull String query) {
    this.query = query;
  }


  public RequestBodyForRunsGenerateQuery feedbackKeys(@javax.annotation.Nullable List<RunsGenerateQueryFeedbackKeys> feedbackKeys) {
    this.feedbackKeys = feedbackKeys;
    return this;
  }

  public RequestBodyForRunsGenerateQuery addFeedbackKeysItem(RunsGenerateQueryFeedbackKeys feedbackKeysItem) {
    if (this.feedbackKeys == null) {
      this.feedbackKeys = new ArrayList<>();
    }
    this.feedbackKeys.add(feedbackKeysItem);
    return this;
  }

  /**
   * Get feedbackKeys
   * @return feedbackKeys
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEEDBACK_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<RunsGenerateQueryFeedbackKeys> getFeedbackKeys() {
    return feedbackKeys;
  }


  @JsonProperty(JSON_PROPERTY_FEEDBACK_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeedbackKeys(@javax.annotation.Nullable List<RunsGenerateQueryFeedbackKeys> feedbackKeys) {
    this.feedbackKeys = feedbackKeys;
  }


  /**
   * Return true if this RequestBodyForRunsGenerateQuery object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestBodyForRunsGenerateQuery requestBodyForRunsGenerateQuery = (RequestBodyForRunsGenerateQuery) o;
    return Objects.equals(this.query, requestBodyForRunsGenerateQuery.query) &&
        Objects.equals(this.feedbackKeys, requestBodyForRunsGenerateQuery.feedbackKeys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(query, feedbackKeys);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestBodyForRunsGenerateQuery {\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    feedbackKeys: ").append(toIndentedString(feedbackKeys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `query` to the URL query string
    if (getQuery() != null) {
      joiner.add(String.format("%squery%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getQuery()))));
    }

    // add `feedback_keys` to the URL query string
    if (getFeedbackKeys() != null) {
      for (int i = 0; i < getFeedbackKeys().size(); i++) {
        if (getFeedbackKeys().get(i) != null) {
          joiner.add(String.format("%sfeedback_keys%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getFeedbackKeys().get(i)))));
        }
      }
    }

    return joiner.toString();
  }

    public static class Builder {

    private RequestBodyForRunsGenerateQuery instance;

    public Builder() {
      this(new RequestBodyForRunsGenerateQuery());
    }

    protected Builder(RequestBodyForRunsGenerateQuery instance) {
      this.instance = instance;
    }

    public RequestBodyForRunsGenerateQuery.Builder query(String query) {
      this.instance.query = query;
      return this;
    }
    public RequestBodyForRunsGenerateQuery.Builder feedbackKeys(List<RunsGenerateQueryFeedbackKeys> feedbackKeys) {
      this.instance.feedbackKeys = feedbackKeys;
      return this;
    }


    /**
    * returns a built RequestBodyForRunsGenerateQuery instance.
    *
    * The builder is not reusable.
    */
    public RequestBodyForRunsGenerateQuery build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static RequestBodyForRunsGenerateQuery.Builder builder() {
    return new RequestBodyForRunsGenerateQuery.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public RequestBodyForRunsGenerateQuery.Builder toBuilder() {
    return new RequestBodyForRunsGenerateQuery.Builder()
      .query(getQuery())
      .feedbackKeys(getFeedbackKeys());
  }

}

