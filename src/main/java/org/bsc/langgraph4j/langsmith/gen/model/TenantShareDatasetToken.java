/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * TenantShareDatasetToken
 */
@JsonPropertyOrder({
  TenantShareDatasetToken.JSON_PROPERTY_TYPE,
  TenantShareDatasetToken.JSON_PROPERTY_SHARE_TOKEN,
  TenantShareDatasetToken.JSON_PROPERTY_CREATED_AT,
  TenantShareDatasetToken.JSON_PROPERTY_DATASET_ID,
  TenantShareDatasetToken.JSON_PROPERTY_DATASET_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class TenantShareDatasetToken {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    DATASET(String.valueOf("dataset"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private TypeEnum type;

  public static final String JSON_PROPERTY_SHARE_TOKEN = "share_token";
  @javax.annotation.Nonnull
  private String shareToken;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @javax.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_DATASET_ID = "dataset_id";
  @javax.annotation.Nonnull
  private UUID datasetId;

  public static final String JSON_PROPERTY_DATASET_NAME = "dataset_name";
  private JsonNullable<String> datasetName = JsonNullable.<String>undefined();

  public TenantShareDatasetToken() { 
  }

  public TenantShareDatasetToken type(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
  }


  public TenantShareDatasetToken shareToken(@javax.annotation.Nonnull String shareToken) {
    this.shareToken = shareToken;
    return this;
  }

  /**
   * Get shareToken
   * @return shareToken
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHARE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getShareToken() {
    return shareToken;
  }


  @JsonProperty(JSON_PROPERTY_SHARE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShareToken(@javax.annotation.Nonnull String shareToken) {
    this.shareToken = shareToken;
  }


  public TenantShareDatasetToken createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public TenantShareDatasetToken datasetId(@javax.annotation.Nonnull UUID datasetId) {
    this.datasetId = datasetId;
    return this;
  }

  /**
   * Get datasetId
   * @return datasetId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getDatasetId() {
    return datasetId;
  }


  @JsonProperty(JSON_PROPERTY_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDatasetId(@javax.annotation.Nonnull UUID datasetId) {
    this.datasetId = datasetId;
  }


  public TenantShareDatasetToken datasetName(@javax.annotation.Nullable String datasetName) {
    this.datasetName = JsonNullable.<String>of(datasetName);
    return this;
  }

  /**
   * Get datasetName
   * @return datasetName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDatasetName() {
        return datasetName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATASET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDatasetName_JsonNullable() {
    return datasetName;
  }
  
  @JsonProperty(JSON_PROPERTY_DATASET_NAME)
  public void setDatasetName_JsonNullable(JsonNullable<String> datasetName) {
    this.datasetName = datasetName;
  }

  public void setDatasetName(@javax.annotation.Nullable String datasetName) {
    this.datasetName = JsonNullable.<String>of(datasetName);
  }


  /**
   * Return true if this TenantShareDatasetToken object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TenantShareDatasetToken tenantShareDatasetToken = (TenantShareDatasetToken) o;
    return Objects.equals(this.type, tenantShareDatasetToken.type) &&
        Objects.equals(this.shareToken, tenantShareDatasetToken.shareToken) &&
        Objects.equals(this.createdAt, tenantShareDatasetToken.createdAt) &&
        Objects.equals(this.datasetId, tenantShareDatasetToken.datasetId) &&
        equalsNullable(this.datasetName, tenantShareDatasetToken.datasetName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, shareToken, createdAt, datasetId, hashCodeNullable(datasetName));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TenantShareDatasetToken {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    shareToken: ").append(toIndentedString(shareToken)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("    datasetName: ").append(toIndentedString(datasetName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `share_token` to the URL query string
    if (getShareToken() != null) {
      joiner.add(String.format("%sshare_token%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getShareToken()))));
    }

    // add `created_at` to the URL query string
    if (getCreatedAt() != null) {
      joiner.add(String.format("%screated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
    }

    // add `dataset_id` to the URL query string
    if (getDatasetId() != null) {
      joiner.add(String.format("%sdataset_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDatasetId()))));
    }

    // add `dataset_name` to the URL query string
    if (getDatasetName() != null) {
      joiner.add(String.format("%sdataset_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDatasetName()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private TenantShareDatasetToken instance;

    public Builder() {
      this(new TenantShareDatasetToken());
    }

    protected Builder(TenantShareDatasetToken instance) {
      this.instance = instance;
    }

    public TenantShareDatasetToken.Builder type(TypeEnum type) {
      this.instance.type = type;
      return this;
    }
    public TenantShareDatasetToken.Builder shareToken(String shareToken) {
      this.instance.shareToken = shareToken;
      return this;
    }
    public TenantShareDatasetToken.Builder createdAt(OffsetDateTime createdAt) {
      this.instance.createdAt = createdAt;
      return this;
    }
    public TenantShareDatasetToken.Builder datasetId(UUID datasetId) {
      this.instance.datasetId = datasetId;
      return this;
    }
    public TenantShareDatasetToken.Builder datasetName(String datasetName) {
      this.instance.datasetName = JsonNullable.<String>of(datasetName);
      return this;
    }
    public TenantShareDatasetToken.Builder datasetName(JsonNullable<String> datasetName) {
      this.instance.datasetName = datasetName;
      return this;
    }


    /**
    * returns a built TenantShareDatasetToken instance.
    *
    * The builder is not reusable.
    */
    public TenantShareDatasetToken build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static TenantShareDatasetToken.Builder builder() {
    return new TenantShareDatasetToken.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public TenantShareDatasetToken.Builder toBuilder() {
    return new TenantShareDatasetToken.Builder()
      .type(getType())
      .shareToken(getShareToken())
      .createdAt(getCreatedAt())
      .datasetId(getDatasetId())
      .datasetName(getDatasetName());
  }

}

