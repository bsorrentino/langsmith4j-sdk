/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.bsc.langgraph4j.langsmith.gen.model.TenantUsageLimitType;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * TenantUsageLimitInfo
 */
@JsonPropertyOrder({
  TenantUsageLimitInfo.JSON_PROPERTY_IN_REJECT_SET,
  TenantUsageLimitInfo.JSON_PROPERTY_USAGE_LIMIT_TYPE,
  TenantUsageLimitInfo.JSON_PROPERTY_TENANT_LIMIT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class TenantUsageLimitInfo {
  public static final String JSON_PROPERTY_IN_REJECT_SET = "in_reject_set";
  @javax.annotation.Nonnull
  private Boolean inRejectSet;

  public static final String JSON_PROPERTY_USAGE_LIMIT_TYPE = "usage_limit_type";
  private JsonNullable<TenantUsageLimitType> usageLimitType = JsonNullable.<TenantUsageLimitType>undefined();

  public static final String JSON_PROPERTY_TENANT_LIMIT = "tenant_limit";
  private JsonNullable<Integer> tenantLimit = JsonNullable.<Integer>undefined();

  public TenantUsageLimitInfo() { 
  }

  public TenantUsageLimitInfo inRejectSet(@javax.annotation.Nonnull Boolean inRejectSet) {
    this.inRejectSet = inRejectSet;
    return this;
  }

  /**
   * Get inRejectSet
   * @return inRejectSet
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IN_REJECT_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getInRejectSet() {
    return inRejectSet;
  }


  @JsonProperty(JSON_PROPERTY_IN_REJECT_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInRejectSet(@javax.annotation.Nonnull Boolean inRejectSet) {
    this.inRejectSet = inRejectSet;
  }


  public TenantUsageLimitInfo usageLimitType(@javax.annotation.Nullable TenantUsageLimitType usageLimitType) {
    this.usageLimitType = JsonNullable.<TenantUsageLimitType>of(usageLimitType);
    return this;
  }

  /**
   * Get usageLimitType
   * @return usageLimitType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public TenantUsageLimitType getUsageLimitType() {
        return usageLimitType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USAGE_LIMIT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TenantUsageLimitType> getUsageLimitType_JsonNullable() {
    return usageLimitType;
  }
  
  @JsonProperty(JSON_PROPERTY_USAGE_LIMIT_TYPE)
  public void setUsageLimitType_JsonNullable(JsonNullable<TenantUsageLimitType> usageLimitType) {
    this.usageLimitType = usageLimitType;
  }

  public void setUsageLimitType(@javax.annotation.Nullable TenantUsageLimitType usageLimitType) {
    this.usageLimitType = JsonNullable.<TenantUsageLimitType>of(usageLimitType);
  }


  public TenantUsageLimitInfo tenantLimit(@javax.annotation.Nullable Integer tenantLimit) {
    this.tenantLimit = JsonNullable.<Integer>of(tenantLimit);
    return this;
  }

  /**
   * Get tenantLimit
   * @return tenantLimit
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getTenantLimit() {
        return tenantLimit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TENANT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTenantLimit_JsonNullable() {
    return tenantLimit;
  }
  
  @JsonProperty(JSON_PROPERTY_TENANT_LIMIT)
  public void setTenantLimit_JsonNullable(JsonNullable<Integer> tenantLimit) {
    this.tenantLimit = tenantLimit;
  }

  public void setTenantLimit(@javax.annotation.Nullable Integer tenantLimit) {
    this.tenantLimit = JsonNullable.<Integer>of(tenantLimit);
  }


  /**
   * Return true if this TenantUsageLimitInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TenantUsageLimitInfo tenantUsageLimitInfo = (TenantUsageLimitInfo) o;
    return Objects.equals(this.inRejectSet, tenantUsageLimitInfo.inRejectSet) &&
        equalsNullable(this.usageLimitType, tenantUsageLimitInfo.usageLimitType) &&
        equalsNullable(this.tenantLimit, tenantUsageLimitInfo.tenantLimit);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(inRejectSet, hashCodeNullable(usageLimitType), hashCodeNullable(tenantLimit));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TenantUsageLimitInfo {\n");
    sb.append("    inRejectSet: ").append(toIndentedString(inRejectSet)).append("\n");
    sb.append("    usageLimitType: ").append(toIndentedString(usageLimitType)).append("\n");
    sb.append("    tenantLimit: ").append(toIndentedString(tenantLimit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `in_reject_set` to the URL query string
    if (getInRejectSet() != null) {
      joiner.add(String.format("%sin_reject_set%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInRejectSet()))));
    }

    // add `usage_limit_type` to the URL query string
    if (getUsageLimitType() != null) {
      joiner.add(String.format("%susage_limit_type%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUsageLimitType()))));
    }

    // add `tenant_limit` to the URL query string
    if (getTenantLimit() != null) {
      joiner.add(String.format("%stenant_limit%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTenantLimit()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private TenantUsageLimitInfo instance;

    public Builder() {
      this(new TenantUsageLimitInfo());
    }

    protected Builder(TenantUsageLimitInfo instance) {
      this.instance = instance;
    }

    public TenantUsageLimitInfo.Builder inRejectSet(Boolean inRejectSet) {
      this.instance.inRejectSet = inRejectSet;
      return this;
    }
    public TenantUsageLimitInfo.Builder usageLimitType(TenantUsageLimitType usageLimitType) {
      this.instance.usageLimitType = JsonNullable.<TenantUsageLimitType>of(usageLimitType);
      return this;
    }
    public TenantUsageLimitInfo.Builder usageLimitType(JsonNullable<TenantUsageLimitType> usageLimitType) {
      this.instance.usageLimitType = usageLimitType;
      return this;
    }
    public TenantUsageLimitInfo.Builder tenantLimit(Integer tenantLimit) {
      this.instance.tenantLimit = JsonNullable.<Integer>of(tenantLimit);
      return this;
    }
    public TenantUsageLimitInfo.Builder tenantLimit(JsonNullable<Integer> tenantLimit) {
      this.instance.tenantLimit = tenantLimit;
      return this;
    }


    /**
    * returns a built TenantUsageLimitInfo instance.
    *
    * The builder is not reusable.
    */
    public TenantUsageLimitInfo build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static TenantUsageLimitInfo.Builder builder() {
    return new TenantUsageLimitInfo.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public TenantUsageLimitInfo.Builder toBuilder() {
    return new TenantUsageLimitInfo.Builder()
      .inRejectSet(getInRejectSet())
      .usageLimitType(getUsageLimitType())
      .tenantLimit(getTenantLimit());
  }

}

