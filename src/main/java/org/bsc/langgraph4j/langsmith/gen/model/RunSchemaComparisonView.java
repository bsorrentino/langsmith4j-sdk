/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.RunTypeEnum;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Run schema for comparison view.
 */
@JsonPropertyOrder({
  RunSchemaComparisonView.JSON_PROPERTY_NAME,
  RunSchemaComparisonView.JSON_PROPERTY_INPUTS,
  RunSchemaComparisonView.JSON_PROPERTY_INPUTS_PREVIEW,
  RunSchemaComparisonView.JSON_PROPERTY_RUN_TYPE,
  RunSchemaComparisonView.JSON_PROPERTY_START_TIME,
  RunSchemaComparisonView.JSON_PROPERTY_END_TIME,
  RunSchemaComparisonView.JSON_PROPERTY_EXTRA,
  RunSchemaComparisonView.JSON_PROPERTY_ERROR,
  RunSchemaComparisonView.JSON_PROPERTY_EXECUTION_ORDER,
  RunSchemaComparisonView.JSON_PROPERTY_SERIALIZED,
  RunSchemaComparisonView.JSON_PROPERTY_OUTPUTS,
  RunSchemaComparisonView.JSON_PROPERTY_OUTPUTS_PREVIEW,
  RunSchemaComparisonView.JSON_PROPERTY_PARENT_RUN_ID,
  RunSchemaComparisonView.JSON_PROPERTY_MANIFEST_ID,
  RunSchemaComparisonView.JSON_PROPERTY_MANIFEST_S3_ID,
  RunSchemaComparisonView.JSON_PROPERTY_EVENTS,
  RunSchemaComparisonView.JSON_PROPERTY_TAGS,
  RunSchemaComparisonView.JSON_PROPERTY_INPUTS_S3_URLS,
  RunSchemaComparisonView.JSON_PROPERTY_OUTPUTS_S3_URLS,
  RunSchemaComparisonView.JSON_PROPERTY_S3_URLS,
  RunSchemaComparisonView.JSON_PROPERTY_TRACE_ID,
  RunSchemaComparisonView.JSON_PROPERTY_DOTTED_ORDER,
  RunSchemaComparisonView.JSON_PROPERTY_ID,
  RunSchemaComparisonView.JSON_PROPERTY_SESSION_ID,
  RunSchemaComparisonView.JSON_PROPERTY_REFERENCE_EXAMPLE_ID,
  RunSchemaComparisonView.JSON_PROPERTY_TOTAL_TOKENS,
  RunSchemaComparisonView.JSON_PROPERTY_PROMPT_TOKENS,
  RunSchemaComparisonView.JSON_PROPERTY_COMPLETION_TOKENS,
  RunSchemaComparisonView.JSON_PROPERTY_TOTAL_COST,
  RunSchemaComparisonView.JSON_PROPERTY_PROMPT_COST,
  RunSchemaComparisonView.JSON_PROPERTY_COMPLETION_COST,
  RunSchemaComparisonView.JSON_PROPERTY_STATUS,
  RunSchemaComparisonView.JSON_PROPERTY_FEEDBACK_STATS,
  RunSchemaComparisonView.JSON_PROPERTY_APP_PATH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class RunSchemaComparisonView {
  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_INPUTS = "inputs";
  private JsonNullable<Object> inputs = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_INPUTS_PREVIEW = "inputs_preview";
  private JsonNullable<String> inputsPreview = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RUN_TYPE = "run_type";
  @javax.annotation.Nonnull
  private RunTypeEnum runType;

  public static final String JSON_PROPERTY_START_TIME = "start_time";
  @javax.annotation.Nullable
  private OffsetDateTime startTime;

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  private JsonNullable<OffsetDateTime> endTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_EXTRA = "extra";
  private JsonNullable<Object> extra = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_ERROR = "error";
  private JsonNullable<String> error = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXECUTION_ORDER = "execution_order";
  @javax.annotation.Nullable
  private Integer executionOrder = 1;

  public static final String JSON_PROPERTY_SERIALIZED = "serialized";
  private JsonNullable<Object> serialized = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_OUTPUTS = "outputs";
  private JsonNullable<Object> outputs = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_OUTPUTS_PREVIEW = "outputs_preview";
  private JsonNullable<String> outputsPreview = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PARENT_RUN_ID = "parent_run_id";
  private JsonNullable<UUID> parentRunId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_MANIFEST_ID = "manifest_id";
  private JsonNullable<UUID> manifestId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_MANIFEST_S3_ID = "manifest_s3_id";
  private JsonNullable<UUID> manifestS3Id = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_EVENTS = "events";
  private JsonNullable<List<Object>> events = JsonNullable.<List<Object>>undefined();

  public static final String JSON_PROPERTY_TAGS = "tags";
  private JsonNullable<List<String>> tags = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_INPUTS_S3_URLS = "inputs_s3_urls";
  private JsonNullable<Object> inputsS3Urls = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_OUTPUTS_S3_URLS = "outputs_s3_urls";
  private JsonNullable<Object> outputsS3Urls = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_S3_URLS = "s3_urls";
  private JsonNullable<Object> s3Urls = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_TRACE_ID = "trace_id";
  @javax.annotation.Nonnull
  private UUID traceId;

  public static final String JSON_PROPERTY_DOTTED_ORDER = "dotted_order";
  private JsonNullable<String> dottedOrder = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_SESSION_ID = "session_id";
  @javax.annotation.Nonnull
  private UUID sessionId;

  public static final String JSON_PROPERTY_REFERENCE_EXAMPLE_ID = "reference_example_id";
  private JsonNullable<UUID> referenceExampleId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TOTAL_TOKENS = "total_tokens";
  private JsonNullable<Integer> totalTokens = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PROMPT_TOKENS = "prompt_tokens";
  private JsonNullable<Integer> promptTokens = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_COMPLETION_TOKENS = "completion_tokens";
  private JsonNullable<Integer> completionTokens = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_TOTAL_COST = "total_cost";
  private JsonNullable<String> totalCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROMPT_COST = "prompt_cost";
  private JsonNullable<String> promptCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMPLETION_COST = "completion_cost";
  private JsonNullable<String> completionCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nonnull
  private String status;

  public static final String JSON_PROPERTY_FEEDBACK_STATS = "feedback_stats";
  private JsonNullable<Map<String, Object>> feedbackStats = JsonNullable.<Map<String, Object>>undefined();

  public static final String JSON_PROPERTY_APP_PATH = "app_path";
  private JsonNullable<String> appPath = JsonNullable.<String>undefined();

  public RunSchemaComparisonView() { 
  }

  public RunSchemaComparisonView name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public RunSchemaComparisonView inputs(@javax.annotation.Nullable Object inputs) {
    this.inputs = JsonNullable.<Object>of(inputs);
    return this;
  }

  /**
   * Get inputs
   * @return inputs
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getInputs() {
        return inputs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getInputs_JsonNullable() {
    return inputs;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUTS)
  public void setInputs_JsonNullable(JsonNullable<Object> inputs) {
    this.inputs = inputs;
  }

  public void setInputs(@javax.annotation.Nullable Object inputs) {
    this.inputs = JsonNullable.<Object>of(inputs);
  }


  public RunSchemaComparisonView inputsPreview(@javax.annotation.Nullable String inputsPreview) {
    this.inputsPreview = JsonNullable.<String>of(inputsPreview);
    return this;
  }

  /**
   * Get inputsPreview
   * @return inputsPreview
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getInputsPreview() {
        return inputsPreview.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUTS_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInputsPreview_JsonNullable() {
    return inputsPreview;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUTS_PREVIEW)
  public void setInputsPreview_JsonNullable(JsonNullable<String> inputsPreview) {
    this.inputsPreview = inputsPreview;
  }

  public void setInputsPreview(@javax.annotation.Nullable String inputsPreview) {
    this.inputsPreview = JsonNullable.<String>of(inputsPreview);
  }


  public RunSchemaComparisonView runType(@javax.annotation.Nonnull RunTypeEnum runType) {
    this.runType = runType;
    return this;
  }

  /**
   * Get runType
   * @return runType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public RunTypeEnum getRunType() {
    return runType;
  }


  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRunType(@javax.annotation.Nonnull RunTypeEnum runType) {
    this.runType = runType;
  }


  public RunSchemaComparisonView startTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public RunSchemaComparisonView endTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getEndTime() {
        return endTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEndTime_JsonNullable() {
    return endTime;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME)
  public void setEndTime_JsonNullable(JsonNullable<OffsetDateTime> endTime) {
    this.endTime = endTime;
  }

  public void setEndTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
  }


  public RunSchemaComparisonView extra(@javax.annotation.Nullable Object extra) {
    this.extra = JsonNullable.<Object>of(extra);
    return this;
  }

  /**
   * Get extra
   * @return extra
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getExtra() {
        return extra.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getExtra_JsonNullable() {
    return extra;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTRA)
  public void setExtra_JsonNullable(JsonNullable<Object> extra) {
    this.extra = extra;
  }

  public void setExtra(@javax.annotation.Nullable Object extra) {
    this.extra = JsonNullable.<Object>of(extra);
  }


  public RunSchemaComparisonView error(@javax.annotation.Nullable String error) {
    this.error = JsonNullable.<String>of(error);
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getError() {
        return error.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getError_JsonNullable() {
    return error;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR)
  public void setError_JsonNullable(JsonNullable<String> error) {
    this.error = error;
  }

  public void setError(@javax.annotation.Nullable String error) {
    this.error = JsonNullable.<String>of(error);
  }


  public RunSchemaComparisonView executionOrder(@javax.annotation.Nullable Integer executionOrder) {
    this.executionOrder = executionOrder;
    return this;
  }

  /**
   * Get executionOrder
   * minimum: 1
   * @return executionOrder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXECUTION_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getExecutionOrder() {
    return executionOrder;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTION_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutionOrder(@javax.annotation.Nullable Integer executionOrder) {
    this.executionOrder = executionOrder;
  }


  public RunSchemaComparisonView serialized(@javax.annotation.Nullable Object serialized) {
    this.serialized = JsonNullable.<Object>of(serialized);
    return this;
  }

  /**
   * Get serialized
   * @return serialized
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getSerialized() {
        return serialized.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIALIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSerialized_JsonNullable() {
    return serialized;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIALIZED)
  public void setSerialized_JsonNullable(JsonNullable<Object> serialized) {
    this.serialized = serialized;
  }

  public void setSerialized(@javax.annotation.Nullable Object serialized) {
    this.serialized = JsonNullable.<Object>of(serialized);
  }


  public RunSchemaComparisonView outputs(@javax.annotation.Nullable Object outputs) {
    this.outputs = JsonNullable.<Object>of(outputs);
    return this;
  }

  /**
   * Get outputs
   * @return outputs
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getOutputs() {
        return outputs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOutputs_JsonNullable() {
    return outputs;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  public void setOutputs_JsonNullable(JsonNullable<Object> outputs) {
    this.outputs = outputs;
  }

  public void setOutputs(@javax.annotation.Nullable Object outputs) {
    this.outputs = JsonNullable.<Object>of(outputs);
  }


  public RunSchemaComparisonView outputsPreview(@javax.annotation.Nullable String outputsPreview) {
    this.outputsPreview = JsonNullable.<String>of(outputsPreview);
    return this;
  }

  /**
   * Get outputsPreview
   * @return outputsPreview
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getOutputsPreview() {
        return outputsPreview.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTPUTS_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOutputsPreview_JsonNullable() {
    return outputsPreview;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTPUTS_PREVIEW)
  public void setOutputsPreview_JsonNullable(JsonNullable<String> outputsPreview) {
    this.outputsPreview = outputsPreview;
  }

  public void setOutputsPreview(@javax.annotation.Nullable String outputsPreview) {
    this.outputsPreview = JsonNullable.<String>of(outputsPreview);
  }


  public RunSchemaComparisonView parentRunId(@javax.annotation.Nullable UUID parentRunId) {
    this.parentRunId = JsonNullable.<UUID>of(parentRunId);
    return this;
  }

  /**
   * Get parentRunId
   * @return parentRunId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getParentRunId() {
        return parentRunId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getParentRunId_JsonNullable() {
    return parentRunId;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_RUN_ID)
  public void setParentRunId_JsonNullable(JsonNullable<UUID> parentRunId) {
    this.parentRunId = parentRunId;
  }

  public void setParentRunId(@javax.annotation.Nullable UUID parentRunId) {
    this.parentRunId = JsonNullable.<UUID>of(parentRunId);
  }


  public RunSchemaComparisonView manifestId(@javax.annotation.Nullable UUID manifestId) {
    this.manifestId = JsonNullable.<UUID>of(manifestId);
    return this;
  }

  /**
   * Get manifestId
   * @return manifestId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getManifestId() {
        return manifestId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MANIFEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getManifestId_JsonNullable() {
    return manifestId;
  }
  
  @JsonProperty(JSON_PROPERTY_MANIFEST_ID)
  public void setManifestId_JsonNullable(JsonNullable<UUID> manifestId) {
    this.manifestId = manifestId;
  }

  public void setManifestId(@javax.annotation.Nullable UUID manifestId) {
    this.manifestId = JsonNullable.<UUID>of(manifestId);
  }


  public RunSchemaComparisonView manifestS3Id(@javax.annotation.Nullable UUID manifestS3Id) {
    this.manifestS3Id = JsonNullable.<UUID>of(manifestS3Id);
    return this;
  }

  /**
   * Get manifestS3Id
   * @return manifestS3Id
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getManifestS3Id() {
        return manifestS3Id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MANIFEST_S3_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getManifestS3Id_JsonNullable() {
    return manifestS3Id;
  }
  
  @JsonProperty(JSON_PROPERTY_MANIFEST_S3_ID)
  public void setManifestS3Id_JsonNullable(JsonNullable<UUID> manifestS3Id) {
    this.manifestS3Id = manifestS3Id;
  }

  public void setManifestS3Id(@javax.annotation.Nullable UUID manifestS3Id) {
    this.manifestS3Id = JsonNullable.<UUID>of(manifestS3Id);
  }


  public RunSchemaComparisonView events(@javax.annotation.Nullable List<Object> events) {
    this.events = JsonNullable.<List<Object>>of(events);
    return this;
  }

  public RunSchemaComparisonView addEventsItem(Object eventsItem) {
    if (this.events == null || !this.events.isPresent()) {
      this.events = JsonNullable.<List<Object>>of(new ArrayList<>());
    }
    try {
      this.events.get().add(eventsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get events
   * @return events
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<Object> getEvents() {
        return events.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Object>> getEvents_JsonNullable() {
    return events;
  }
  
  @JsonProperty(JSON_PROPERTY_EVENTS)
  public void setEvents_JsonNullable(JsonNullable<List<Object>> events) {
    this.events = events;
  }

  public void setEvents(@javax.annotation.Nullable List<Object> events) {
    this.events = JsonNullable.<List<Object>>of(events);
  }


  public RunSchemaComparisonView tags(@javax.annotation.Nullable List<String> tags) {
    this.tags = JsonNullable.<List<String>>of(tags);
    return this;
  }

  public RunSchemaComparisonView addTagsItem(String tagsItem) {
    if (this.tags == null || !this.tags.isPresent()) {
      this.tags = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.tags.get().add(tagsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getTags() {
        return tags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTags_JsonNullable() {
    return tags;
  }
  
  @JsonProperty(JSON_PROPERTY_TAGS)
  public void setTags_JsonNullable(JsonNullable<List<String>> tags) {
    this.tags = tags;
  }

  public void setTags(@javax.annotation.Nullable List<String> tags) {
    this.tags = JsonNullable.<List<String>>of(tags);
  }


  public RunSchemaComparisonView inputsS3Urls(@javax.annotation.Nullable Object inputsS3Urls) {
    this.inputsS3Urls = JsonNullable.<Object>of(inputsS3Urls);
    return this;
  }

  /**
   * Get inputsS3Urls
   * @return inputsS3Urls
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getInputsS3Urls() {
        return inputsS3Urls.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUTS_S3_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getInputsS3Urls_JsonNullable() {
    return inputsS3Urls;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUTS_S3_URLS)
  public void setInputsS3Urls_JsonNullable(JsonNullable<Object> inputsS3Urls) {
    this.inputsS3Urls = inputsS3Urls;
  }

  public void setInputsS3Urls(@javax.annotation.Nullable Object inputsS3Urls) {
    this.inputsS3Urls = JsonNullable.<Object>of(inputsS3Urls);
  }


  public RunSchemaComparisonView outputsS3Urls(@javax.annotation.Nullable Object outputsS3Urls) {
    this.outputsS3Urls = JsonNullable.<Object>of(outputsS3Urls);
    return this;
  }

  /**
   * Get outputsS3Urls
   * @return outputsS3Urls
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getOutputsS3Urls() {
        return outputsS3Urls.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTPUTS_S3_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOutputsS3Urls_JsonNullable() {
    return outputsS3Urls;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTPUTS_S3_URLS)
  public void setOutputsS3Urls_JsonNullable(JsonNullable<Object> outputsS3Urls) {
    this.outputsS3Urls = outputsS3Urls;
  }

  public void setOutputsS3Urls(@javax.annotation.Nullable Object outputsS3Urls) {
    this.outputsS3Urls = JsonNullable.<Object>of(outputsS3Urls);
  }


  public RunSchemaComparisonView s3Urls(@javax.annotation.Nullable Object s3Urls) {
    this.s3Urls = JsonNullable.<Object>of(s3Urls);
    return this;
  }

  /**
   * Get s3Urls
   * @return s3Urls
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getS3Urls() {
        return s3Urls.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_S3_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getS3Urls_JsonNullable() {
    return s3Urls;
  }
  
  @JsonProperty(JSON_PROPERTY_S3_URLS)
  public void setS3Urls_JsonNullable(JsonNullable<Object> s3Urls) {
    this.s3Urls = s3Urls;
  }

  public void setS3Urls(@javax.annotation.Nullable Object s3Urls) {
    this.s3Urls = JsonNullable.<Object>of(s3Urls);
  }


  public RunSchemaComparisonView traceId(@javax.annotation.Nonnull UUID traceId) {
    this.traceId = traceId;
    return this;
  }

  /**
   * Get traceId
   * @return traceId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRACE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getTraceId() {
    return traceId;
  }


  @JsonProperty(JSON_PROPERTY_TRACE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTraceId(@javax.annotation.Nonnull UUID traceId) {
    this.traceId = traceId;
  }


  public RunSchemaComparisonView dottedOrder(@javax.annotation.Nullable String dottedOrder) {
    this.dottedOrder = JsonNullable.<String>of(dottedOrder);
    return this;
  }

  /**
   * Get dottedOrder
   * @return dottedOrder
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDottedOrder() {
        return dottedOrder.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DOTTED_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDottedOrder_JsonNullable() {
    return dottedOrder;
  }
  
  @JsonProperty(JSON_PROPERTY_DOTTED_ORDER)
  public void setDottedOrder_JsonNullable(JsonNullable<String> dottedOrder) {
    this.dottedOrder = dottedOrder;
  }

  public void setDottedOrder(@javax.annotation.Nullable String dottedOrder) {
    this.dottedOrder = JsonNullable.<String>of(dottedOrder);
  }


  public RunSchemaComparisonView id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public RunSchemaComparisonView sessionId(@javax.annotation.Nonnull UUID sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * Get sessionId
   * @return sessionId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getSessionId() {
    return sessionId;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSessionId(@javax.annotation.Nonnull UUID sessionId) {
    this.sessionId = sessionId;
  }


  public RunSchemaComparisonView referenceExampleId(@javax.annotation.Nullable UUID referenceExampleId) {
    this.referenceExampleId = JsonNullable.<UUID>of(referenceExampleId);
    return this;
  }

  /**
   * Get referenceExampleId
   * @return referenceExampleId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getReferenceExampleId() {
        return referenceExampleId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFERENCE_EXAMPLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getReferenceExampleId_JsonNullable() {
    return referenceExampleId;
  }
  
  @JsonProperty(JSON_PROPERTY_REFERENCE_EXAMPLE_ID)
  public void setReferenceExampleId_JsonNullable(JsonNullable<UUID> referenceExampleId) {
    this.referenceExampleId = referenceExampleId;
  }

  public void setReferenceExampleId(@javax.annotation.Nullable UUID referenceExampleId) {
    this.referenceExampleId = JsonNullable.<UUID>of(referenceExampleId);
  }


  public RunSchemaComparisonView totalTokens(@javax.annotation.Nullable Integer totalTokens) {
    this.totalTokens = JsonNullable.<Integer>of(totalTokens);
    return this;
  }

  /**
   * Get totalTokens
   * @return totalTokens
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getTotalTokens() {
        return totalTokens.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTotalTokens_JsonNullable() {
    return totalTokens;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_TOKENS)
  public void setTotalTokens_JsonNullable(JsonNullable<Integer> totalTokens) {
    this.totalTokens = totalTokens;
  }

  public void setTotalTokens(@javax.annotation.Nullable Integer totalTokens) {
    this.totalTokens = JsonNullable.<Integer>of(totalTokens);
  }


  public RunSchemaComparisonView promptTokens(@javax.annotation.Nullable Integer promptTokens) {
    this.promptTokens = JsonNullable.<Integer>of(promptTokens);
    return this;
  }

  /**
   * Get promptTokens
   * @return promptTokens
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getPromptTokens() {
        return promptTokens.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROMPT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getPromptTokens_JsonNullable() {
    return promptTokens;
  }
  
  @JsonProperty(JSON_PROPERTY_PROMPT_TOKENS)
  public void setPromptTokens_JsonNullable(JsonNullable<Integer> promptTokens) {
    this.promptTokens = promptTokens;
  }

  public void setPromptTokens(@javax.annotation.Nullable Integer promptTokens) {
    this.promptTokens = JsonNullable.<Integer>of(promptTokens);
  }


  public RunSchemaComparisonView completionTokens(@javax.annotation.Nullable Integer completionTokens) {
    this.completionTokens = JsonNullable.<Integer>of(completionTokens);
    return this;
  }

  /**
   * Get completionTokens
   * @return completionTokens
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getCompletionTokens() {
        return completionTokens.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getCompletionTokens_JsonNullable() {
    return completionTokens;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKENS)
  public void setCompletionTokens_JsonNullable(JsonNullable<Integer> completionTokens) {
    this.completionTokens = completionTokens;
  }

  public void setCompletionTokens(@javax.annotation.Nullable Integer completionTokens) {
    this.completionTokens = JsonNullable.<Integer>of(completionTokens);
  }


  public RunSchemaComparisonView totalCost(@javax.annotation.Nullable String totalCost) {
    this.totalCost = JsonNullable.<String>of(totalCost);
    return this;
  }

  /**
   * Get totalCost
   * @return totalCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTotalCost() {
        return totalCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTotalCost_JsonNullable() {
    return totalCost;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_COST)
  public void setTotalCost_JsonNullable(JsonNullable<String> totalCost) {
    this.totalCost = totalCost;
  }

  public void setTotalCost(@javax.annotation.Nullable String totalCost) {
    this.totalCost = JsonNullable.<String>of(totalCost);
  }


  public RunSchemaComparisonView promptCost(@javax.annotation.Nullable String promptCost) {
    this.promptCost = JsonNullable.<String>of(promptCost);
    return this;
  }

  /**
   * Get promptCost
   * @return promptCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPromptCost() {
        return promptCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROMPT_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPromptCost_JsonNullable() {
    return promptCost;
  }
  
  @JsonProperty(JSON_PROPERTY_PROMPT_COST)
  public void setPromptCost_JsonNullable(JsonNullable<String> promptCost) {
    this.promptCost = promptCost;
  }

  public void setPromptCost(@javax.annotation.Nullable String promptCost) {
    this.promptCost = JsonNullable.<String>of(promptCost);
  }


  public RunSchemaComparisonView completionCost(@javax.annotation.Nullable String completionCost) {
    this.completionCost = JsonNullable.<String>of(completionCost);
    return this;
  }

  /**
   * Get completionCost
   * @return completionCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCompletionCost() {
        return completionCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETION_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCompletionCost_JsonNullable() {
    return completionCost;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETION_COST)
  public void setCompletionCost_JsonNullable(JsonNullable<String> completionCost) {
    this.completionCost = completionCost;
  }

  public void setCompletionCost(@javax.annotation.Nullable String completionCost) {
    this.completionCost = JsonNullable.<String>of(completionCost);
  }


  public RunSchemaComparisonView status(@javax.annotation.Nonnull String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@javax.annotation.Nonnull String status) {
    this.status = status;
  }


  public RunSchemaComparisonView feedbackStats(@javax.annotation.Nullable Map<String, Object> feedbackStats) {
    this.feedbackStats = JsonNullable.<Map<String, Object>>of(feedbackStats);
    return this;
  }

  public RunSchemaComparisonView putFeedbackStatsItem(String key, Object feedbackStatsItem) {
    if (this.feedbackStats == null || !this.feedbackStats.isPresent()) {
      this.feedbackStats = JsonNullable.<Map<String, Object>>of(new HashMap<>());
    }
    try {
      this.feedbackStats.get().put(key, feedbackStatsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get feedbackStats
   * @return feedbackStats
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, Object> getFeedbackStats() {
        return feedbackStats.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FEEDBACK_STATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Object>> getFeedbackStats_JsonNullable() {
    return feedbackStats;
  }
  
  @JsonProperty(JSON_PROPERTY_FEEDBACK_STATS)
  public void setFeedbackStats_JsonNullable(JsonNullable<Map<String, Object>> feedbackStats) {
    this.feedbackStats = feedbackStats;
  }

  public void setFeedbackStats(@javax.annotation.Nullable Map<String, Object> feedbackStats) {
    this.feedbackStats = JsonNullable.<Map<String, Object>>of(feedbackStats);
  }


  public RunSchemaComparisonView appPath(@javax.annotation.Nullable String appPath) {
    this.appPath = JsonNullable.<String>of(appPath);
    return this;
  }

  /**
   * Get appPath
   * @return appPath
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAppPath() {
        return appPath.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APP_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAppPath_JsonNullable() {
    return appPath;
  }
  
  @JsonProperty(JSON_PROPERTY_APP_PATH)
  public void setAppPath_JsonNullable(JsonNullable<String> appPath) {
    this.appPath = appPath;
  }

  public void setAppPath(@javax.annotation.Nullable String appPath) {
    this.appPath = JsonNullable.<String>of(appPath);
  }


  /**
   * Return true if this RunSchemaComparisonView object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunSchemaComparisonView runSchemaComparisonView = (RunSchemaComparisonView) o;
    return Objects.equals(this.name, runSchemaComparisonView.name) &&
        equalsNullable(this.inputs, runSchemaComparisonView.inputs) &&
        equalsNullable(this.inputsPreview, runSchemaComparisonView.inputsPreview) &&
        Objects.equals(this.runType, runSchemaComparisonView.runType) &&
        Objects.equals(this.startTime, runSchemaComparisonView.startTime) &&
        equalsNullable(this.endTime, runSchemaComparisonView.endTime) &&
        equalsNullable(this.extra, runSchemaComparisonView.extra) &&
        equalsNullable(this.error, runSchemaComparisonView.error) &&
        Objects.equals(this.executionOrder, runSchemaComparisonView.executionOrder) &&
        equalsNullable(this.serialized, runSchemaComparisonView.serialized) &&
        equalsNullable(this.outputs, runSchemaComparisonView.outputs) &&
        equalsNullable(this.outputsPreview, runSchemaComparisonView.outputsPreview) &&
        equalsNullable(this.parentRunId, runSchemaComparisonView.parentRunId) &&
        equalsNullable(this.manifestId, runSchemaComparisonView.manifestId) &&
        equalsNullable(this.manifestS3Id, runSchemaComparisonView.manifestS3Id) &&
        equalsNullable(this.events, runSchemaComparisonView.events) &&
        equalsNullable(this.tags, runSchemaComparisonView.tags) &&
        equalsNullable(this.inputsS3Urls, runSchemaComparisonView.inputsS3Urls) &&
        equalsNullable(this.outputsS3Urls, runSchemaComparisonView.outputsS3Urls) &&
        equalsNullable(this.s3Urls, runSchemaComparisonView.s3Urls) &&
        Objects.equals(this.traceId, runSchemaComparisonView.traceId) &&
        equalsNullable(this.dottedOrder, runSchemaComparisonView.dottedOrder) &&
        Objects.equals(this.id, runSchemaComparisonView.id) &&
        Objects.equals(this.sessionId, runSchemaComparisonView.sessionId) &&
        equalsNullable(this.referenceExampleId, runSchemaComparisonView.referenceExampleId) &&
        equalsNullable(this.totalTokens, runSchemaComparisonView.totalTokens) &&
        equalsNullable(this.promptTokens, runSchemaComparisonView.promptTokens) &&
        equalsNullable(this.completionTokens, runSchemaComparisonView.completionTokens) &&
        equalsNullable(this.totalCost, runSchemaComparisonView.totalCost) &&
        equalsNullable(this.promptCost, runSchemaComparisonView.promptCost) &&
        equalsNullable(this.completionCost, runSchemaComparisonView.completionCost) &&
        Objects.equals(this.status, runSchemaComparisonView.status) &&
        equalsNullable(this.feedbackStats, runSchemaComparisonView.feedbackStats) &&
        equalsNullable(this.appPath, runSchemaComparisonView.appPath);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, hashCodeNullable(inputs), hashCodeNullable(inputsPreview), runType, startTime, hashCodeNullable(endTime), hashCodeNullable(extra), hashCodeNullable(error), executionOrder, hashCodeNullable(serialized), hashCodeNullable(outputs), hashCodeNullable(outputsPreview), hashCodeNullable(parentRunId), hashCodeNullable(manifestId), hashCodeNullable(manifestS3Id), hashCodeNullable(events), hashCodeNullable(tags), hashCodeNullable(inputsS3Urls), hashCodeNullable(outputsS3Urls), hashCodeNullable(s3Urls), traceId, hashCodeNullable(dottedOrder), id, sessionId, hashCodeNullable(referenceExampleId), hashCodeNullable(totalTokens), hashCodeNullable(promptTokens), hashCodeNullable(completionTokens), hashCodeNullable(totalCost), hashCodeNullable(promptCost), hashCodeNullable(completionCost), status, hashCodeNullable(feedbackStats), hashCodeNullable(appPath));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunSchemaComparisonView {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    inputsPreview: ").append(toIndentedString(inputsPreview)).append("\n");
    sb.append("    runType: ").append(toIndentedString(runType)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    executionOrder: ").append(toIndentedString(executionOrder)).append("\n");
    sb.append("    serialized: ").append(toIndentedString(serialized)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    outputsPreview: ").append(toIndentedString(outputsPreview)).append("\n");
    sb.append("    parentRunId: ").append(toIndentedString(parentRunId)).append("\n");
    sb.append("    manifestId: ").append(toIndentedString(manifestId)).append("\n");
    sb.append("    manifestS3Id: ").append(toIndentedString(manifestS3Id)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    inputsS3Urls: ").append(toIndentedString(inputsS3Urls)).append("\n");
    sb.append("    outputsS3Urls: ").append(toIndentedString(outputsS3Urls)).append("\n");
    sb.append("    s3Urls: ").append(toIndentedString(s3Urls)).append("\n");
    sb.append("    traceId: ").append(toIndentedString(traceId)).append("\n");
    sb.append("    dottedOrder: ").append(toIndentedString(dottedOrder)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    referenceExampleId: ").append(toIndentedString(referenceExampleId)).append("\n");
    sb.append("    totalTokens: ").append(toIndentedString(totalTokens)).append("\n");
    sb.append("    promptTokens: ").append(toIndentedString(promptTokens)).append("\n");
    sb.append("    completionTokens: ").append(toIndentedString(completionTokens)).append("\n");
    sb.append("    totalCost: ").append(toIndentedString(totalCost)).append("\n");
    sb.append("    promptCost: ").append(toIndentedString(promptCost)).append("\n");
    sb.append("    completionCost: ").append(toIndentedString(completionCost)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    feedbackStats: ").append(toIndentedString(feedbackStats)).append("\n");
    sb.append("    appPath: ").append(toIndentedString(appPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `inputs` to the URL query string
    if (getInputs() != null) {
      joiner.add(String.format("%sinputs%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInputs()))));
    }

    // add `inputs_preview` to the URL query string
    if (getInputsPreview() != null) {
      joiner.add(String.format("%sinputs_preview%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInputsPreview()))));
    }

    // add `run_type` to the URL query string
    if (getRunType() != null) {
      joiner.add(String.format("%srun_type%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRunType()))));
    }

    // add `start_time` to the URL query string
    if (getStartTime() != null) {
      joiner.add(String.format("%sstart_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStartTime()))));
    }

    // add `end_time` to the URL query string
    if (getEndTime() != null) {
      joiner.add(String.format("%send_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEndTime()))));
    }

    // add `extra` to the URL query string
    if (getExtra() != null) {
      joiner.add(String.format("%sextra%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExtra()))));
    }

    // add `error` to the URL query string
    if (getError() != null) {
      joiner.add(String.format("%serror%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getError()))));
    }

    // add `execution_order` to the URL query string
    if (getExecutionOrder() != null) {
      joiner.add(String.format("%sexecution_order%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExecutionOrder()))));
    }

    // add `serialized` to the URL query string
    if (getSerialized() != null) {
      joiner.add(String.format("%sserialized%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSerialized()))));
    }

    // add `outputs` to the URL query string
    if (getOutputs() != null) {
      joiner.add(String.format("%soutputs%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOutputs()))));
    }

    // add `outputs_preview` to the URL query string
    if (getOutputsPreview() != null) {
      joiner.add(String.format("%soutputs_preview%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOutputsPreview()))));
    }

    // add `parent_run_id` to the URL query string
    if (getParentRunId() != null) {
      joiner.add(String.format("%sparent_run_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentRunId()))));
    }

    // add `manifest_id` to the URL query string
    if (getManifestId() != null) {
      joiner.add(String.format("%smanifest_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getManifestId()))));
    }

    // add `manifest_s3_id` to the URL query string
    if (getManifestS3Id() != null) {
      joiner.add(String.format("%smanifest_s3_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getManifestS3Id()))));
    }

    // add `events` to the URL query string
    if (getEvents() != null) {
      for (int i = 0; i < getEvents().size(); i++) {
        joiner.add(String.format("%sevents%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getEvents().get(i)))));
      }
    }

    // add `tags` to the URL query string
    if (getTags() != null) {
      for (int i = 0; i < getTags().size(); i++) {
        joiner.add(String.format("%stags%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getTags().get(i)))));
      }
    }

    // add `inputs_s3_urls` to the URL query string
    if (getInputsS3Urls() != null) {
      joiner.add(String.format("%sinputs_s3_urls%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInputsS3Urls()))));
    }

    // add `outputs_s3_urls` to the URL query string
    if (getOutputsS3Urls() != null) {
      joiner.add(String.format("%soutputs_s3_urls%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOutputsS3Urls()))));
    }

    // add `s3_urls` to the URL query string
    if (getS3Urls() != null) {
      joiner.add(String.format("%ss3_urls%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getS3Urls()))));
    }

    // add `trace_id` to the URL query string
    if (getTraceId() != null) {
      joiner.add(String.format("%strace_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTraceId()))));
    }

    // add `dotted_order` to the URL query string
    if (getDottedOrder() != null) {
      joiner.add(String.format("%sdotted_order%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDottedOrder()))));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `session_id` to the URL query string
    if (getSessionId() != null) {
      joiner.add(String.format("%ssession_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionId()))));
    }

    // add `reference_example_id` to the URL query string
    if (getReferenceExampleId() != null) {
      joiner.add(String.format("%sreference_example_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getReferenceExampleId()))));
    }

    // add `total_tokens` to the URL query string
    if (getTotalTokens() != null) {
      joiner.add(String.format("%stotal_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTotalTokens()))));
    }

    // add `prompt_tokens` to the URL query string
    if (getPromptTokens() != null) {
      joiner.add(String.format("%sprompt_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPromptTokens()))));
    }

    // add `completion_tokens` to the URL query string
    if (getCompletionTokens() != null) {
      joiner.add(String.format("%scompletion_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCompletionTokens()))));
    }

    // add `total_cost` to the URL query string
    if (getTotalCost() != null) {
      joiner.add(String.format("%stotal_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTotalCost()))));
    }

    // add `prompt_cost` to the URL query string
    if (getPromptCost() != null) {
      joiner.add(String.format("%sprompt_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPromptCost()))));
    }

    // add `completion_cost` to the URL query string
    if (getCompletionCost() != null) {
      joiner.add(String.format("%scompletion_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCompletionCost()))));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
    }

    // add `feedback_stats` to the URL query string
    if (getFeedbackStats() != null) {
      for (String _key : getFeedbackStats().keySet()) {
        joiner.add(String.format("%sfeedback_stats%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getFeedbackStats().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getFeedbackStats().get(_key)))));
      }
    }

    // add `app_path` to the URL query string
    if (getAppPath() != null) {
      joiner.add(String.format("%sapp_path%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAppPath()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private RunSchemaComparisonView instance;

    public Builder() {
      this(new RunSchemaComparisonView());
    }

    protected Builder(RunSchemaComparisonView instance) {
      this.instance = instance;
    }

    public RunSchemaComparisonView.Builder name(String name) {
      this.instance.name = name;
      return this;
    }
    public RunSchemaComparisonView.Builder inputs(Object inputs) {
      this.instance.inputs = JsonNullable.<Object>of(inputs);
      return this;
    }
    public RunSchemaComparisonView.Builder inputs(JsonNullable<Object> inputs) {
      this.instance.inputs = inputs;
      return this;
    }
    public RunSchemaComparisonView.Builder inputsPreview(String inputsPreview) {
      this.instance.inputsPreview = JsonNullable.<String>of(inputsPreview);
      return this;
    }
    public RunSchemaComparisonView.Builder inputsPreview(JsonNullable<String> inputsPreview) {
      this.instance.inputsPreview = inputsPreview;
      return this;
    }
    public RunSchemaComparisonView.Builder runType(RunTypeEnum runType) {
      this.instance.runType = runType;
      return this;
    }
    public RunSchemaComparisonView.Builder startTime(OffsetDateTime startTime) {
      this.instance.startTime = startTime;
      return this;
    }
    public RunSchemaComparisonView.Builder endTime(OffsetDateTime endTime) {
      this.instance.endTime = JsonNullable.<OffsetDateTime>of(endTime);
      return this;
    }
    public RunSchemaComparisonView.Builder endTime(JsonNullable<OffsetDateTime> endTime) {
      this.instance.endTime = endTime;
      return this;
    }
    public RunSchemaComparisonView.Builder extra(Object extra) {
      this.instance.extra = JsonNullable.<Object>of(extra);
      return this;
    }
    public RunSchemaComparisonView.Builder extra(JsonNullable<Object> extra) {
      this.instance.extra = extra;
      return this;
    }
    public RunSchemaComparisonView.Builder error(String error) {
      this.instance.error = JsonNullable.<String>of(error);
      return this;
    }
    public RunSchemaComparisonView.Builder error(JsonNullable<String> error) {
      this.instance.error = error;
      return this;
    }
    public RunSchemaComparisonView.Builder executionOrder(Integer executionOrder) {
      this.instance.executionOrder = executionOrder;
      return this;
    }
    public RunSchemaComparisonView.Builder serialized(Object serialized) {
      this.instance.serialized = JsonNullable.<Object>of(serialized);
      return this;
    }
    public RunSchemaComparisonView.Builder serialized(JsonNullable<Object> serialized) {
      this.instance.serialized = serialized;
      return this;
    }
    public RunSchemaComparisonView.Builder outputs(Object outputs) {
      this.instance.outputs = JsonNullable.<Object>of(outputs);
      return this;
    }
    public RunSchemaComparisonView.Builder outputs(JsonNullable<Object> outputs) {
      this.instance.outputs = outputs;
      return this;
    }
    public RunSchemaComparisonView.Builder outputsPreview(String outputsPreview) {
      this.instance.outputsPreview = JsonNullable.<String>of(outputsPreview);
      return this;
    }
    public RunSchemaComparisonView.Builder outputsPreview(JsonNullable<String> outputsPreview) {
      this.instance.outputsPreview = outputsPreview;
      return this;
    }
    public RunSchemaComparisonView.Builder parentRunId(UUID parentRunId) {
      this.instance.parentRunId = JsonNullable.<UUID>of(parentRunId);
      return this;
    }
    public RunSchemaComparisonView.Builder parentRunId(JsonNullable<UUID> parentRunId) {
      this.instance.parentRunId = parentRunId;
      return this;
    }
    public RunSchemaComparisonView.Builder manifestId(UUID manifestId) {
      this.instance.manifestId = JsonNullable.<UUID>of(manifestId);
      return this;
    }
    public RunSchemaComparisonView.Builder manifestId(JsonNullable<UUID> manifestId) {
      this.instance.manifestId = manifestId;
      return this;
    }
    public RunSchemaComparisonView.Builder manifestS3Id(UUID manifestS3Id) {
      this.instance.manifestS3Id = JsonNullable.<UUID>of(manifestS3Id);
      return this;
    }
    public RunSchemaComparisonView.Builder manifestS3Id(JsonNullable<UUID> manifestS3Id) {
      this.instance.manifestS3Id = manifestS3Id;
      return this;
    }
    public RunSchemaComparisonView.Builder events(List<Object> events) {
      this.instance.events = JsonNullable.<List<Object>>of(events);
      return this;
    }
    public RunSchemaComparisonView.Builder events(JsonNullable<List<Object>> events) {
      this.instance.events = events;
      return this;
    }
    public RunSchemaComparisonView.Builder tags(List<String> tags) {
      this.instance.tags = JsonNullable.<List<String>>of(tags);
      return this;
    }
    public RunSchemaComparisonView.Builder tags(JsonNullable<List<String>> tags) {
      this.instance.tags = tags;
      return this;
    }
    public RunSchemaComparisonView.Builder inputsS3Urls(Object inputsS3Urls) {
      this.instance.inputsS3Urls = JsonNullable.<Object>of(inputsS3Urls);
      return this;
    }
    public RunSchemaComparisonView.Builder inputsS3Urls(JsonNullable<Object> inputsS3Urls) {
      this.instance.inputsS3Urls = inputsS3Urls;
      return this;
    }
    public RunSchemaComparisonView.Builder outputsS3Urls(Object outputsS3Urls) {
      this.instance.outputsS3Urls = JsonNullable.<Object>of(outputsS3Urls);
      return this;
    }
    public RunSchemaComparisonView.Builder outputsS3Urls(JsonNullable<Object> outputsS3Urls) {
      this.instance.outputsS3Urls = outputsS3Urls;
      return this;
    }
    public RunSchemaComparisonView.Builder s3Urls(Object s3Urls) {
      this.instance.s3Urls = JsonNullable.<Object>of(s3Urls);
      return this;
    }
    public RunSchemaComparisonView.Builder s3Urls(JsonNullable<Object> s3Urls) {
      this.instance.s3Urls = s3Urls;
      return this;
    }
    public RunSchemaComparisonView.Builder traceId(UUID traceId) {
      this.instance.traceId = traceId;
      return this;
    }
    public RunSchemaComparisonView.Builder dottedOrder(String dottedOrder) {
      this.instance.dottedOrder = JsonNullable.<String>of(dottedOrder);
      return this;
    }
    public RunSchemaComparisonView.Builder dottedOrder(JsonNullable<String> dottedOrder) {
      this.instance.dottedOrder = dottedOrder;
      return this;
    }
    public RunSchemaComparisonView.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public RunSchemaComparisonView.Builder sessionId(UUID sessionId) {
      this.instance.sessionId = sessionId;
      return this;
    }
    public RunSchemaComparisonView.Builder referenceExampleId(UUID referenceExampleId) {
      this.instance.referenceExampleId = JsonNullable.<UUID>of(referenceExampleId);
      return this;
    }
    public RunSchemaComparisonView.Builder referenceExampleId(JsonNullable<UUID> referenceExampleId) {
      this.instance.referenceExampleId = referenceExampleId;
      return this;
    }
    public RunSchemaComparisonView.Builder totalTokens(Integer totalTokens) {
      this.instance.totalTokens = JsonNullable.<Integer>of(totalTokens);
      return this;
    }
    public RunSchemaComparisonView.Builder totalTokens(JsonNullable<Integer> totalTokens) {
      this.instance.totalTokens = totalTokens;
      return this;
    }
    public RunSchemaComparisonView.Builder promptTokens(Integer promptTokens) {
      this.instance.promptTokens = JsonNullable.<Integer>of(promptTokens);
      return this;
    }
    public RunSchemaComparisonView.Builder promptTokens(JsonNullable<Integer> promptTokens) {
      this.instance.promptTokens = promptTokens;
      return this;
    }
    public RunSchemaComparisonView.Builder completionTokens(Integer completionTokens) {
      this.instance.completionTokens = JsonNullable.<Integer>of(completionTokens);
      return this;
    }
    public RunSchemaComparisonView.Builder completionTokens(JsonNullable<Integer> completionTokens) {
      this.instance.completionTokens = completionTokens;
      return this;
    }
    public RunSchemaComparisonView.Builder totalCost(String totalCost) {
      this.instance.totalCost = JsonNullable.<String>of(totalCost);
      return this;
    }
    public RunSchemaComparisonView.Builder totalCost(JsonNullable<String> totalCost) {
      this.instance.totalCost = totalCost;
      return this;
    }
    public RunSchemaComparisonView.Builder promptCost(String promptCost) {
      this.instance.promptCost = JsonNullable.<String>of(promptCost);
      return this;
    }
    public RunSchemaComparisonView.Builder promptCost(JsonNullable<String> promptCost) {
      this.instance.promptCost = promptCost;
      return this;
    }
    public RunSchemaComparisonView.Builder completionCost(String completionCost) {
      this.instance.completionCost = JsonNullable.<String>of(completionCost);
      return this;
    }
    public RunSchemaComparisonView.Builder completionCost(JsonNullable<String> completionCost) {
      this.instance.completionCost = completionCost;
      return this;
    }
    public RunSchemaComparisonView.Builder status(String status) {
      this.instance.status = status;
      return this;
    }
    public RunSchemaComparisonView.Builder feedbackStats(Map<String, Object> feedbackStats) {
      this.instance.feedbackStats = JsonNullable.<Map<String, Object>>of(feedbackStats);
      return this;
    }
    public RunSchemaComparisonView.Builder feedbackStats(JsonNullable<Map<String, Object>> feedbackStats) {
      this.instance.feedbackStats = feedbackStats;
      return this;
    }
    public RunSchemaComparisonView.Builder appPath(String appPath) {
      this.instance.appPath = JsonNullable.<String>of(appPath);
      return this;
    }
    public RunSchemaComparisonView.Builder appPath(JsonNullable<String> appPath) {
      this.instance.appPath = appPath;
      return this;
    }


    /**
    * returns a built RunSchemaComparisonView instance.
    *
    * The builder is not reusable.
    */
    public RunSchemaComparisonView build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static RunSchemaComparisonView.Builder builder() {
    return new RunSchemaComparisonView.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public RunSchemaComparisonView.Builder toBuilder() {
    return new RunSchemaComparisonView.Builder()
      .name(getName())
      .inputs(getInputs())
      .inputsPreview(getInputsPreview())
      .runType(getRunType())
      .startTime(getStartTime())
      .endTime(getEndTime())
      .extra(getExtra())
      .error(getError())
      .executionOrder(getExecutionOrder())
      .serialized(getSerialized())
      .outputs(getOutputs())
      .outputsPreview(getOutputsPreview())
      .parentRunId(getParentRunId())
      .manifestId(getManifestId())
      .manifestS3Id(getManifestS3Id())
      .events(getEvents())
      .tags(getTags())
      .inputsS3Urls(getInputsS3Urls())
      .outputsS3Urls(getOutputsS3Urls())
      .s3Urls(getS3Urls())
      .traceId(getTraceId())
      .dottedOrder(getDottedOrder())
      .id(getId())
      .sessionId(getSessionId())
      .referenceExampleId(getReferenceExampleId())
      .totalTokens(getTotalTokens())
      .promptTokens(getPromptTokens())
      .completionTokens(getCompletionTokens())
      .totalCost(getTotalCost())
      .promptCost(getPromptCost())
      .completionCost(getCompletionCost())
      .status(getStatus())
      .feedbackStats(getFeedbackStats())
      .appPath(getAppPath());
  }

}

