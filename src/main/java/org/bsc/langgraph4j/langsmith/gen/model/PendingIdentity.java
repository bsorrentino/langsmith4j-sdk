/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.AccessScope;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * PendingIdentity
 */
@JsonPropertyOrder({
  PendingIdentity.JSON_PROPERTY_EMAIL,
  PendingIdentity.JSON_PROPERTY_READ_ONLY,
  PendingIdentity.JSON_PROPERTY_ROLE_ID,
  PendingIdentity.JSON_PROPERTY_WORKSPACE_IDS,
  PendingIdentity.JSON_PROPERTY_WORKSPACE_ROLE_ID,
  PendingIdentity.JSON_PROPERTY_PASSWORD,
  PendingIdentity.JSON_PROPERTY_FULL_NAME,
  PendingIdentity.JSON_PROPERTY_ACCESS_SCOPE,
  PendingIdentity.JSON_PROPERTY_ID,
  PendingIdentity.JSON_PROPERTY_USER_ID,
  PendingIdentity.JSON_PROPERTY_TENANT_ID,
  PendingIdentity.JSON_PROPERTY_ORGANIZATION_ID,
  PendingIdentity.JSON_PROPERTY_CREATED_AT,
  PendingIdentity.JSON_PROPERTY_ROLE_NAME,
  PendingIdentity.JSON_PROPERTY_ORG_ROLE_ID,
  PendingIdentity.JSON_PROPERTY_ORG_ROLE_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class PendingIdentity {
  public static final String JSON_PROPERTY_EMAIL = "email";
  @javax.annotation.Nonnull
  private String email;

  public static final String JSON_PROPERTY_READ_ONLY = "read_only";
  @javax.annotation.Nullable
  private Boolean readOnly = false;

  public static final String JSON_PROPERTY_ROLE_ID = "role_id";
  private JsonNullable<UUID> roleId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_WORKSPACE_IDS = "workspace_ids";
  private JsonNullable<List<UUID>> workspaceIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_WORKSPACE_ROLE_ID = "workspace_role_id";
  private JsonNullable<UUID> workspaceRoleId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private JsonNullable<String> password = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FULL_NAME = "full_name";
  private JsonNullable<String> fullName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ACCESS_SCOPE = "access_scope";
  @javax.annotation.Nullable
  private AccessScope accessScope;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private JsonNullable<UUID> userId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TENANT_ID = "tenant_id";
  private JsonNullable<UUID> tenantId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_ORGANIZATION_ID = "organization_id";
  private JsonNullable<UUID> organizationId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @javax.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_ROLE_NAME = "role_name";
  private JsonNullable<String> roleName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ORG_ROLE_ID = "org_role_id";
  private JsonNullable<UUID> orgRoleId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_ORG_ROLE_NAME = "org_role_name";
  private JsonNullable<String> orgRoleName = JsonNullable.<String>undefined();

  public PendingIdentity() { 
  }

  public PendingIdentity email(@javax.annotation.Nonnull String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@javax.annotation.Nonnull String email) {
    this.email = email;
  }


  public PendingIdentity readOnly(@javax.annotation.Nullable Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

  /**
   * Get readOnly
   * @return readOnly
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getReadOnly() {
    return readOnly;
  }


  @JsonProperty(JSON_PROPERTY_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReadOnly(@javax.annotation.Nullable Boolean readOnly) {
    this.readOnly = readOnly;
  }


  public PendingIdentity roleId(@javax.annotation.Nullable UUID roleId) {
    this.roleId = JsonNullable.<UUID>of(roleId);
    return this;
  }

  /**
   * Get roleId
   * @return roleId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getRoleId() {
        return roleId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getRoleId_JsonNullable() {
    return roleId;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE_ID)
  public void setRoleId_JsonNullable(JsonNullable<UUID> roleId) {
    this.roleId = roleId;
  }

  public void setRoleId(@javax.annotation.Nullable UUID roleId) {
    this.roleId = JsonNullable.<UUID>of(roleId);
  }


  public PendingIdentity workspaceIds(@javax.annotation.Nullable List<UUID> workspaceIds) {
    this.workspaceIds = JsonNullable.<List<UUID>>of(workspaceIds);
    return this;
  }

  public PendingIdentity addWorkspaceIdsItem(UUID workspaceIdsItem) {
    if (this.workspaceIds == null || !this.workspaceIds.isPresent()) {
      this.workspaceIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.workspaceIds.get().add(workspaceIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get workspaceIds
   * @return workspaceIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getWorkspaceIds() {
        return workspaceIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORKSPACE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getWorkspaceIds_JsonNullable() {
    return workspaceIds;
  }
  
  @JsonProperty(JSON_PROPERTY_WORKSPACE_IDS)
  public void setWorkspaceIds_JsonNullable(JsonNullable<List<UUID>> workspaceIds) {
    this.workspaceIds = workspaceIds;
  }

  public void setWorkspaceIds(@javax.annotation.Nullable List<UUID> workspaceIds) {
    this.workspaceIds = JsonNullable.<List<UUID>>of(workspaceIds);
  }


  public PendingIdentity workspaceRoleId(@javax.annotation.Nullable UUID workspaceRoleId) {
    this.workspaceRoleId = JsonNullable.<UUID>of(workspaceRoleId);
    return this;
  }

  /**
   * Get workspaceRoleId
   * @return workspaceRoleId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getWorkspaceRoleId() {
        return workspaceRoleId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORKSPACE_ROLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getWorkspaceRoleId_JsonNullable() {
    return workspaceRoleId;
  }
  
  @JsonProperty(JSON_PROPERTY_WORKSPACE_ROLE_ID)
  public void setWorkspaceRoleId_JsonNullable(JsonNullable<UUID> workspaceRoleId) {
    this.workspaceRoleId = workspaceRoleId;
  }

  public void setWorkspaceRoleId(@javax.annotation.Nullable UUID workspaceRoleId) {
    this.workspaceRoleId = JsonNullable.<UUID>of(workspaceRoleId);
  }


  public PendingIdentity password(@javax.annotation.Nullable String password) {
    this.password = JsonNullable.<String>of(password);
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPassword() {
        return password.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPassword_JsonNullable() {
    return password;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  public void setPassword_JsonNullable(JsonNullable<String> password) {
    this.password = password;
  }

  public void setPassword(@javax.annotation.Nullable String password) {
    this.password = JsonNullable.<String>of(password);
  }


  public PendingIdentity fullName(@javax.annotation.Nullable String fullName) {
    this.fullName = JsonNullable.<String>of(fullName);
    return this;
  }

  /**
   * Get fullName
   * @return fullName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFullName() {
        return fullName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFullName_JsonNullable() {
    return fullName;
  }
  
  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  public void setFullName_JsonNullable(JsonNullable<String> fullName) {
    this.fullName = fullName;
  }

  public void setFullName(@javax.annotation.Nullable String fullName) {
    this.fullName = JsonNullable.<String>of(fullName);
  }


  public PendingIdentity accessScope(@javax.annotation.Nullable AccessScope accessScope) {
    this.accessScope = accessScope;
    return this;
  }

  /**
   * Get accessScope
   * @return accessScope
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AccessScope getAccessScope() {
    return accessScope;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessScope(@javax.annotation.Nullable AccessScope accessScope) {
    this.accessScope = accessScope;
  }


  public PendingIdentity id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public PendingIdentity userId(@javax.annotation.Nullable UUID userId) {
    this.userId = JsonNullable.<UUID>of(userId);
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getUserId() {
        return userId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getUserId_JsonNullable() {
    return userId;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_ID)
  public void setUserId_JsonNullable(JsonNullable<UUID> userId) {
    this.userId = userId;
  }

  public void setUserId(@javax.annotation.Nullable UUID userId) {
    this.userId = JsonNullable.<UUID>of(userId);
  }


  public PendingIdentity tenantId(@javax.annotation.Nullable UUID tenantId) {
    this.tenantId = JsonNullable.<UUID>of(tenantId);
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getTenantId() {
        return tenantId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTenantId_JsonNullable() {
    return tenantId;
  }
  
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  public void setTenantId_JsonNullable(JsonNullable<UUID> tenantId) {
    this.tenantId = tenantId;
  }

  public void setTenantId(@javax.annotation.Nullable UUID tenantId) {
    this.tenantId = JsonNullable.<UUID>of(tenantId);
  }


  public PendingIdentity organizationId(@javax.annotation.Nullable UUID organizationId) {
    this.organizationId = JsonNullable.<UUID>of(organizationId);
    return this;
  }

  /**
   * Get organizationId
   * @return organizationId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getOrganizationId() {
        return organizationId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getOrganizationId_JsonNullable() {
    return organizationId;
  }
  
  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  public void setOrganizationId_JsonNullable(JsonNullable<UUID> organizationId) {
    this.organizationId = organizationId;
  }

  public void setOrganizationId(@javax.annotation.Nullable UUID organizationId) {
    this.organizationId = JsonNullable.<UUID>of(organizationId);
  }


  public PendingIdentity createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public PendingIdentity roleName(@javax.annotation.Nullable String roleName) {
    this.roleName = JsonNullable.<String>of(roleName);
    return this;
  }

  /**
   * Get roleName
   * @return roleName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getRoleName() {
        return roleName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRoleName_JsonNullable() {
    return roleName;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE_NAME)
  public void setRoleName_JsonNullable(JsonNullable<String> roleName) {
    this.roleName = roleName;
  }

  public void setRoleName(@javax.annotation.Nullable String roleName) {
    this.roleName = JsonNullable.<String>of(roleName);
  }


  public PendingIdentity orgRoleId(@javax.annotation.Nullable UUID orgRoleId) {
    this.orgRoleId = JsonNullable.<UUID>of(orgRoleId);
    return this;
  }

  /**
   * Get orgRoleId
   * @return orgRoleId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getOrgRoleId() {
        return orgRoleId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORG_ROLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getOrgRoleId_JsonNullable() {
    return orgRoleId;
  }
  
  @JsonProperty(JSON_PROPERTY_ORG_ROLE_ID)
  public void setOrgRoleId_JsonNullable(JsonNullable<UUID> orgRoleId) {
    this.orgRoleId = orgRoleId;
  }

  public void setOrgRoleId(@javax.annotation.Nullable UUID orgRoleId) {
    this.orgRoleId = JsonNullable.<UUID>of(orgRoleId);
  }


  public PendingIdentity orgRoleName(@javax.annotation.Nullable String orgRoleName) {
    this.orgRoleName = JsonNullable.<String>of(orgRoleName);
    return this;
  }

  /**
   * Get orgRoleName
   * @return orgRoleName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getOrgRoleName() {
        return orgRoleName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORG_ROLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOrgRoleName_JsonNullable() {
    return orgRoleName;
  }
  
  @JsonProperty(JSON_PROPERTY_ORG_ROLE_NAME)
  public void setOrgRoleName_JsonNullable(JsonNullable<String> orgRoleName) {
    this.orgRoleName = orgRoleName;
  }

  public void setOrgRoleName(@javax.annotation.Nullable String orgRoleName) {
    this.orgRoleName = JsonNullable.<String>of(orgRoleName);
  }


  /**
   * Return true if this PendingIdentity object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PendingIdentity pendingIdentity = (PendingIdentity) o;
    return Objects.equals(this.email, pendingIdentity.email) &&
        Objects.equals(this.readOnly, pendingIdentity.readOnly) &&
        equalsNullable(this.roleId, pendingIdentity.roleId) &&
        equalsNullable(this.workspaceIds, pendingIdentity.workspaceIds) &&
        equalsNullable(this.workspaceRoleId, pendingIdentity.workspaceRoleId) &&
        equalsNullable(this.password, pendingIdentity.password) &&
        equalsNullable(this.fullName, pendingIdentity.fullName) &&
        Objects.equals(this.accessScope, pendingIdentity.accessScope) &&
        Objects.equals(this.id, pendingIdentity.id) &&
        equalsNullable(this.userId, pendingIdentity.userId) &&
        equalsNullable(this.tenantId, pendingIdentity.tenantId) &&
        equalsNullable(this.organizationId, pendingIdentity.organizationId) &&
        Objects.equals(this.createdAt, pendingIdentity.createdAt) &&
        equalsNullable(this.roleName, pendingIdentity.roleName) &&
        equalsNullable(this.orgRoleId, pendingIdentity.orgRoleId) &&
        equalsNullable(this.orgRoleName, pendingIdentity.orgRoleName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, readOnly, hashCodeNullable(roleId), hashCodeNullable(workspaceIds), hashCodeNullable(workspaceRoleId), hashCodeNullable(password), hashCodeNullable(fullName), accessScope, id, hashCodeNullable(userId), hashCodeNullable(tenantId), hashCodeNullable(organizationId), createdAt, hashCodeNullable(roleName), hashCodeNullable(orgRoleId), hashCodeNullable(orgRoleName));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PendingIdentity {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    roleId: ").append(toIndentedString(roleId)).append("\n");
    sb.append("    workspaceIds: ").append(toIndentedString(workspaceIds)).append("\n");
    sb.append("    workspaceRoleId: ").append(toIndentedString(workspaceRoleId)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    accessScope: ").append(toIndentedString(accessScope)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    roleName: ").append(toIndentedString(roleName)).append("\n");
    sb.append("    orgRoleId: ").append(toIndentedString(orgRoleId)).append("\n");
    sb.append("    orgRoleName: ").append(toIndentedString(orgRoleName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `email` to the URL query string
    if (getEmail() != null) {
      joiner.add(String.format("%semail%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEmail()))));
    }

    // add `read_only` to the URL query string
    if (getReadOnly() != null) {
      joiner.add(String.format("%sread_only%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getReadOnly()))));
    }

    // add `role_id` to the URL query string
    if (getRoleId() != null) {
      joiner.add(String.format("%srole_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRoleId()))));
    }

    // add `workspace_ids` to the URL query string
    if (getWorkspaceIds() != null) {
      for (int i = 0; i < getWorkspaceIds().size(); i++) {
        if (getWorkspaceIds().get(i) != null) {
          joiner.add(String.format("%sworkspace_ids%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getWorkspaceIds().get(i)))));
        }
      }
    }

    // add `workspace_role_id` to the URL query string
    if (getWorkspaceRoleId() != null) {
      joiner.add(String.format("%sworkspace_role_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getWorkspaceRoleId()))));
    }

    // add `password` to the URL query string
    if (getPassword() != null) {
      joiner.add(String.format("%spassword%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPassword()))));
    }

    // add `full_name` to the URL query string
    if (getFullName() != null) {
      joiner.add(String.format("%sfull_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFullName()))));
    }

    // add `access_scope` to the URL query string
    if (getAccessScope() != null) {
      joiner.add(String.format("%saccess_scope%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAccessScope()))));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `user_id` to the URL query string
    if (getUserId() != null) {
      joiner.add(String.format("%suser_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUserId()))));
    }

    // add `tenant_id` to the URL query string
    if (getTenantId() != null) {
      joiner.add(String.format("%stenant_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTenantId()))));
    }

    // add `organization_id` to the URL query string
    if (getOrganizationId() != null) {
      joiner.add(String.format("%sorganization_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOrganizationId()))));
    }

    // add `created_at` to the URL query string
    if (getCreatedAt() != null) {
      joiner.add(String.format("%screated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
    }

    // add `role_name` to the URL query string
    if (getRoleName() != null) {
      joiner.add(String.format("%srole_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRoleName()))));
    }

    // add `org_role_id` to the URL query string
    if (getOrgRoleId() != null) {
      joiner.add(String.format("%sorg_role_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOrgRoleId()))));
    }

    // add `org_role_name` to the URL query string
    if (getOrgRoleName() != null) {
      joiner.add(String.format("%sorg_role_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOrgRoleName()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private PendingIdentity instance;

    public Builder() {
      this(new PendingIdentity());
    }

    protected Builder(PendingIdentity instance) {
      this.instance = instance;
    }

    public PendingIdentity.Builder email(String email) {
      this.instance.email = email;
      return this;
    }
    public PendingIdentity.Builder readOnly(Boolean readOnly) {
      this.instance.readOnly = readOnly;
      return this;
    }
    public PendingIdentity.Builder roleId(UUID roleId) {
      this.instance.roleId = JsonNullable.<UUID>of(roleId);
      return this;
    }
    public PendingIdentity.Builder roleId(JsonNullable<UUID> roleId) {
      this.instance.roleId = roleId;
      return this;
    }
    public PendingIdentity.Builder workspaceIds(List<UUID> workspaceIds) {
      this.instance.workspaceIds = JsonNullable.<List<UUID>>of(workspaceIds);
      return this;
    }
    public PendingIdentity.Builder workspaceIds(JsonNullable<List<UUID>> workspaceIds) {
      this.instance.workspaceIds = workspaceIds;
      return this;
    }
    public PendingIdentity.Builder workspaceRoleId(UUID workspaceRoleId) {
      this.instance.workspaceRoleId = JsonNullable.<UUID>of(workspaceRoleId);
      return this;
    }
    public PendingIdentity.Builder workspaceRoleId(JsonNullable<UUID> workspaceRoleId) {
      this.instance.workspaceRoleId = workspaceRoleId;
      return this;
    }
    public PendingIdentity.Builder password(String password) {
      this.instance.password = JsonNullable.<String>of(password);
      return this;
    }
    public PendingIdentity.Builder password(JsonNullable<String> password) {
      this.instance.password = password;
      return this;
    }
    public PendingIdentity.Builder fullName(String fullName) {
      this.instance.fullName = JsonNullable.<String>of(fullName);
      return this;
    }
    public PendingIdentity.Builder fullName(JsonNullable<String> fullName) {
      this.instance.fullName = fullName;
      return this;
    }
    public PendingIdentity.Builder accessScope(AccessScope accessScope) {
      this.instance.accessScope = accessScope;
      return this;
    }
    public PendingIdentity.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public PendingIdentity.Builder userId(UUID userId) {
      this.instance.userId = JsonNullable.<UUID>of(userId);
      return this;
    }
    public PendingIdentity.Builder userId(JsonNullable<UUID> userId) {
      this.instance.userId = userId;
      return this;
    }
    public PendingIdentity.Builder tenantId(UUID tenantId) {
      this.instance.tenantId = JsonNullable.<UUID>of(tenantId);
      return this;
    }
    public PendingIdentity.Builder tenantId(JsonNullable<UUID> tenantId) {
      this.instance.tenantId = tenantId;
      return this;
    }
    public PendingIdentity.Builder organizationId(UUID organizationId) {
      this.instance.organizationId = JsonNullable.<UUID>of(organizationId);
      return this;
    }
    public PendingIdentity.Builder organizationId(JsonNullable<UUID> organizationId) {
      this.instance.organizationId = organizationId;
      return this;
    }
    public PendingIdentity.Builder createdAt(OffsetDateTime createdAt) {
      this.instance.createdAt = createdAt;
      return this;
    }
    public PendingIdentity.Builder roleName(String roleName) {
      this.instance.roleName = JsonNullable.<String>of(roleName);
      return this;
    }
    public PendingIdentity.Builder roleName(JsonNullable<String> roleName) {
      this.instance.roleName = roleName;
      return this;
    }
    public PendingIdentity.Builder orgRoleId(UUID orgRoleId) {
      this.instance.orgRoleId = JsonNullable.<UUID>of(orgRoleId);
      return this;
    }
    public PendingIdentity.Builder orgRoleId(JsonNullable<UUID> orgRoleId) {
      this.instance.orgRoleId = orgRoleId;
      return this;
    }
    public PendingIdentity.Builder orgRoleName(String orgRoleName) {
      this.instance.orgRoleName = JsonNullable.<String>of(orgRoleName);
      return this;
    }
    public PendingIdentity.Builder orgRoleName(JsonNullable<String> orgRoleName) {
      this.instance.orgRoleName = orgRoleName;
      return this;
    }


    /**
    * returns a built PendingIdentity instance.
    *
    * The builder is not reusable.
    */
    public PendingIdentity build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static PendingIdentity.Builder builder() {
    return new PendingIdentity.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public PendingIdentity.Builder toBuilder() {
    return new PendingIdentity.Builder()
      .email(getEmail())
      .readOnly(getReadOnly())
      .roleId(getRoleId())
      .workspaceIds(getWorkspaceIds())
      .workspaceRoleId(getWorkspaceRoleId())
      .password(getPassword())
      .fullName(getFullName())
      .accessScope(getAccessScope())
      .id(getId())
      .userId(getUserId())
      .tenantId(getTenantId())
      .organizationId(getOrganizationId())
      .createdAt(getCreatedAt())
      .roleName(getRoleName())
      .orgRoleId(getOrgRoleId())
      .orgRoleName(getOrgRoleName());
  }

}

