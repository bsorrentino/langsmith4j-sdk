/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * AlertsAlertActionBase
 */
@JsonPropertyOrder({
  AlertsAlertActionBase.JSON_PROPERTY_ALERT_RULE_ID,
  AlertsAlertActionBase.JSON_PROPERTY_CONFIG,
  AlertsAlertActionBase.JSON_PROPERTY_ID,
  AlertsAlertActionBase.JSON_PROPERTY_TARGET
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class AlertsAlertActionBase {
  public static final String JSON_PROPERTY_ALERT_RULE_ID = "alert_rule_id";
  private JsonNullable<String> alertRuleId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CONFIG = "config";
  @javax.annotation.Nullable
  private Object config;

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  /**
   * Gets or Sets target
   */
  public enum TargetEnum {
    PAGERDUTY(String.valueOf("pagerduty")),
    
    WEBHOOK(String.valueOf("webhook"));

    private String value;

    TargetEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TargetEnum fromValue(String value) {
      for (TargetEnum b : TargetEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TARGET = "target";
  @javax.annotation.Nonnull
  private TargetEnum target;

  public AlertsAlertActionBase() { 
  }

  public AlertsAlertActionBase alertRuleId(@javax.annotation.Nullable String alertRuleId) {
    this.alertRuleId = JsonNullable.<String>of(alertRuleId);
    return this;
  }

  /**
   * Get alertRuleId
   * @return alertRuleId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAlertRuleId() {
        return alertRuleId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALERT_RULE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAlertRuleId_JsonNullable() {
    return alertRuleId;
  }
  
  @JsonProperty(JSON_PROPERTY_ALERT_RULE_ID)
  public void setAlertRuleId_JsonNullable(JsonNullable<String> alertRuleId) {
    this.alertRuleId = alertRuleId;
  }

  public void setAlertRuleId(@javax.annotation.Nullable String alertRuleId) {
    this.alertRuleId = JsonNullable.<String>of(alertRuleId);
  }


  public AlertsAlertActionBase config(@javax.annotation.Nullable Object config) {
    this.config = config;
    return this;
  }

  /**
   * Get config
   * @return config
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Object getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfig(@javax.annotation.Nullable Object config) {
    this.config = config;
  }


  public AlertsAlertActionBase id(@javax.annotation.Nullable String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public AlertsAlertActionBase target(@javax.annotation.Nonnull TargetEnum target) {
    this.target = target;
    return this;
  }

  /**
   * Get target
   * @return target
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TargetEnum getTarget() {
    return target;
  }


  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTarget(@javax.annotation.Nonnull TargetEnum target) {
    this.target = target;
  }


  /**
   * Return true if this alerts.AlertActionBase object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertsAlertActionBase alertsAlertActionBase = (AlertsAlertActionBase) o;
    return equalsNullable(this.alertRuleId, alertsAlertActionBase.alertRuleId) &&
        Objects.equals(this.config, alertsAlertActionBase.config) &&
        equalsNullable(this.id, alertsAlertActionBase.id) &&
        Objects.equals(this.target, alertsAlertActionBase.target);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(alertRuleId), config, hashCodeNullable(id), target);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertsAlertActionBase {\n");
    sb.append("    alertRuleId: ").append(toIndentedString(alertRuleId)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `alert_rule_id` to the URL query string
    if (getAlertRuleId() != null) {
      joiner.add(String.format("%salert_rule_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAlertRuleId()))));
    }

    // add `config` to the URL query string
    if (getConfig() != null) {
      joiner.add(String.format("%sconfig%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getConfig()))));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `target` to the URL query string
    if (getTarget() != null) {
      joiner.add(String.format("%starget%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTarget()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private AlertsAlertActionBase instance;

    public Builder() {
      this(new AlertsAlertActionBase());
    }

    protected Builder(AlertsAlertActionBase instance) {
      this.instance = instance;
    }

    public AlertsAlertActionBase.Builder alertRuleId(String alertRuleId) {
      this.instance.alertRuleId = JsonNullable.<String>of(alertRuleId);
      return this;
    }
    public AlertsAlertActionBase.Builder alertRuleId(JsonNullable<String> alertRuleId) {
      this.instance.alertRuleId = alertRuleId;
      return this;
    }
    public AlertsAlertActionBase.Builder config(Object config) {
      this.instance.config = config;
      return this;
    }
    public AlertsAlertActionBase.Builder id(String id) {
      this.instance.id = JsonNullable.<String>of(id);
      return this;
    }
    public AlertsAlertActionBase.Builder id(JsonNullable<String> id) {
      this.instance.id = id;
      return this;
    }
    public AlertsAlertActionBase.Builder target(TargetEnum target) {
      this.instance.target = target;
      return this;
    }


    /**
    * returns a built AlertsAlertActionBase instance.
    *
    * The builder is not reusable.
    */
    public AlertsAlertActionBase build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static AlertsAlertActionBase.Builder builder() {
    return new AlertsAlertActionBase.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public AlertsAlertActionBase.Builder toBuilder() {
    return new AlertsAlertActionBase.Builder()
      .alertRuleId(getAlertRuleId())
      .config(getConfig())
      .id(getId())
      .target(getTarget());
  }

}

