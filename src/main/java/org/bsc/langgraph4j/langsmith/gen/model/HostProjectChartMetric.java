/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * LGP Metrics you can chart.
 */
public enum HostProjectChartMetric {
  
  MEMORY_USAGE("memory_usage"),
  
  CPU_USAGE("cpu_usage"),
  
  DISK_USAGE("disk_usage"),
  
  RESTART_COUNT("restart_count"),
  
  REPLICA_COUNT("replica_count"),
  
  WORKER_COUNT("worker_count"),
  
  LG_RUN_COUNT("lg_run_count"),
  
  RESPONSES_PER_SECOND("responses_per_second"),
  
  ERROR_RESPONSES_PER_SECOND("error_responses_per_second"),
  
  P95_LATENCY("p95_latency");

  private String value;

  HostProjectChartMetric(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static HostProjectChartMetric fromValue(String value) {
    for (HostProjectChartMetric b : HostProjectChartMetric.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

