/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.RunStatsGroupBy;
import org.bsc.langgraph4j.langsmith.gen.model.RunStatsSelect;
import org.bsc.langgraph4j.langsmith.gen.model.RunTypeEnum;
import org.bsc.langgraph4j.langsmith.gen.model.RunsFilterDataSourceTypeEnum;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Query params for run stats.
 */
@JsonPropertyOrder({
  RunStatsQueryParams.JSON_PROPERTY_ID,
  RunStatsQueryParams.JSON_PROPERTY_TRACE,
  RunStatsQueryParams.JSON_PROPERTY_PARENT_RUN,
  RunStatsQueryParams.JSON_PROPERTY_RUN_TYPE,
  RunStatsQueryParams.JSON_PROPERTY_SESSION,
  RunStatsQueryParams.JSON_PROPERTY_REFERENCE_EXAMPLE,
  RunStatsQueryParams.JSON_PROPERTY_EXECUTION_ORDER,
  RunStatsQueryParams.JSON_PROPERTY_START_TIME,
  RunStatsQueryParams.JSON_PROPERTY_END_TIME,
  RunStatsQueryParams.JSON_PROPERTY_ERROR,
  RunStatsQueryParams.JSON_PROPERTY_QUERY,
  RunStatsQueryParams.JSON_PROPERTY_FILTER,
  RunStatsQueryParams.JSON_PROPERTY_TRACE_FILTER,
  RunStatsQueryParams.JSON_PROPERTY_TREE_FILTER,
  RunStatsQueryParams.JSON_PROPERTY_IS_ROOT,
  RunStatsQueryParams.JSON_PROPERTY_DATA_SOURCE_TYPE,
  RunStatsQueryParams.JSON_PROPERTY_SKIP_PAGINATION,
  RunStatsQueryParams.JSON_PROPERTY_SEARCH_FILTER,
  RunStatsQueryParams.JSON_PROPERTY_USE_EXPERIMENTAL_SEARCH,
  RunStatsQueryParams.JSON_PROPERTY_GROUP_BY,
  RunStatsQueryParams.JSON_PROPERTY_GROUPS,
  RunStatsQueryParams.JSON_PROPERTY_SELECT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:14:57.775316+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class RunStatsQueryParams {
  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<List<UUID>> id = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_TRACE = "trace";
  private JsonNullable<UUID> trace = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_PARENT_RUN = "parent_run";
  private JsonNullable<UUID> parentRun = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_RUN_TYPE = "run_type";
  private JsonNullable<RunTypeEnum> runType = JsonNullable.<RunTypeEnum>undefined();

  public static final String JSON_PROPERTY_SESSION = "session";
  private JsonNullable<List<UUID>> session = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_REFERENCE_EXAMPLE = "reference_example";
  private JsonNullable<List<UUID>> referenceExample = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_EXECUTION_ORDER = "execution_order";
  private JsonNullable<Integer> executionOrder = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_START_TIME = "start_time";
  private JsonNullable<OffsetDateTime> startTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  private JsonNullable<OffsetDateTime> endTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_ERROR = "error";
  private JsonNullable<Boolean> error = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_QUERY = "query";
  private JsonNullable<String> query = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FILTER = "filter";
  private JsonNullable<String> filter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TRACE_FILTER = "trace_filter";
  private JsonNullable<String> traceFilter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TREE_FILTER = "tree_filter";
  private JsonNullable<String> treeFilter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_ROOT = "is_root";
  private JsonNullable<Boolean> isRoot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_DATA_SOURCE_TYPE = "data_source_type";
  private JsonNullable<RunsFilterDataSourceTypeEnum> dataSourceType = JsonNullable.<RunsFilterDataSourceTypeEnum>undefined();

  public static final String JSON_PROPERTY_SKIP_PAGINATION = "skip_pagination";
  private JsonNullable<Boolean> skipPagination = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_SEARCH_FILTER = "search_filter";
  private JsonNullable<String> searchFilter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USE_EXPERIMENTAL_SEARCH = "use_experimental_search";
  @javax.annotation.Nullable
  private Boolean useExperimentalSearch = false;

  public static final String JSON_PROPERTY_GROUP_BY = "group_by";
  private JsonNullable<RunStatsGroupBy> groupBy = JsonNullable.<RunStatsGroupBy>undefined();

  public static final String JSON_PROPERTY_GROUPS = "groups";
  private JsonNullable<List<String>> groups = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SELECT = "select";
  private JsonNullable<List<RunStatsSelect>> select = JsonNullable.<List<RunStatsSelect>>undefined();

  public RunStatsQueryParams() { 
  }

  public RunStatsQueryParams id(@javax.annotation.Nullable List<UUID> id) {
    this.id = JsonNullable.<List<UUID>>of(id);
    return this;
  }

  public RunStatsQueryParams addIdItem(UUID idItem) {
    if (this.id == null || !this.id.isPresent()) {
      this.id = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.id.get().add(idItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<List<UUID>> id) {
    this.id = id;
  }

  public void setId(@javax.annotation.Nullable List<UUID> id) {
    this.id = JsonNullable.<List<UUID>>of(id);
  }


  public RunStatsQueryParams trace(@javax.annotation.Nullable UUID trace) {
    this.trace = JsonNullable.<UUID>of(trace);
    return this;
  }

  /**
   * Get trace
   * @return trace
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getTrace() {
        return trace.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTrace_JsonNullable() {
    return trace;
  }
  
  @JsonProperty(JSON_PROPERTY_TRACE)
  public void setTrace_JsonNullable(JsonNullable<UUID> trace) {
    this.trace = trace;
  }

  public void setTrace(@javax.annotation.Nullable UUID trace) {
    this.trace = JsonNullable.<UUID>of(trace);
  }


  public RunStatsQueryParams parentRun(@javax.annotation.Nullable UUID parentRun) {
    this.parentRun = JsonNullable.<UUID>of(parentRun);
    return this;
  }

  /**
   * Get parentRun
   * @return parentRun
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getParentRun() {
        return parentRun.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_RUN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getParentRun_JsonNullable() {
    return parentRun;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_RUN)
  public void setParentRun_JsonNullable(JsonNullable<UUID> parentRun) {
    this.parentRun = parentRun;
  }

  public void setParentRun(@javax.annotation.Nullable UUID parentRun) {
    this.parentRun = JsonNullable.<UUID>of(parentRun);
  }


  public RunStatsQueryParams runType(@javax.annotation.Nullable RunTypeEnum runType) {
    this.runType = JsonNullable.<RunTypeEnum>of(runType);
    return this;
  }

  /**
   * Get runType
   * @return runType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public RunTypeEnum getRunType() {
        return runType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RunTypeEnum> getRunType_JsonNullable() {
    return runType;
  }
  
  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  public void setRunType_JsonNullable(JsonNullable<RunTypeEnum> runType) {
    this.runType = runType;
  }

  public void setRunType(@javax.annotation.Nullable RunTypeEnum runType) {
    this.runType = JsonNullable.<RunTypeEnum>of(runType);
  }


  public RunStatsQueryParams session(@javax.annotation.Nullable List<UUID> session) {
    this.session = JsonNullable.<List<UUID>>of(session);
    return this;
  }

  public RunStatsQueryParams addSessionItem(UUID sessionItem) {
    if (this.session == null || !this.session.isPresent()) {
      this.session = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.session.get().add(sessionItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get session
   * @return session
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getSession() {
        return session.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getSession_JsonNullable() {
    return session;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION)
  public void setSession_JsonNullable(JsonNullable<List<UUID>> session) {
    this.session = session;
  }

  public void setSession(@javax.annotation.Nullable List<UUID> session) {
    this.session = JsonNullable.<List<UUID>>of(session);
  }


  public RunStatsQueryParams referenceExample(@javax.annotation.Nullable List<UUID> referenceExample) {
    this.referenceExample = JsonNullable.<List<UUID>>of(referenceExample);
    return this;
  }

  public RunStatsQueryParams addReferenceExampleItem(UUID referenceExampleItem) {
    if (this.referenceExample == null || !this.referenceExample.isPresent()) {
      this.referenceExample = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.referenceExample.get().add(referenceExampleItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get referenceExample
   * @return referenceExample
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getReferenceExample() {
        return referenceExample.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFERENCE_EXAMPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getReferenceExample_JsonNullable() {
    return referenceExample;
  }
  
  @JsonProperty(JSON_PROPERTY_REFERENCE_EXAMPLE)
  public void setReferenceExample_JsonNullable(JsonNullable<List<UUID>> referenceExample) {
    this.referenceExample = referenceExample;
  }

  public void setReferenceExample(@javax.annotation.Nullable List<UUID> referenceExample) {
    this.referenceExample = JsonNullable.<List<UUID>>of(referenceExample);
  }


  public RunStatsQueryParams executionOrder(@javax.annotation.Nullable Integer executionOrder) {
    this.executionOrder = JsonNullable.<Integer>of(executionOrder);
    return this;
  }

  /**
   * Get executionOrder
   * minimum: 1
   * maximum: 1
   * @return executionOrder
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getExecutionOrder() {
        return executionOrder.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXECUTION_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getExecutionOrder_JsonNullable() {
    return executionOrder;
  }
  
  @JsonProperty(JSON_PROPERTY_EXECUTION_ORDER)
  public void setExecutionOrder_JsonNullable(JsonNullable<Integer> executionOrder) {
    this.executionOrder = executionOrder;
  }

  public void setExecutionOrder(@javax.annotation.Nullable Integer executionOrder) {
    this.executionOrder = JsonNullable.<Integer>of(executionOrder);
  }


  public RunStatsQueryParams startTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = JsonNullable.<OffsetDateTime>of(startTime);
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getStartTime() {
        return startTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getStartTime_JsonNullable() {
    return startTime;
  }
  
  @JsonProperty(JSON_PROPERTY_START_TIME)
  public void setStartTime_JsonNullable(JsonNullable<OffsetDateTime> startTime) {
    this.startTime = startTime;
  }

  public void setStartTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = JsonNullable.<OffsetDateTime>of(startTime);
  }


  public RunStatsQueryParams endTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getEndTime() {
        return endTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEndTime_JsonNullable() {
    return endTime;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME)
  public void setEndTime_JsonNullable(JsonNullable<OffsetDateTime> endTime) {
    this.endTime = endTime;
  }

  public void setEndTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
  }


  public RunStatsQueryParams error(@javax.annotation.Nullable Boolean error) {
    this.error = JsonNullable.<Boolean>of(error);
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getError() {
        return error.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getError_JsonNullable() {
    return error;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR)
  public void setError_JsonNullable(JsonNullable<Boolean> error) {
    this.error = error;
  }

  public void setError(@javax.annotation.Nullable Boolean error) {
    this.error = JsonNullable.<Boolean>of(error);
  }


  public RunStatsQueryParams query(@javax.annotation.Nullable String query) {
    this.query = JsonNullable.<String>of(query);
    return this;
  }

  /**
   * Get query
   * @return query
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getQuery() {
        return query.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getQuery_JsonNullable() {
    return query;
  }
  
  @JsonProperty(JSON_PROPERTY_QUERY)
  public void setQuery_JsonNullable(JsonNullable<String> query) {
    this.query = query;
  }

  public void setQuery(@javax.annotation.Nullable String query) {
    this.query = JsonNullable.<String>of(query);
  }


  public RunStatsQueryParams filter(@javax.annotation.Nullable String filter) {
    this.filter = JsonNullable.<String>of(filter);
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFilter() {
        return filter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFilter_JsonNullable() {
    return filter;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER)
  public void setFilter_JsonNullable(JsonNullable<String> filter) {
    this.filter = filter;
  }

  public void setFilter(@javax.annotation.Nullable String filter) {
    this.filter = JsonNullable.<String>of(filter);
  }


  public RunStatsQueryParams traceFilter(@javax.annotation.Nullable String traceFilter) {
    this.traceFilter = JsonNullable.<String>of(traceFilter);
    return this;
  }

  /**
   * Get traceFilter
   * @return traceFilter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTraceFilter() {
        return traceFilter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRACE_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTraceFilter_JsonNullable() {
    return traceFilter;
  }
  
  @JsonProperty(JSON_PROPERTY_TRACE_FILTER)
  public void setTraceFilter_JsonNullable(JsonNullable<String> traceFilter) {
    this.traceFilter = traceFilter;
  }

  public void setTraceFilter(@javax.annotation.Nullable String traceFilter) {
    this.traceFilter = JsonNullable.<String>of(traceFilter);
  }


  public RunStatsQueryParams treeFilter(@javax.annotation.Nullable String treeFilter) {
    this.treeFilter = JsonNullable.<String>of(treeFilter);
    return this;
  }

  /**
   * Get treeFilter
   * @return treeFilter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTreeFilter() {
        return treeFilter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TREE_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTreeFilter_JsonNullable() {
    return treeFilter;
  }
  
  @JsonProperty(JSON_PROPERTY_TREE_FILTER)
  public void setTreeFilter_JsonNullable(JsonNullable<String> treeFilter) {
    this.treeFilter = treeFilter;
  }

  public void setTreeFilter(@javax.annotation.Nullable String treeFilter) {
    this.treeFilter = JsonNullable.<String>of(treeFilter);
  }


  public RunStatsQueryParams isRoot(@javax.annotation.Nullable Boolean isRoot) {
    this.isRoot = JsonNullable.<Boolean>of(isRoot);
    return this;
  }

  /**
   * Get isRoot
   * @return isRoot
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getIsRoot() {
        return isRoot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_ROOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsRoot_JsonNullable() {
    return isRoot;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_ROOT)
  public void setIsRoot_JsonNullable(JsonNullable<Boolean> isRoot) {
    this.isRoot = isRoot;
  }

  public void setIsRoot(@javax.annotation.Nullable Boolean isRoot) {
    this.isRoot = JsonNullable.<Boolean>of(isRoot);
  }


  public RunStatsQueryParams dataSourceType(@javax.annotation.Nullable RunsFilterDataSourceTypeEnum dataSourceType) {
    this.dataSourceType = JsonNullable.<RunsFilterDataSourceTypeEnum>of(dataSourceType);
    return this;
  }

  /**
   * Get dataSourceType
   * @return dataSourceType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public RunsFilterDataSourceTypeEnum getDataSourceType() {
        return dataSourceType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATA_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RunsFilterDataSourceTypeEnum> getDataSourceType_JsonNullable() {
    return dataSourceType;
  }
  
  @JsonProperty(JSON_PROPERTY_DATA_SOURCE_TYPE)
  public void setDataSourceType_JsonNullable(JsonNullable<RunsFilterDataSourceTypeEnum> dataSourceType) {
    this.dataSourceType = dataSourceType;
  }

  public void setDataSourceType(@javax.annotation.Nullable RunsFilterDataSourceTypeEnum dataSourceType) {
    this.dataSourceType = JsonNullable.<RunsFilterDataSourceTypeEnum>of(dataSourceType);
  }


  public RunStatsQueryParams skipPagination(@javax.annotation.Nullable Boolean skipPagination) {
    this.skipPagination = JsonNullable.<Boolean>of(skipPagination);
    return this;
  }

  /**
   * Get skipPagination
   * @return skipPagination
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getSkipPagination() {
        return skipPagination.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SKIP_PAGINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getSkipPagination_JsonNullable() {
    return skipPagination;
  }
  
  @JsonProperty(JSON_PROPERTY_SKIP_PAGINATION)
  public void setSkipPagination_JsonNullable(JsonNullable<Boolean> skipPagination) {
    this.skipPagination = skipPagination;
  }

  public void setSkipPagination(@javax.annotation.Nullable Boolean skipPagination) {
    this.skipPagination = JsonNullable.<Boolean>of(skipPagination);
  }


  public RunStatsQueryParams searchFilter(@javax.annotation.Nullable String searchFilter) {
    this.searchFilter = JsonNullable.<String>of(searchFilter);
    return this;
  }

  /**
   * Get searchFilter
   * @return searchFilter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSearchFilter() {
        return searchFilter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSearchFilter_JsonNullable() {
    return searchFilter;
  }
  
  @JsonProperty(JSON_PROPERTY_SEARCH_FILTER)
  public void setSearchFilter_JsonNullable(JsonNullable<String> searchFilter) {
    this.searchFilter = searchFilter;
  }

  public void setSearchFilter(@javax.annotation.Nullable String searchFilter) {
    this.searchFilter = JsonNullable.<String>of(searchFilter);
  }


  public RunStatsQueryParams useExperimentalSearch(@javax.annotation.Nullable Boolean useExperimentalSearch) {
    this.useExperimentalSearch = useExperimentalSearch;
    return this;
  }

  /**
   * Get useExperimentalSearch
   * @return useExperimentalSearch
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_EXPERIMENTAL_SEARCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getUseExperimentalSearch() {
    return useExperimentalSearch;
  }


  @JsonProperty(JSON_PROPERTY_USE_EXPERIMENTAL_SEARCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseExperimentalSearch(@javax.annotation.Nullable Boolean useExperimentalSearch) {
    this.useExperimentalSearch = useExperimentalSearch;
  }


  public RunStatsQueryParams groupBy(@javax.annotation.Nullable RunStatsGroupBy groupBy) {
    this.groupBy = JsonNullable.<RunStatsGroupBy>of(groupBy);
    return this;
  }

  /**
   * Get groupBy
   * @return groupBy
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public RunStatsGroupBy getGroupBy() {
        return groupBy.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GROUP_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RunStatsGroupBy> getGroupBy_JsonNullable() {
    return groupBy;
  }
  
  @JsonProperty(JSON_PROPERTY_GROUP_BY)
  public void setGroupBy_JsonNullable(JsonNullable<RunStatsGroupBy> groupBy) {
    this.groupBy = groupBy;
  }

  public void setGroupBy(@javax.annotation.Nullable RunStatsGroupBy groupBy) {
    this.groupBy = JsonNullable.<RunStatsGroupBy>of(groupBy);
  }


  public RunStatsQueryParams groups(@javax.annotation.Nullable List<String> groups) {
    this.groups = JsonNullable.<List<String>>of(groups);
    return this;
  }

  public RunStatsQueryParams addGroupsItem(String groupsItem) {
    if (this.groups == null || !this.groups.isPresent()) {
      this.groups = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.groups.get().add(groupsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getGroups() {
        return groups.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getGroups_JsonNullable() {
    return groups;
  }
  
  @JsonProperty(JSON_PROPERTY_GROUPS)
  public void setGroups_JsonNullable(JsonNullable<List<String>> groups) {
    this.groups = groups;
  }

  public void setGroups(@javax.annotation.Nullable List<String> groups) {
    this.groups = JsonNullable.<List<String>>of(groups);
  }


  public RunStatsQueryParams select(@javax.annotation.Nullable List<RunStatsSelect> select) {
    this.select = JsonNullable.<List<RunStatsSelect>>of(select);
    return this;
  }

  public RunStatsQueryParams addSelectItem(RunStatsSelect selectItem) {
    if (this.select == null || !this.select.isPresent()) {
      this.select = JsonNullable.<List<RunStatsSelect>>of(new ArrayList<>());
    }
    try {
      this.select.get().add(selectItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get select
   * @return select
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<RunStatsSelect> getSelect() {
        return select.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SELECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<RunStatsSelect>> getSelect_JsonNullable() {
    return select;
  }
  
  @JsonProperty(JSON_PROPERTY_SELECT)
  public void setSelect_JsonNullable(JsonNullable<List<RunStatsSelect>> select) {
    this.select = select;
  }

  public void setSelect(@javax.annotation.Nullable List<RunStatsSelect> select) {
    this.select = JsonNullable.<List<RunStatsSelect>>of(select);
  }


  /**
   * Return true if this RunStatsQueryParams object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunStatsQueryParams runStatsQueryParams = (RunStatsQueryParams) o;
    return equalsNullable(this.id, runStatsQueryParams.id) &&
        equalsNullable(this.trace, runStatsQueryParams.trace) &&
        equalsNullable(this.parentRun, runStatsQueryParams.parentRun) &&
        equalsNullable(this.runType, runStatsQueryParams.runType) &&
        equalsNullable(this.session, runStatsQueryParams.session) &&
        equalsNullable(this.referenceExample, runStatsQueryParams.referenceExample) &&
        equalsNullable(this.executionOrder, runStatsQueryParams.executionOrder) &&
        equalsNullable(this.startTime, runStatsQueryParams.startTime) &&
        equalsNullable(this.endTime, runStatsQueryParams.endTime) &&
        equalsNullable(this.error, runStatsQueryParams.error) &&
        equalsNullable(this.query, runStatsQueryParams.query) &&
        equalsNullable(this.filter, runStatsQueryParams.filter) &&
        equalsNullable(this.traceFilter, runStatsQueryParams.traceFilter) &&
        equalsNullable(this.treeFilter, runStatsQueryParams.treeFilter) &&
        equalsNullable(this.isRoot, runStatsQueryParams.isRoot) &&
        equalsNullable(this.dataSourceType, runStatsQueryParams.dataSourceType) &&
        equalsNullable(this.skipPagination, runStatsQueryParams.skipPagination) &&
        equalsNullable(this.searchFilter, runStatsQueryParams.searchFilter) &&
        Objects.equals(this.useExperimentalSearch, runStatsQueryParams.useExperimentalSearch) &&
        equalsNullable(this.groupBy, runStatsQueryParams.groupBy) &&
        equalsNullable(this.groups, runStatsQueryParams.groups) &&
        equalsNullable(this.select, runStatsQueryParams.select);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(id), hashCodeNullable(trace), hashCodeNullable(parentRun), hashCodeNullable(runType), hashCodeNullable(session), hashCodeNullable(referenceExample), hashCodeNullable(executionOrder), hashCodeNullable(startTime), hashCodeNullable(endTime), hashCodeNullable(error), hashCodeNullable(query), hashCodeNullable(filter), hashCodeNullable(traceFilter), hashCodeNullable(treeFilter), hashCodeNullable(isRoot), hashCodeNullable(dataSourceType), hashCodeNullable(skipPagination), hashCodeNullable(searchFilter), useExperimentalSearch, hashCodeNullable(groupBy), hashCodeNullable(groups), hashCodeNullable(select));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunStatsQueryParams {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    trace: ").append(toIndentedString(trace)).append("\n");
    sb.append("    parentRun: ").append(toIndentedString(parentRun)).append("\n");
    sb.append("    runType: ").append(toIndentedString(runType)).append("\n");
    sb.append("    session: ").append(toIndentedString(session)).append("\n");
    sb.append("    referenceExample: ").append(toIndentedString(referenceExample)).append("\n");
    sb.append("    executionOrder: ").append(toIndentedString(executionOrder)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    traceFilter: ").append(toIndentedString(traceFilter)).append("\n");
    sb.append("    treeFilter: ").append(toIndentedString(treeFilter)).append("\n");
    sb.append("    isRoot: ").append(toIndentedString(isRoot)).append("\n");
    sb.append("    dataSourceType: ").append(toIndentedString(dataSourceType)).append("\n");
    sb.append("    skipPagination: ").append(toIndentedString(skipPagination)).append("\n");
    sb.append("    searchFilter: ").append(toIndentedString(searchFilter)).append("\n");
    sb.append("    useExperimentalSearch: ").append(toIndentedString(useExperimentalSearch)).append("\n");
    sb.append("    groupBy: ").append(toIndentedString(groupBy)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    select: ").append(toIndentedString(select)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      for (int i = 0; i < getId().size(); i++) {
        if (getId().get(i) != null) {
          joiner.add(String.format("%sid%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getId().get(i)))));
        }
      }
    }

    // add `trace` to the URL query string
    if (getTrace() != null) {
      joiner.add(String.format("%strace%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTrace()))));
    }

    // add `parent_run` to the URL query string
    if (getParentRun() != null) {
      joiner.add(String.format("%sparent_run%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentRun()))));
    }

    // add `run_type` to the URL query string
    if (getRunType() != null) {
      joiner.add(String.format("%srun_type%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRunType()))));
    }

    // add `session` to the URL query string
    if (getSession() != null) {
      for (int i = 0; i < getSession().size(); i++) {
        if (getSession().get(i) != null) {
          joiner.add(String.format("%ssession%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getSession().get(i)))));
        }
      }
    }

    // add `reference_example` to the URL query string
    if (getReferenceExample() != null) {
      for (int i = 0; i < getReferenceExample().size(); i++) {
        if (getReferenceExample().get(i) != null) {
          joiner.add(String.format("%sreference_example%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getReferenceExample().get(i)))));
        }
      }
    }

    // add `execution_order` to the URL query string
    if (getExecutionOrder() != null) {
      joiner.add(String.format("%sexecution_order%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExecutionOrder()))));
    }

    // add `start_time` to the URL query string
    if (getStartTime() != null) {
      joiner.add(String.format("%sstart_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStartTime()))));
    }

    // add `end_time` to the URL query string
    if (getEndTime() != null) {
      joiner.add(String.format("%send_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEndTime()))));
    }

    // add `error` to the URL query string
    if (getError() != null) {
      joiner.add(String.format("%serror%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getError()))));
    }

    // add `query` to the URL query string
    if (getQuery() != null) {
      joiner.add(String.format("%squery%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getQuery()))));
    }

    // add `filter` to the URL query string
    if (getFilter() != null) {
      joiner.add(String.format("%sfilter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFilter()))));
    }

    // add `trace_filter` to the URL query string
    if (getTraceFilter() != null) {
      joiner.add(String.format("%strace_filter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTraceFilter()))));
    }

    // add `tree_filter` to the URL query string
    if (getTreeFilter() != null) {
      joiner.add(String.format("%stree_filter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTreeFilter()))));
    }

    // add `is_root` to the URL query string
    if (getIsRoot() != null) {
      joiner.add(String.format("%sis_root%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsRoot()))));
    }

    // add `data_source_type` to the URL query string
    if (getDataSourceType() != null) {
      joiner.add(String.format("%sdata_source_type%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDataSourceType()))));
    }

    // add `skip_pagination` to the URL query string
    if (getSkipPagination() != null) {
      joiner.add(String.format("%sskip_pagination%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSkipPagination()))));
    }

    // add `search_filter` to the URL query string
    if (getSearchFilter() != null) {
      joiner.add(String.format("%ssearch_filter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSearchFilter()))));
    }

    // add `use_experimental_search` to the URL query string
    if (getUseExperimentalSearch() != null) {
      joiner.add(String.format("%suse_experimental_search%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUseExperimentalSearch()))));
    }

    // add `group_by` to the URL query string
    if (getGroupBy() != null) {
      joiner.add(getGroupBy().toUrlQueryString(prefix + "group_by" + suffix));
    }

    // add `groups` to the URL query string
    if (getGroups() != null) {
      for (int i = 0; i < getGroups().size(); i++) {
        joiner.add(String.format("%sgroups%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getGroups().get(i)))));
      }
    }

    // add `select` to the URL query string
    if (getSelect() != null) {
      for (int i = 0; i < getSelect().size(); i++) {
        if (getSelect().get(i) != null) {
          joiner.add(String.format("%sselect%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getSelect().get(i)))));
        }
      }
    }

    return joiner.toString();
  }

    public static class Builder {

    private RunStatsQueryParams instance;

    public Builder() {
      this(new RunStatsQueryParams());
    }

    protected Builder(RunStatsQueryParams instance) {
      this.instance = instance;
    }

    public RunStatsQueryParams.Builder id(List<UUID> id) {
      this.instance.id = JsonNullable.<List<UUID>>of(id);
      return this;
    }
    public RunStatsQueryParams.Builder id(JsonNullable<List<UUID>> id) {
      this.instance.id = id;
      return this;
    }
    public RunStatsQueryParams.Builder trace(UUID trace) {
      this.instance.trace = JsonNullable.<UUID>of(trace);
      return this;
    }
    public RunStatsQueryParams.Builder trace(JsonNullable<UUID> trace) {
      this.instance.trace = trace;
      return this;
    }
    public RunStatsQueryParams.Builder parentRun(UUID parentRun) {
      this.instance.parentRun = JsonNullable.<UUID>of(parentRun);
      return this;
    }
    public RunStatsQueryParams.Builder parentRun(JsonNullable<UUID> parentRun) {
      this.instance.parentRun = parentRun;
      return this;
    }
    public RunStatsQueryParams.Builder runType(RunTypeEnum runType) {
      this.instance.runType = JsonNullable.<RunTypeEnum>of(runType);
      return this;
    }
    public RunStatsQueryParams.Builder runType(JsonNullable<RunTypeEnum> runType) {
      this.instance.runType = runType;
      return this;
    }
    public RunStatsQueryParams.Builder session(List<UUID> session) {
      this.instance.session = JsonNullable.<List<UUID>>of(session);
      return this;
    }
    public RunStatsQueryParams.Builder session(JsonNullable<List<UUID>> session) {
      this.instance.session = session;
      return this;
    }
    public RunStatsQueryParams.Builder referenceExample(List<UUID> referenceExample) {
      this.instance.referenceExample = JsonNullable.<List<UUID>>of(referenceExample);
      return this;
    }
    public RunStatsQueryParams.Builder referenceExample(JsonNullable<List<UUID>> referenceExample) {
      this.instance.referenceExample = referenceExample;
      return this;
    }
    public RunStatsQueryParams.Builder executionOrder(Integer executionOrder) {
      this.instance.executionOrder = JsonNullable.<Integer>of(executionOrder);
      return this;
    }
    public RunStatsQueryParams.Builder executionOrder(JsonNullable<Integer> executionOrder) {
      this.instance.executionOrder = executionOrder;
      return this;
    }
    public RunStatsQueryParams.Builder startTime(OffsetDateTime startTime) {
      this.instance.startTime = JsonNullable.<OffsetDateTime>of(startTime);
      return this;
    }
    public RunStatsQueryParams.Builder startTime(JsonNullable<OffsetDateTime> startTime) {
      this.instance.startTime = startTime;
      return this;
    }
    public RunStatsQueryParams.Builder endTime(OffsetDateTime endTime) {
      this.instance.endTime = JsonNullable.<OffsetDateTime>of(endTime);
      return this;
    }
    public RunStatsQueryParams.Builder endTime(JsonNullable<OffsetDateTime> endTime) {
      this.instance.endTime = endTime;
      return this;
    }
    public RunStatsQueryParams.Builder error(Boolean error) {
      this.instance.error = JsonNullable.<Boolean>of(error);
      return this;
    }
    public RunStatsQueryParams.Builder error(JsonNullable<Boolean> error) {
      this.instance.error = error;
      return this;
    }
    public RunStatsQueryParams.Builder query(String query) {
      this.instance.query = JsonNullable.<String>of(query);
      return this;
    }
    public RunStatsQueryParams.Builder query(JsonNullable<String> query) {
      this.instance.query = query;
      return this;
    }
    public RunStatsQueryParams.Builder filter(String filter) {
      this.instance.filter = JsonNullable.<String>of(filter);
      return this;
    }
    public RunStatsQueryParams.Builder filter(JsonNullable<String> filter) {
      this.instance.filter = filter;
      return this;
    }
    public RunStatsQueryParams.Builder traceFilter(String traceFilter) {
      this.instance.traceFilter = JsonNullable.<String>of(traceFilter);
      return this;
    }
    public RunStatsQueryParams.Builder traceFilter(JsonNullable<String> traceFilter) {
      this.instance.traceFilter = traceFilter;
      return this;
    }
    public RunStatsQueryParams.Builder treeFilter(String treeFilter) {
      this.instance.treeFilter = JsonNullable.<String>of(treeFilter);
      return this;
    }
    public RunStatsQueryParams.Builder treeFilter(JsonNullable<String> treeFilter) {
      this.instance.treeFilter = treeFilter;
      return this;
    }
    public RunStatsQueryParams.Builder isRoot(Boolean isRoot) {
      this.instance.isRoot = JsonNullable.<Boolean>of(isRoot);
      return this;
    }
    public RunStatsQueryParams.Builder isRoot(JsonNullable<Boolean> isRoot) {
      this.instance.isRoot = isRoot;
      return this;
    }
    public RunStatsQueryParams.Builder dataSourceType(RunsFilterDataSourceTypeEnum dataSourceType) {
      this.instance.dataSourceType = JsonNullable.<RunsFilterDataSourceTypeEnum>of(dataSourceType);
      return this;
    }
    public RunStatsQueryParams.Builder dataSourceType(JsonNullable<RunsFilterDataSourceTypeEnum> dataSourceType) {
      this.instance.dataSourceType = dataSourceType;
      return this;
    }
    public RunStatsQueryParams.Builder skipPagination(Boolean skipPagination) {
      this.instance.skipPagination = JsonNullable.<Boolean>of(skipPagination);
      return this;
    }
    public RunStatsQueryParams.Builder skipPagination(JsonNullable<Boolean> skipPagination) {
      this.instance.skipPagination = skipPagination;
      return this;
    }
    public RunStatsQueryParams.Builder searchFilter(String searchFilter) {
      this.instance.searchFilter = JsonNullable.<String>of(searchFilter);
      return this;
    }
    public RunStatsQueryParams.Builder searchFilter(JsonNullable<String> searchFilter) {
      this.instance.searchFilter = searchFilter;
      return this;
    }
    public RunStatsQueryParams.Builder useExperimentalSearch(Boolean useExperimentalSearch) {
      this.instance.useExperimentalSearch = useExperimentalSearch;
      return this;
    }
    public RunStatsQueryParams.Builder groupBy(RunStatsGroupBy groupBy) {
      this.instance.groupBy = JsonNullable.<RunStatsGroupBy>of(groupBy);
      return this;
    }
    public RunStatsQueryParams.Builder groupBy(JsonNullable<RunStatsGroupBy> groupBy) {
      this.instance.groupBy = groupBy;
      return this;
    }
    public RunStatsQueryParams.Builder groups(List<String> groups) {
      this.instance.groups = JsonNullable.<List<String>>of(groups);
      return this;
    }
    public RunStatsQueryParams.Builder groups(JsonNullable<List<String>> groups) {
      this.instance.groups = groups;
      return this;
    }
    public RunStatsQueryParams.Builder select(List<RunStatsSelect> select) {
      this.instance.select = JsonNullable.<List<RunStatsSelect>>of(select);
      return this;
    }
    public RunStatsQueryParams.Builder select(JsonNullable<List<RunStatsSelect>> select) {
      this.instance.select = select;
      return this;
    }


    /**
    * returns a built RunStatsQueryParams instance.
    *
    * The builder is not reusable.
    */
    public RunStatsQueryParams build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static RunStatsQueryParams.Builder builder() {
    return new RunStatsQueryParams.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public RunStatsQueryParams.Builder toBuilder() {
    return new RunStatsQueryParams.Builder()
      .id(getId())
      .trace(getTrace())
      .parentRun(getParentRun())
      .runType(getRunType())
      .session(getSession())
      .referenceExample(getReferenceExample())
      .executionOrder(getExecutionOrder())
      .startTime(getStartTime())
      .endTime(getEndTime())
      .error(getError())
      .query(getQuery())
      .filter(getFilter())
      .traceFilter(getTraceFilter())
      .treeFilter(getTreeFilter())
      .isRoot(getIsRoot())
      .dataSourceType(getDataSourceType())
      .skipPagination(getSkipPagination())
      .searchFilter(getSearchFilter())
      .useExperimentalSearch(getUseExperimentalSearch())
      .groupBy(getGroupBy())
      .groups(getGroups())
      .select(getSelect());
  }

}

