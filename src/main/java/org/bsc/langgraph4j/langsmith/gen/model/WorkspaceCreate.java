/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Creation model for the workspace.
 */
@JsonPropertyOrder({
  WorkspaceCreate.JSON_PROPERTY_ID,
  WorkspaceCreate.JSON_PROPERTY_DISPLAY_NAME,
  WorkspaceCreate.JSON_PROPERTY_TENANT_HANDLE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class WorkspaceCreate {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private UUID id;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  @javax.annotation.Nonnull
  private String displayName;

  public static final String JSON_PROPERTY_TENANT_HANDLE = "tenant_handle";
  private JsonNullable<String> tenantHandle = JsonNullable.<String>undefined();

  public WorkspaceCreate() { 
  }

  public WorkspaceCreate id(@javax.annotation.Nullable UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable UUID id) {
    this.id = id;
  }


  public WorkspaceCreate displayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
  }


  public WorkspaceCreate tenantHandle(@javax.annotation.Nullable String tenantHandle) {
    this.tenantHandle = JsonNullable.<String>of(tenantHandle);
    return this;
  }

  /**
   * Get tenantHandle
   * @return tenantHandle
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTenantHandle() {
        return tenantHandle.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TENANT_HANDLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTenantHandle_JsonNullable() {
    return tenantHandle;
  }
  
  @JsonProperty(JSON_PROPERTY_TENANT_HANDLE)
  public void setTenantHandle_JsonNullable(JsonNullable<String> tenantHandle) {
    this.tenantHandle = tenantHandle;
  }

  public void setTenantHandle(@javax.annotation.Nullable String tenantHandle) {
    this.tenantHandle = JsonNullable.<String>of(tenantHandle);
  }


  /**
   * Return true if this WorkspaceCreate object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkspaceCreate workspaceCreate = (WorkspaceCreate) o;
    return Objects.equals(this.id, workspaceCreate.id) &&
        Objects.equals(this.displayName, workspaceCreate.displayName) &&
        equalsNullable(this.tenantHandle, workspaceCreate.tenantHandle);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, hashCodeNullable(tenantHandle));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkspaceCreate {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    tenantHandle: ").append(toIndentedString(tenantHandle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `display_name` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sdisplay_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDisplayName()))));
    }

    // add `tenant_handle` to the URL query string
    if (getTenantHandle() != null) {
      joiner.add(String.format("%stenant_handle%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTenantHandle()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private WorkspaceCreate instance;

    public Builder() {
      this(new WorkspaceCreate());
    }

    protected Builder(WorkspaceCreate instance) {
      this.instance = instance;
    }

    public WorkspaceCreate.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public WorkspaceCreate.Builder displayName(String displayName) {
      this.instance.displayName = displayName;
      return this;
    }
    public WorkspaceCreate.Builder tenantHandle(String tenantHandle) {
      this.instance.tenantHandle = JsonNullable.<String>of(tenantHandle);
      return this;
    }
    public WorkspaceCreate.Builder tenantHandle(JsonNullable<String> tenantHandle) {
      this.instance.tenantHandle = tenantHandle;
      return this;
    }


    /**
    * returns a built WorkspaceCreate instance.
    *
    * The builder is not reusable.
    */
    public WorkspaceCreate build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static WorkspaceCreate.Builder builder() {
    return new WorkspaceCreate.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public WorkspaceCreate.Builder toBuilder() {
    return new WorkspaceCreate.Builder()
      .id(getId())
      .displayName(getDisplayName())
      .tenantHandle(getTenantHandle());
  }

}

