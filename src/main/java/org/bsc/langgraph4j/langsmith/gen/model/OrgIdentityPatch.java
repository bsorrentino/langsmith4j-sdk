/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * OrgIdentityPatch
 */
@JsonPropertyOrder({
  OrgIdentityPatch.JSON_PROPERTY_PASSWORD,
  OrgIdentityPatch.JSON_PROPERTY_FULL_NAME,
  OrgIdentityPatch.JSON_PROPERTY_ROLE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class OrgIdentityPatch {
  public static final String JSON_PROPERTY_PASSWORD = "password";
  private JsonNullable<String> password = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FULL_NAME = "full_name";
  private JsonNullable<String> fullName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ROLE_ID = "role_id";
  private JsonNullable<UUID> roleId = JsonNullable.<UUID>undefined();

  public OrgIdentityPatch() { 
  }

  public OrgIdentityPatch password(@javax.annotation.Nullable String password) {
    this.password = JsonNullable.<String>of(password);
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPassword() {
        return password.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPassword_JsonNullable() {
    return password;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  public void setPassword_JsonNullable(JsonNullable<String> password) {
    this.password = password;
  }

  public void setPassword(@javax.annotation.Nullable String password) {
    this.password = JsonNullable.<String>of(password);
  }


  public OrgIdentityPatch fullName(@javax.annotation.Nullable String fullName) {
    this.fullName = JsonNullable.<String>of(fullName);
    return this;
  }

  /**
   * Get fullName
   * @return fullName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFullName() {
        return fullName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFullName_JsonNullable() {
    return fullName;
  }
  
  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  public void setFullName_JsonNullable(JsonNullable<String> fullName) {
    this.fullName = fullName;
  }

  public void setFullName(@javax.annotation.Nullable String fullName) {
    this.fullName = JsonNullable.<String>of(fullName);
  }


  public OrgIdentityPatch roleId(@javax.annotation.Nullable UUID roleId) {
    this.roleId = JsonNullable.<UUID>of(roleId);
    return this;
  }

  /**
   * Get roleId
   * @return roleId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getRoleId() {
        return roleId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getRoleId_JsonNullable() {
    return roleId;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE_ID)
  public void setRoleId_JsonNullable(JsonNullable<UUID> roleId) {
    this.roleId = roleId;
  }

  public void setRoleId(@javax.annotation.Nullable UUID roleId) {
    this.roleId = JsonNullable.<UUID>of(roleId);
  }


  /**
   * Return true if this OrgIdentityPatch object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgIdentityPatch orgIdentityPatch = (OrgIdentityPatch) o;
    return equalsNullable(this.password, orgIdentityPatch.password) &&
        equalsNullable(this.fullName, orgIdentityPatch.fullName) &&
        equalsNullable(this.roleId, orgIdentityPatch.roleId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(password), hashCodeNullable(fullName), hashCodeNullable(roleId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgIdentityPatch {\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    roleId: ").append(toIndentedString(roleId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `password` to the URL query string
    if (getPassword() != null) {
      joiner.add(String.format("%spassword%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPassword()))));
    }

    // add `full_name` to the URL query string
    if (getFullName() != null) {
      joiner.add(String.format("%sfull_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFullName()))));
    }

    // add `role_id` to the URL query string
    if (getRoleId() != null) {
      joiner.add(String.format("%srole_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRoleId()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private OrgIdentityPatch instance;

    public Builder() {
      this(new OrgIdentityPatch());
    }

    protected Builder(OrgIdentityPatch instance) {
      this.instance = instance;
    }

    public OrgIdentityPatch.Builder password(String password) {
      this.instance.password = JsonNullable.<String>of(password);
      return this;
    }
    public OrgIdentityPatch.Builder password(JsonNullable<String> password) {
      this.instance.password = password;
      return this;
    }
    public OrgIdentityPatch.Builder fullName(String fullName) {
      this.instance.fullName = JsonNullable.<String>of(fullName);
      return this;
    }
    public OrgIdentityPatch.Builder fullName(JsonNullable<String> fullName) {
      this.instance.fullName = fullName;
      return this;
    }
    public OrgIdentityPatch.Builder roleId(UUID roleId) {
      this.instance.roleId = JsonNullable.<UUID>of(roleId);
      return this;
    }
    public OrgIdentityPatch.Builder roleId(JsonNullable<UUID> roleId) {
      this.instance.roleId = roleId;
      return this;
    }


    /**
    * returns a built OrgIdentityPatch instance.
    *
    * The builder is not reusable.
    */
    public OrgIdentityPatch build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static OrgIdentityPatch.Builder builder() {
    return new OrgIdentityPatch.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public OrgIdentityPatch.Builder toBuilder() {
    return new OrgIdentityPatch.Builder()
      .password(getPassword())
      .fullName(getFullName())
      .roleId(getRoleId());
  }

}

