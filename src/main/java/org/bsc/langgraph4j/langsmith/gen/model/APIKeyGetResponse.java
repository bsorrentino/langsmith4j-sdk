/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * API key GET schema.
 */
@JsonPropertyOrder({
  APIKeyGetResponse.JSON_PROPERTY_CREATED_AT,
  APIKeyGetResponse.JSON_PROPERTY_ID,
  APIKeyGetResponse.JSON_PROPERTY_SHORT_KEY,
  APIKeyGetResponse.JSON_PROPERTY_DESCRIPTION,
  APIKeyGetResponse.JSON_PROPERTY_READ_ONLY,
  APIKeyGetResponse.JSON_PROPERTY_LAST_USED_AT,
  APIKeyGetResponse.JSON_PROPERTY_EXPIRES_AT,
  APIKeyGetResponse.JSON_PROPERTY_WORKSPACE_NAMES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class APIKeyGetResponse {
  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private JsonNullable<OffsetDateTime> createdAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_SHORT_KEY = "short_key";
  @javax.annotation.Nonnull
  private String shortKey;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nonnull
  private String description;

  public static final String JSON_PROPERTY_READ_ONLY = "read_only";
  @javax.annotation.Nullable
  private Boolean readOnly = false;

  public static final String JSON_PROPERTY_LAST_USED_AT = "last_used_at";
  private JsonNullable<OffsetDateTime> lastUsedAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_EXPIRES_AT = "expires_at";
  private JsonNullable<OffsetDateTime> expiresAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_WORKSPACE_NAMES = "workspace_names";
  private JsonNullable<List<String>> workspaceNames = JsonNullable.<List<String>>undefined();

  public APIKeyGetResponse() { 
  }

  public APIKeyGetResponse createdAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = JsonNullable.<OffsetDateTime>of(createdAt);
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getCreatedAt() {
        return createdAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCreatedAt_JsonNullable() {
    return createdAt;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  public void setCreatedAt_JsonNullable(JsonNullable<OffsetDateTime> createdAt) {
    this.createdAt = createdAt;
  }

  public void setCreatedAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = JsonNullable.<OffsetDateTime>of(createdAt);
  }


  public APIKeyGetResponse id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public APIKeyGetResponse shortKey(@javax.annotation.Nonnull String shortKey) {
    this.shortKey = shortKey;
    return this;
  }

  /**
   * Get shortKey
   * @return shortKey
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHORT_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getShortKey() {
    return shortKey;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShortKey(@javax.annotation.Nonnull String shortKey) {
    this.shortKey = shortKey;
  }


  public APIKeyGetResponse description(@javax.annotation.Nonnull String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(@javax.annotation.Nonnull String description) {
    this.description = description;
  }


  public APIKeyGetResponse readOnly(@javax.annotation.Nullable Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

  /**
   * Get readOnly
   * @return readOnly
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getReadOnly() {
    return readOnly;
  }


  @JsonProperty(JSON_PROPERTY_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReadOnly(@javax.annotation.Nullable Boolean readOnly) {
    this.readOnly = readOnly;
  }


  public APIKeyGetResponse lastUsedAt(@javax.annotation.Nullable OffsetDateTime lastUsedAt) {
    this.lastUsedAt = JsonNullable.<OffsetDateTime>of(lastUsedAt);
    return this;
  }

  /**
   * Get lastUsedAt
   * @return lastUsedAt
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getLastUsedAt() {
        return lastUsedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_USED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getLastUsedAt_JsonNullable() {
    return lastUsedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_USED_AT)
  public void setLastUsedAt_JsonNullable(JsonNullable<OffsetDateTime> lastUsedAt) {
    this.lastUsedAt = lastUsedAt;
  }

  public void setLastUsedAt(@javax.annotation.Nullable OffsetDateTime lastUsedAt) {
    this.lastUsedAt = JsonNullable.<OffsetDateTime>of(lastUsedAt);
  }


  public APIKeyGetResponse expiresAt(@javax.annotation.Nullable OffsetDateTime expiresAt) {
    this.expiresAt = JsonNullable.<OffsetDateTime>of(expiresAt);
    return this;
  }

  /**
   * Get expiresAt
   * @return expiresAt
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getExpiresAt() {
        return expiresAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getExpiresAt_JsonNullable() {
    return expiresAt;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  public void setExpiresAt_JsonNullable(JsonNullable<OffsetDateTime> expiresAt) {
    this.expiresAt = expiresAt;
  }

  public void setExpiresAt(@javax.annotation.Nullable OffsetDateTime expiresAt) {
    this.expiresAt = JsonNullable.<OffsetDateTime>of(expiresAt);
  }


  public APIKeyGetResponse workspaceNames(@javax.annotation.Nullable List<String> workspaceNames) {
    this.workspaceNames = JsonNullable.<List<String>>of(workspaceNames);
    return this;
  }

  public APIKeyGetResponse addWorkspaceNamesItem(String workspaceNamesItem) {
    if (this.workspaceNames == null || !this.workspaceNames.isPresent()) {
      this.workspaceNames = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.workspaceNames.get().add(workspaceNamesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get workspaceNames
   * @return workspaceNames
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getWorkspaceNames() {
        return workspaceNames.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORKSPACE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getWorkspaceNames_JsonNullable() {
    return workspaceNames;
  }
  
  @JsonProperty(JSON_PROPERTY_WORKSPACE_NAMES)
  public void setWorkspaceNames_JsonNullable(JsonNullable<List<String>> workspaceNames) {
    this.workspaceNames = workspaceNames;
  }

  public void setWorkspaceNames(@javax.annotation.Nullable List<String> workspaceNames) {
    this.workspaceNames = JsonNullable.<List<String>>of(workspaceNames);
  }


  /**
   * Return true if this APIKeyGetResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIKeyGetResponse apIKeyGetResponse = (APIKeyGetResponse) o;
    return equalsNullable(this.createdAt, apIKeyGetResponse.createdAt) &&
        Objects.equals(this.id, apIKeyGetResponse.id) &&
        Objects.equals(this.shortKey, apIKeyGetResponse.shortKey) &&
        Objects.equals(this.description, apIKeyGetResponse.description) &&
        Objects.equals(this.readOnly, apIKeyGetResponse.readOnly) &&
        equalsNullable(this.lastUsedAt, apIKeyGetResponse.lastUsedAt) &&
        equalsNullable(this.expiresAt, apIKeyGetResponse.expiresAt) &&
        equalsNullable(this.workspaceNames, apIKeyGetResponse.workspaceNames);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(createdAt), id, shortKey, description, readOnly, hashCodeNullable(lastUsedAt), hashCodeNullable(expiresAt), hashCodeNullable(workspaceNames));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIKeyGetResponse {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    shortKey: ").append(toIndentedString(shortKey)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    lastUsedAt: ").append(toIndentedString(lastUsedAt)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    workspaceNames: ").append(toIndentedString(workspaceNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `created_at` to the URL query string
    if (getCreatedAt() != null) {
      joiner.add(String.format("%screated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `short_key` to the URL query string
    if (getShortKey() != null) {
      joiner.add(String.format("%sshort_key%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getShortKey()))));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDescription()))));
    }

    // add `read_only` to the URL query string
    if (getReadOnly() != null) {
      joiner.add(String.format("%sread_only%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getReadOnly()))));
    }

    // add `last_used_at` to the URL query string
    if (getLastUsedAt() != null) {
      joiner.add(String.format("%slast_used_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastUsedAt()))));
    }

    // add `expires_at` to the URL query string
    if (getExpiresAt() != null) {
      joiner.add(String.format("%sexpires_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExpiresAt()))));
    }

    // add `workspace_names` to the URL query string
    if (getWorkspaceNames() != null) {
      for (int i = 0; i < getWorkspaceNames().size(); i++) {
        joiner.add(String.format("%sworkspace_names%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getWorkspaceNames().get(i)))));
      }
    }

    return joiner.toString();
  }

    public static class Builder {

    private APIKeyGetResponse instance;

    public Builder() {
      this(new APIKeyGetResponse());
    }

    protected Builder(APIKeyGetResponse instance) {
      this.instance = instance;
    }

    public APIKeyGetResponse.Builder createdAt(OffsetDateTime createdAt) {
      this.instance.createdAt = JsonNullable.<OffsetDateTime>of(createdAt);
      return this;
    }
    public APIKeyGetResponse.Builder createdAt(JsonNullable<OffsetDateTime> createdAt) {
      this.instance.createdAt = createdAt;
      return this;
    }
    public APIKeyGetResponse.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public APIKeyGetResponse.Builder shortKey(String shortKey) {
      this.instance.shortKey = shortKey;
      return this;
    }
    public APIKeyGetResponse.Builder description(String description) {
      this.instance.description = description;
      return this;
    }
    public APIKeyGetResponse.Builder readOnly(Boolean readOnly) {
      this.instance.readOnly = readOnly;
      return this;
    }
    public APIKeyGetResponse.Builder lastUsedAt(OffsetDateTime lastUsedAt) {
      this.instance.lastUsedAt = JsonNullable.<OffsetDateTime>of(lastUsedAt);
      return this;
    }
    public APIKeyGetResponse.Builder lastUsedAt(JsonNullable<OffsetDateTime> lastUsedAt) {
      this.instance.lastUsedAt = lastUsedAt;
      return this;
    }
    public APIKeyGetResponse.Builder expiresAt(OffsetDateTime expiresAt) {
      this.instance.expiresAt = JsonNullable.<OffsetDateTime>of(expiresAt);
      return this;
    }
    public APIKeyGetResponse.Builder expiresAt(JsonNullable<OffsetDateTime> expiresAt) {
      this.instance.expiresAt = expiresAt;
      return this;
    }
    public APIKeyGetResponse.Builder workspaceNames(List<String> workspaceNames) {
      this.instance.workspaceNames = JsonNullable.<List<String>>of(workspaceNames);
      return this;
    }
    public APIKeyGetResponse.Builder workspaceNames(JsonNullable<List<String>> workspaceNames) {
      this.instance.workspaceNames = workspaceNames;
      return this;
    }


    /**
    * returns a built APIKeyGetResponse instance.
    *
    * The builder is not reusable.
    */
    public APIKeyGetResponse build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static APIKeyGetResponse.Builder builder() {
    return new APIKeyGetResponse.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public APIKeyGetResponse.Builder toBuilder() {
    return new APIKeyGetResponse.Builder()
      .createdAt(getCreatedAt())
      .id(getId())
      .shortKey(getShortKey())
      .description(getDescription())
      .readOnly(getReadOnly())
      .lastUsedAt(getLastUsedAt())
      .expiresAt(getExpiresAt())
      .workspaceNames(getWorkspaceNames());
  }

}

