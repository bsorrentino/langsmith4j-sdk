/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.RunTypeEnum;
import org.bsc.langgraph4j.langsmith.gen.model.TraceTier;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Run schema with annotation queue info.
 */
@JsonPropertyOrder({
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_NAME,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_INPUTS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_INPUTS_PREVIEW,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_RUN_TYPE,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_START_TIME,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_END_TIME,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_EXTRA,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_ERROR,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_EXECUTION_ORDER,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_SERIALIZED,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_OUTPUTS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_OUTPUTS_PREVIEW,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_PARENT_RUN_ID,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_MANIFEST_ID,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_MANIFEST_S3_ID,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_EVENTS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_TAGS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_INPUTS_S3_URLS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_OUTPUTS_S3_URLS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_S3_URLS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_TRACE_ID,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_DOTTED_ORDER,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_ID,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_STATUS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_CHILD_RUN_IDS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_DIRECT_CHILD_RUN_IDS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_PARENT_RUN_IDS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_FEEDBACK_STATS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_REFERENCE_EXAMPLE_ID,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_TOTAL_TOKENS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_PROMPT_TOKENS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_COMPLETION_TOKENS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_PROMPT_TOKEN_DETAILS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_COMPLETION_TOKEN_DETAILS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_TOTAL_COST,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_PROMPT_COST,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_COMPLETION_COST,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_PROMPT_COST_DETAILS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_COMPLETION_COST_DETAILS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_PRICE_MODEL_ID,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_FIRST_TOKEN_TIME,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_SESSION_ID,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_APP_PATH,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_LAST_QUEUED_AT,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_IN_DATASET,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_SHARE_TOKEN,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_TRACE_TIER,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_TRACE_FIRST_RECEIVED_AT,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_TTL_SECONDS,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_TRACE_UPGRADE,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_REFERENCE_DATASET_ID,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_THREAD_ID,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_QUEUE_RUN_ID,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_LAST_REVIEWED_TIME,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_ADDED_AT,
  RunSchemaWithAnnotationQueueInfo.JSON_PROPERTY_EFFECTIVE_ADDED_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class RunSchemaWithAnnotationQueueInfo {
  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_INPUTS = "inputs";
  private JsonNullable<Object> inputs = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_INPUTS_PREVIEW = "inputs_preview";
  private JsonNullable<String> inputsPreview = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RUN_TYPE = "run_type";
  @javax.annotation.Nonnull
  private RunTypeEnum runType;

  public static final String JSON_PROPERTY_START_TIME = "start_time";
  @javax.annotation.Nullable
  private OffsetDateTime startTime;

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  private JsonNullable<OffsetDateTime> endTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_EXTRA = "extra";
  private JsonNullable<Object> extra = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_ERROR = "error";
  private JsonNullable<String> error = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXECUTION_ORDER = "execution_order";
  @javax.annotation.Nullable
  private Integer executionOrder = 1;

  public static final String JSON_PROPERTY_SERIALIZED = "serialized";
  private JsonNullable<Object> serialized = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_OUTPUTS = "outputs";
  private JsonNullable<Object> outputs = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_OUTPUTS_PREVIEW = "outputs_preview";
  private JsonNullable<String> outputsPreview = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PARENT_RUN_ID = "parent_run_id";
  private JsonNullable<UUID> parentRunId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_MANIFEST_ID = "manifest_id";
  private JsonNullable<UUID> manifestId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_MANIFEST_S3_ID = "manifest_s3_id";
  private JsonNullable<UUID> manifestS3Id = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_EVENTS = "events";
  private JsonNullable<List<Object>> events = JsonNullable.<List<Object>>undefined();

  public static final String JSON_PROPERTY_TAGS = "tags";
  private JsonNullable<List<String>> tags = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_INPUTS_S3_URLS = "inputs_s3_urls";
  private JsonNullable<Object> inputsS3Urls = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_OUTPUTS_S3_URLS = "outputs_s3_urls";
  private JsonNullable<Object> outputsS3Urls = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_S3_URLS = "s3_urls";
  private JsonNullable<Object> s3Urls = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_TRACE_ID = "trace_id";
  @javax.annotation.Nonnull
  private UUID traceId;

  public static final String JSON_PROPERTY_DOTTED_ORDER = "dotted_order";
  @javax.annotation.Nonnull
  private String dottedOrder;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nonnull
  private String status;

  public static final String JSON_PROPERTY_CHILD_RUN_IDS = "child_run_ids";
  private JsonNullable<List<UUID>> childRunIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_DIRECT_CHILD_RUN_IDS = "direct_child_run_ids";
  private JsonNullable<List<UUID>> directChildRunIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_PARENT_RUN_IDS = "parent_run_ids";
  private JsonNullable<List<UUID>> parentRunIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_FEEDBACK_STATS = "feedback_stats";
  private JsonNullable<Map<String, Object>> feedbackStats = JsonNullable.<Map<String, Object>>undefined();

  public static final String JSON_PROPERTY_REFERENCE_EXAMPLE_ID = "reference_example_id";
  private JsonNullable<UUID> referenceExampleId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TOTAL_TOKENS = "total_tokens";
  @javax.annotation.Nullable
  private Integer totalTokens = 0;

  public static final String JSON_PROPERTY_PROMPT_TOKENS = "prompt_tokens";
  @javax.annotation.Nullable
  private Integer promptTokens = 0;

  public static final String JSON_PROPERTY_COMPLETION_TOKENS = "completion_tokens";
  @javax.annotation.Nullable
  private Integer completionTokens = 0;

  public static final String JSON_PROPERTY_PROMPT_TOKEN_DETAILS = "prompt_token_details";
  private JsonNullable<Map<String, Integer>> promptTokenDetails = JsonNullable.<Map<String, Integer>>undefined();

  public static final String JSON_PROPERTY_COMPLETION_TOKEN_DETAILS = "completion_token_details";
  private JsonNullable<Map<String, Integer>> completionTokenDetails = JsonNullable.<Map<String, Integer>>undefined();

  public static final String JSON_PROPERTY_TOTAL_COST = "total_cost";
  private JsonNullable<String> totalCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROMPT_COST = "prompt_cost";
  private JsonNullable<String> promptCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMPLETION_COST = "completion_cost";
  private JsonNullable<String> completionCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROMPT_COST_DETAILS = "prompt_cost_details";
  private JsonNullable<Map<String, String>> promptCostDetails = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_COMPLETION_COST_DETAILS = "completion_cost_details";
  private JsonNullable<Map<String, String>> completionCostDetails = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_PRICE_MODEL_ID = "price_model_id";
  private JsonNullable<UUID> priceModelId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_FIRST_TOKEN_TIME = "first_token_time";
  private JsonNullable<OffsetDateTime> firstTokenTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_SESSION_ID = "session_id";
  @javax.annotation.Nonnull
  private UUID sessionId;

  public static final String JSON_PROPERTY_APP_PATH = "app_path";
  @javax.annotation.Nonnull
  private String appPath;

  public static final String JSON_PROPERTY_LAST_QUEUED_AT = "last_queued_at";
  private JsonNullable<OffsetDateTime> lastQueuedAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_IN_DATASET = "in_dataset";
  private JsonNullable<Boolean> inDataset = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_SHARE_TOKEN = "share_token";
  private JsonNullable<UUID> shareToken = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TRACE_TIER = "trace_tier";
  private JsonNullable<TraceTier> traceTier = JsonNullable.<TraceTier>undefined();

  public static final String JSON_PROPERTY_TRACE_FIRST_RECEIVED_AT = "trace_first_received_at";
  private JsonNullable<OffsetDateTime> traceFirstReceivedAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_TTL_SECONDS = "ttl_seconds";
  private JsonNullable<Integer> ttlSeconds = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_TRACE_UPGRADE = "trace_upgrade";
  @javax.annotation.Nullable
  private Boolean traceUpgrade = false;

  public static final String JSON_PROPERTY_REFERENCE_DATASET_ID = "reference_dataset_id";
  private JsonNullable<UUID> referenceDatasetId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_THREAD_ID = "thread_id";
  private JsonNullable<String> threadId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_QUEUE_RUN_ID = "queue_run_id";
  @javax.annotation.Nonnull
  private UUID queueRunId;

  public static final String JSON_PROPERTY_LAST_REVIEWED_TIME = "last_reviewed_time";
  private JsonNullable<OffsetDateTime> lastReviewedTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_ADDED_AT = "added_at";
  private JsonNullable<OffsetDateTime> addedAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_EFFECTIVE_ADDED_AT = "effective_added_at";
  private JsonNullable<OffsetDateTime> effectiveAddedAt = JsonNullable.<OffsetDateTime>undefined();

  public RunSchemaWithAnnotationQueueInfo() { 
  }

  public RunSchemaWithAnnotationQueueInfo name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public RunSchemaWithAnnotationQueueInfo inputs(@javax.annotation.Nullable Object inputs) {
    this.inputs = JsonNullable.<Object>of(inputs);
    return this;
  }

  /**
   * Get inputs
   * @return inputs
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getInputs() {
        return inputs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getInputs_JsonNullable() {
    return inputs;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUTS)
  public void setInputs_JsonNullable(JsonNullable<Object> inputs) {
    this.inputs = inputs;
  }

  public void setInputs(@javax.annotation.Nullable Object inputs) {
    this.inputs = JsonNullable.<Object>of(inputs);
  }


  public RunSchemaWithAnnotationQueueInfo inputsPreview(@javax.annotation.Nullable String inputsPreview) {
    this.inputsPreview = JsonNullable.<String>of(inputsPreview);
    return this;
  }

  /**
   * Get inputsPreview
   * @return inputsPreview
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getInputsPreview() {
        return inputsPreview.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUTS_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInputsPreview_JsonNullable() {
    return inputsPreview;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUTS_PREVIEW)
  public void setInputsPreview_JsonNullable(JsonNullable<String> inputsPreview) {
    this.inputsPreview = inputsPreview;
  }

  public void setInputsPreview(@javax.annotation.Nullable String inputsPreview) {
    this.inputsPreview = JsonNullable.<String>of(inputsPreview);
  }


  public RunSchemaWithAnnotationQueueInfo runType(@javax.annotation.Nonnull RunTypeEnum runType) {
    this.runType = runType;
    return this;
  }

  /**
   * Get runType
   * @return runType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public RunTypeEnum getRunType() {
    return runType;
  }


  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRunType(@javax.annotation.Nonnull RunTypeEnum runType) {
    this.runType = runType;
  }


  public RunSchemaWithAnnotationQueueInfo startTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public RunSchemaWithAnnotationQueueInfo endTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getEndTime() {
        return endTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEndTime_JsonNullable() {
    return endTime;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME)
  public void setEndTime_JsonNullable(JsonNullable<OffsetDateTime> endTime) {
    this.endTime = endTime;
  }

  public void setEndTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
  }


  public RunSchemaWithAnnotationQueueInfo extra(@javax.annotation.Nullable Object extra) {
    this.extra = JsonNullable.<Object>of(extra);
    return this;
  }

  /**
   * Get extra
   * @return extra
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getExtra() {
        return extra.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getExtra_JsonNullable() {
    return extra;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTRA)
  public void setExtra_JsonNullable(JsonNullable<Object> extra) {
    this.extra = extra;
  }

  public void setExtra(@javax.annotation.Nullable Object extra) {
    this.extra = JsonNullable.<Object>of(extra);
  }


  public RunSchemaWithAnnotationQueueInfo error(@javax.annotation.Nullable String error) {
    this.error = JsonNullable.<String>of(error);
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getError() {
        return error.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getError_JsonNullable() {
    return error;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR)
  public void setError_JsonNullable(JsonNullable<String> error) {
    this.error = error;
  }

  public void setError(@javax.annotation.Nullable String error) {
    this.error = JsonNullable.<String>of(error);
  }


  public RunSchemaWithAnnotationQueueInfo executionOrder(@javax.annotation.Nullable Integer executionOrder) {
    this.executionOrder = executionOrder;
    return this;
  }

  /**
   * Get executionOrder
   * minimum: 1
   * @return executionOrder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXECUTION_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getExecutionOrder() {
    return executionOrder;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTION_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutionOrder(@javax.annotation.Nullable Integer executionOrder) {
    this.executionOrder = executionOrder;
  }


  public RunSchemaWithAnnotationQueueInfo serialized(@javax.annotation.Nullable Object serialized) {
    this.serialized = JsonNullable.<Object>of(serialized);
    return this;
  }

  /**
   * Get serialized
   * @return serialized
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getSerialized() {
        return serialized.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIALIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSerialized_JsonNullable() {
    return serialized;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIALIZED)
  public void setSerialized_JsonNullable(JsonNullable<Object> serialized) {
    this.serialized = serialized;
  }

  public void setSerialized(@javax.annotation.Nullable Object serialized) {
    this.serialized = JsonNullable.<Object>of(serialized);
  }


  public RunSchemaWithAnnotationQueueInfo outputs(@javax.annotation.Nullable Object outputs) {
    this.outputs = JsonNullable.<Object>of(outputs);
    return this;
  }

  /**
   * Get outputs
   * @return outputs
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getOutputs() {
        return outputs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOutputs_JsonNullable() {
    return outputs;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  public void setOutputs_JsonNullable(JsonNullable<Object> outputs) {
    this.outputs = outputs;
  }

  public void setOutputs(@javax.annotation.Nullable Object outputs) {
    this.outputs = JsonNullable.<Object>of(outputs);
  }


  public RunSchemaWithAnnotationQueueInfo outputsPreview(@javax.annotation.Nullable String outputsPreview) {
    this.outputsPreview = JsonNullable.<String>of(outputsPreview);
    return this;
  }

  /**
   * Get outputsPreview
   * @return outputsPreview
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getOutputsPreview() {
        return outputsPreview.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTPUTS_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOutputsPreview_JsonNullable() {
    return outputsPreview;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTPUTS_PREVIEW)
  public void setOutputsPreview_JsonNullable(JsonNullable<String> outputsPreview) {
    this.outputsPreview = outputsPreview;
  }

  public void setOutputsPreview(@javax.annotation.Nullable String outputsPreview) {
    this.outputsPreview = JsonNullable.<String>of(outputsPreview);
  }


  public RunSchemaWithAnnotationQueueInfo parentRunId(@javax.annotation.Nullable UUID parentRunId) {
    this.parentRunId = JsonNullable.<UUID>of(parentRunId);
    return this;
  }

  /**
   * Get parentRunId
   * @return parentRunId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getParentRunId() {
        return parentRunId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getParentRunId_JsonNullable() {
    return parentRunId;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_RUN_ID)
  public void setParentRunId_JsonNullable(JsonNullable<UUID> parentRunId) {
    this.parentRunId = parentRunId;
  }

  public void setParentRunId(@javax.annotation.Nullable UUID parentRunId) {
    this.parentRunId = JsonNullable.<UUID>of(parentRunId);
  }


  public RunSchemaWithAnnotationQueueInfo manifestId(@javax.annotation.Nullable UUID manifestId) {
    this.manifestId = JsonNullable.<UUID>of(manifestId);
    return this;
  }

  /**
   * Get manifestId
   * @return manifestId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getManifestId() {
        return manifestId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MANIFEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getManifestId_JsonNullable() {
    return manifestId;
  }
  
  @JsonProperty(JSON_PROPERTY_MANIFEST_ID)
  public void setManifestId_JsonNullable(JsonNullable<UUID> manifestId) {
    this.manifestId = manifestId;
  }

  public void setManifestId(@javax.annotation.Nullable UUID manifestId) {
    this.manifestId = JsonNullable.<UUID>of(manifestId);
  }


  public RunSchemaWithAnnotationQueueInfo manifestS3Id(@javax.annotation.Nullable UUID manifestS3Id) {
    this.manifestS3Id = JsonNullable.<UUID>of(manifestS3Id);
    return this;
  }

  /**
   * Get manifestS3Id
   * @return manifestS3Id
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getManifestS3Id() {
        return manifestS3Id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MANIFEST_S3_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getManifestS3Id_JsonNullable() {
    return manifestS3Id;
  }
  
  @JsonProperty(JSON_PROPERTY_MANIFEST_S3_ID)
  public void setManifestS3Id_JsonNullable(JsonNullable<UUID> manifestS3Id) {
    this.manifestS3Id = manifestS3Id;
  }

  public void setManifestS3Id(@javax.annotation.Nullable UUID manifestS3Id) {
    this.manifestS3Id = JsonNullable.<UUID>of(manifestS3Id);
  }


  public RunSchemaWithAnnotationQueueInfo events(@javax.annotation.Nullable List<Object> events) {
    this.events = JsonNullable.<List<Object>>of(events);
    return this;
  }

  public RunSchemaWithAnnotationQueueInfo addEventsItem(Object eventsItem) {
    if (this.events == null || !this.events.isPresent()) {
      this.events = JsonNullable.<List<Object>>of(new ArrayList<>());
    }
    try {
      this.events.get().add(eventsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get events
   * @return events
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<Object> getEvents() {
        return events.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Object>> getEvents_JsonNullable() {
    return events;
  }
  
  @JsonProperty(JSON_PROPERTY_EVENTS)
  public void setEvents_JsonNullable(JsonNullable<List<Object>> events) {
    this.events = events;
  }

  public void setEvents(@javax.annotation.Nullable List<Object> events) {
    this.events = JsonNullable.<List<Object>>of(events);
  }


  public RunSchemaWithAnnotationQueueInfo tags(@javax.annotation.Nullable List<String> tags) {
    this.tags = JsonNullable.<List<String>>of(tags);
    return this;
  }

  public RunSchemaWithAnnotationQueueInfo addTagsItem(String tagsItem) {
    if (this.tags == null || !this.tags.isPresent()) {
      this.tags = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.tags.get().add(tagsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getTags() {
        return tags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTags_JsonNullable() {
    return tags;
  }
  
  @JsonProperty(JSON_PROPERTY_TAGS)
  public void setTags_JsonNullable(JsonNullable<List<String>> tags) {
    this.tags = tags;
  }

  public void setTags(@javax.annotation.Nullable List<String> tags) {
    this.tags = JsonNullable.<List<String>>of(tags);
  }


  public RunSchemaWithAnnotationQueueInfo inputsS3Urls(@javax.annotation.Nullable Object inputsS3Urls) {
    this.inputsS3Urls = JsonNullable.<Object>of(inputsS3Urls);
    return this;
  }

  /**
   * Get inputsS3Urls
   * @return inputsS3Urls
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getInputsS3Urls() {
        return inputsS3Urls.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUTS_S3_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getInputsS3Urls_JsonNullable() {
    return inputsS3Urls;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUTS_S3_URLS)
  public void setInputsS3Urls_JsonNullable(JsonNullable<Object> inputsS3Urls) {
    this.inputsS3Urls = inputsS3Urls;
  }

  public void setInputsS3Urls(@javax.annotation.Nullable Object inputsS3Urls) {
    this.inputsS3Urls = JsonNullable.<Object>of(inputsS3Urls);
  }


  public RunSchemaWithAnnotationQueueInfo outputsS3Urls(@javax.annotation.Nullable Object outputsS3Urls) {
    this.outputsS3Urls = JsonNullable.<Object>of(outputsS3Urls);
    return this;
  }

  /**
   * Get outputsS3Urls
   * @return outputsS3Urls
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getOutputsS3Urls() {
        return outputsS3Urls.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTPUTS_S3_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOutputsS3Urls_JsonNullable() {
    return outputsS3Urls;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTPUTS_S3_URLS)
  public void setOutputsS3Urls_JsonNullable(JsonNullable<Object> outputsS3Urls) {
    this.outputsS3Urls = outputsS3Urls;
  }

  public void setOutputsS3Urls(@javax.annotation.Nullable Object outputsS3Urls) {
    this.outputsS3Urls = JsonNullable.<Object>of(outputsS3Urls);
  }


  public RunSchemaWithAnnotationQueueInfo s3Urls(@javax.annotation.Nullable Object s3Urls) {
    this.s3Urls = JsonNullable.<Object>of(s3Urls);
    return this;
  }

  /**
   * Get s3Urls
   * @return s3Urls
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getS3Urls() {
        return s3Urls.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_S3_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getS3Urls_JsonNullable() {
    return s3Urls;
  }
  
  @JsonProperty(JSON_PROPERTY_S3_URLS)
  public void setS3Urls_JsonNullable(JsonNullable<Object> s3Urls) {
    this.s3Urls = s3Urls;
  }

  public void setS3Urls(@javax.annotation.Nullable Object s3Urls) {
    this.s3Urls = JsonNullable.<Object>of(s3Urls);
  }


  public RunSchemaWithAnnotationQueueInfo traceId(@javax.annotation.Nonnull UUID traceId) {
    this.traceId = traceId;
    return this;
  }

  /**
   * Get traceId
   * @return traceId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRACE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getTraceId() {
    return traceId;
  }


  @JsonProperty(JSON_PROPERTY_TRACE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTraceId(@javax.annotation.Nonnull UUID traceId) {
    this.traceId = traceId;
  }


  public RunSchemaWithAnnotationQueueInfo dottedOrder(@javax.annotation.Nonnull String dottedOrder) {
    this.dottedOrder = dottedOrder;
    return this;
  }

  /**
   * Get dottedOrder
   * @return dottedOrder
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOTTED_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDottedOrder() {
    return dottedOrder;
  }


  @JsonProperty(JSON_PROPERTY_DOTTED_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDottedOrder(@javax.annotation.Nonnull String dottedOrder) {
    this.dottedOrder = dottedOrder;
  }


  public RunSchemaWithAnnotationQueueInfo id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public RunSchemaWithAnnotationQueueInfo status(@javax.annotation.Nonnull String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@javax.annotation.Nonnull String status) {
    this.status = status;
  }


  public RunSchemaWithAnnotationQueueInfo childRunIds(@javax.annotation.Nullable List<UUID> childRunIds) {
    this.childRunIds = JsonNullable.<List<UUID>>of(childRunIds);
    return this;
  }

  public RunSchemaWithAnnotationQueueInfo addChildRunIdsItem(UUID childRunIdsItem) {
    if (this.childRunIds == null || !this.childRunIds.isPresent()) {
      this.childRunIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.childRunIds.get().add(childRunIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get childRunIds
   * @return childRunIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getChildRunIds() {
        return childRunIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHILD_RUN_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getChildRunIds_JsonNullable() {
    return childRunIds;
  }
  
  @JsonProperty(JSON_PROPERTY_CHILD_RUN_IDS)
  public void setChildRunIds_JsonNullable(JsonNullable<List<UUID>> childRunIds) {
    this.childRunIds = childRunIds;
  }

  public void setChildRunIds(@javax.annotation.Nullable List<UUID> childRunIds) {
    this.childRunIds = JsonNullable.<List<UUID>>of(childRunIds);
  }


  public RunSchemaWithAnnotationQueueInfo directChildRunIds(@javax.annotation.Nullable List<UUID> directChildRunIds) {
    this.directChildRunIds = JsonNullable.<List<UUID>>of(directChildRunIds);
    return this;
  }

  public RunSchemaWithAnnotationQueueInfo addDirectChildRunIdsItem(UUID directChildRunIdsItem) {
    if (this.directChildRunIds == null || !this.directChildRunIds.isPresent()) {
      this.directChildRunIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.directChildRunIds.get().add(directChildRunIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get directChildRunIds
   * @return directChildRunIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getDirectChildRunIds() {
        return directChildRunIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIRECT_CHILD_RUN_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getDirectChildRunIds_JsonNullable() {
    return directChildRunIds;
  }
  
  @JsonProperty(JSON_PROPERTY_DIRECT_CHILD_RUN_IDS)
  public void setDirectChildRunIds_JsonNullable(JsonNullable<List<UUID>> directChildRunIds) {
    this.directChildRunIds = directChildRunIds;
  }

  public void setDirectChildRunIds(@javax.annotation.Nullable List<UUID> directChildRunIds) {
    this.directChildRunIds = JsonNullable.<List<UUID>>of(directChildRunIds);
  }


  public RunSchemaWithAnnotationQueueInfo parentRunIds(@javax.annotation.Nullable List<UUID> parentRunIds) {
    this.parentRunIds = JsonNullable.<List<UUID>>of(parentRunIds);
    return this;
  }

  public RunSchemaWithAnnotationQueueInfo addParentRunIdsItem(UUID parentRunIdsItem) {
    if (this.parentRunIds == null || !this.parentRunIds.isPresent()) {
      this.parentRunIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.parentRunIds.get().add(parentRunIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get parentRunIds
   * @return parentRunIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getParentRunIds() {
        return parentRunIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_RUN_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getParentRunIds_JsonNullable() {
    return parentRunIds;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_RUN_IDS)
  public void setParentRunIds_JsonNullable(JsonNullable<List<UUID>> parentRunIds) {
    this.parentRunIds = parentRunIds;
  }

  public void setParentRunIds(@javax.annotation.Nullable List<UUID> parentRunIds) {
    this.parentRunIds = JsonNullable.<List<UUID>>of(parentRunIds);
  }


  public RunSchemaWithAnnotationQueueInfo feedbackStats(@javax.annotation.Nullable Map<String, Object> feedbackStats) {
    this.feedbackStats = JsonNullable.<Map<String, Object>>of(feedbackStats);
    return this;
  }

  public RunSchemaWithAnnotationQueueInfo putFeedbackStatsItem(String key, Object feedbackStatsItem) {
    if (this.feedbackStats == null || !this.feedbackStats.isPresent()) {
      this.feedbackStats = JsonNullable.<Map<String, Object>>of(new HashMap<>());
    }
    try {
      this.feedbackStats.get().put(key, feedbackStatsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get feedbackStats
   * @return feedbackStats
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, Object> getFeedbackStats() {
        return feedbackStats.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FEEDBACK_STATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Object>> getFeedbackStats_JsonNullable() {
    return feedbackStats;
  }
  
  @JsonProperty(JSON_PROPERTY_FEEDBACK_STATS)
  public void setFeedbackStats_JsonNullable(JsonNullable<Map<String, Object>> feedbackStats) {
    this.feedbackStats = feedbackStats;
  }

  public void setFeedbackStats(@javax.annotation.Nullable Map<String, Object> feedbackStats) {
    this.feedbackStats = JsonNullable.<Map<String, Object>>of(feedbackStats);
  }


  public RunSchemaWithAnnotationQueueInfo referenceExampleId(@javax.annotation.Nullable UUID referenceExampleId) {
    this.referenceExampleId = JsonNullable.<UUID>of(referenceExampleId);
    return this;
  }

  /**
   * Get referenceExampleId
   * @return referenceExampleId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getReferenceExampleId() {
        return referenceExampleId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFERENCE_EXAMPLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getReferenceExampleId_JsonNullable() {
    return referenceExampleId;
  }
  
  @JsonProperty(JSON_PROPERTY_REFERENCE_EXAMPLE_ID)
  public void setReferenceExampleId_JsonNullable(JsonNullable<UUID> referenceExampleId) {
    this.referenceExampleId = referenceExampleId;
  }

  public void setReferenceExampleId(@javax.annotation.Nullable UUID referenceExampleId) {
    this.referenceExampleId = JsonNullable.<UUID>of(referenceExampleId);
  }


  public RunSchemaWithAnnotationQueueInfo totalTokens(@javax.annotation.Nullable Integer totalTokens) {
    this.totalTokens = totalTokens;
    return this;
  }

  /**
   * Get totalTokens
   * @return totalTokens
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getTotalTokens() {
    return totalTokens;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalTokens(@javax.annotation.Nullable Integer totalTokens) {
    this.totalTokens = totalTokens;
  }


  public RunSchemaWithAnnotationQueueInfo promptTokens(@javax.annotation.Nullable Integer promptTokens) {
    this.promptTokens = promptTokens;
    return this;
  }

  /**
   * Get promptTokens
   * @return promptTokens
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROMPT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPromptTokens() {
    return promptTokens;
  }


  @JsonProperty(JSON_PROPERTY_PROMPT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPromptTokens(@javax.annotation.Nullable Integer promptTokens) {
    this.promptTokens = promptTokens;
  }


  public RunSchemaWithAnnotationQueueInfo completionTokens(@javax.annotation.Nullable Integer completionTokens) {
    this.completionTokens = completionTokens;
    return this;
  }

  /**
   * Get completionTokens
   * @return completionTokens
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getCompletionTokens() {
    return completionTokens;
  }


  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompletionTokens(@javax.annotation.Nullable Integer completionTokens) {
    this.completionTokens = completionTokens;
  }


  public RunSchemaWithAnnotationQueueInfo promptTokenDetails(@javax.annotation.Nullable Map<String, Integer> promptTokenDetails) {
    this.promptTokenDetails = JsonNullable.<Map<String, Integer>>of(promptTokenDetails);
    return this;
  }

  public RunSchemaWithAnnotationQueueInfo putPromptTokenDetailsItem(String key, Integer promptTokenDetailsItem) {
    if (this.promptTokenDetails == null || !this.promptTokenDetails.isPresent()) {
      this.promptTokenDetails = JsonNullable.<Map<String, Integer>>of(new HashMap<>());
    }
    try {
      this.promptTokenDetails.get().put(key, promptTokenDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get promptTokenDetails
   * @return promptTokenDetails
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, Integer> getPromptTokenDetails() {
        return promptTokenDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROMPT_TOKEN_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Integer>> getPromptTokenDetails_JsonNullable() {
    return promptTokenDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_PROMPT_TOKEN_DETAILS)
  public void setPromptTokenDetails_JsonNullable(JsonNullable<Map<String, Integer>> promptTokenDetails) {
    this.promptTokenDetails = promptTokenDetails;
  }

  public void setPromptTokenDetails(@javax.annotation.Nullable Map<String, Integer> promptTokenDetails) {
    this.promptTokenDetails = JsonNullable.<Map<String, Integer>>of(promptTokenDetails);
  }


  public RunSchemaWithAnnotationQueueInfo completionTokenDetails(@javax.annotation.Nullable Map<String, Integer> completionTokenDetails) {
    this.completionTokenDetails = JsonNullable.<Map<String, Integer>>of(completionTokenDetails);
    return this;
  }

  public RunSchemaWithAnnotationQueueInfo putCompletionTokenDetailsItem(String key, Integer completionTokenDetailsItem) {
    if (this.completionTokenDetails == null || !this.completionTokenDetails.isPresent()) {
      this.completionTokenDetails = JsonNullable.<Map<String, Integer>>of(new HashMap<>());
    }
    try {
      this.completionTokenDetails.get().put(key, completionTokenDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get completionTokenDetails
   * @return completionTokenDetails
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, Integer> getCompletionTokenDetails() {
        return completionTokenDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKEN_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Integer>> getCompletionTokenDetails_JsonNullable() {
    return completionTokenDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKEN_DETAILS)
  public void setCompletionTokenDetails_JsonNullable(JsonNullable<Map<String, Integer>> completionTokenDetails) {
    this.completionTokenDetails = completionTokenDetails;
  }

  public void setCompletionTokenDetails(@javax.annotation.Nullable Map<String, Integer> completionTokenDetails) {
    this.completionTokenDetails = JsonNullable.<Map<String, Integer>>of(completionTokenDetails);
  }


  public RunSchemaWithAnnotationQueueInfo totalCost(@javax.annotation.Nullable String totalCost) {
    this.totalCost = JsonNullable.<String>of(totalCost);
    return this;
  }

  /**
   * Get totalCost
   * @return totalCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTotalCost() {
        return totalCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTotalCost_JsonNullable() {
    return totalCost;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_COST)
  public void setTotalCost_JsonNullable(JsonNullable<String> totalCost) {
    this.totalCost = totalCost;
  }

  public void setTotalCost(@javax.annotation.Nullable String totalCost) {
    this.totalCost = JsonNullable.<String>of(totalCost);
  }


  public RunSchemaWithAnnotationQueueInfo promptCost(@javax.annotation.Nullable String promptCost) {
    this.promptCost = JsonNullable.<String>of(promptCost);
    return this;
  }

  /**
   * Get promptCost
   * @return promptCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPromptCost() {
        return promptCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROMPT_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPromptCost_JsonNullable() {
    return promptCost;
  }
  
  @JsonProperty(JSON_PROPERTY_PROMPT_COST)
  public void setPromptCost_JsonNullable(JsonNullable<String> promptCost) {
    this.promptCost = promptCost;
  }

  public void setPromptCost(@javax.annotation.Nullable String promptCost) {
    this.promptCost = JsonNullable.<String>of(promptCost);
  }


  public RunSchemaWithAnnotationQueueInfo completionCost(@javax.annotation.Nullable String completionCost) {
    this.completionCost = JsonNullable.<String>of(completionCost);
    return this;
  }

  /**
   * Get completionCost
   * @return completionCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCompletionCost() {
        return completionCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETION_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCompletionCost_JsonNullable() {
    return completionCost;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETION_COST)
  public void setCompletionCost_JsonNullable(JsonNullable<String> completionCost) {
    this.completionCost = completionCost;
  }

  public void setCompletionCost(@javax.annotation.Nullable String completionCost) {
    this.completionCost = JsonNullable.<String>of(completionCost);
  }


  public RunSchemaWithAnnotationQueueInfo promptCostDetails(@javax.annotation.Nullable Map<String, String> promptCostDetails) {
    this.promptCostDetails = JsonNullable.<Map<String, String>>of(promptCostDetails);
    return this;
  }

  public RunSchemaWithAnnotationQueueInfo putPromptCostDetailsItem(String key, String promptCostDetailsItem) {
    if (this.promptCostDetails == null || !this.promptCostDetails.isPresent()) {
      this.promptCostDetails = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.promptCostDetails.get().put(key, promptCostDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get promptCostDetails
   * @return promptCostDetails
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, String> getPromptCostDetails() {
        return promptCostDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROMPT_COST_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getPromptCostDetails_JsonNullable() {
    return promptCostDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_PROMPT_COST_DETAILS)
  public void setPromptCostDetails_JsonNullable(JsonNullable<Map<String, String>> promptCostDetails) {
    this.promptCostDetails = promptCostDetails;
  }

  public void setPromptCostDetails(@javax.annotation.Nullable Map<String, String> promptCostDetails) {
    this.promptCostDetails = JsonNullable.<Map<String, String>>of(promptCostDetails);
  }


  public RunSchemaWithAnnotationQueueInfo completionCostDetails(@javax.annotation.Nullable Map<String, String> completionCostDetails) {
    this.completionCostDetails = JsonNullable.<Map<String, String>>of(completionCostDetails);
    return this;
  }

  public RunSchemaWithAnnotationQueueInfo putCompletionCostDetailsItem(String key, String completionCostDetailsItem) {
    if (this.completionCostDetails == null || !this.completionCostDetails.isPresent()) {
      this.completionCostDetails = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.completionCostDetails.get().put(key, completionCostDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get completionCostDetails
   * @return completionCostDetails
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, String> getCompletionCostDetails() {
        return completionCostDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETION_COST_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getCompletionCostDetails_JsonNullable() {
    return completionCostDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETION_COST_DETAILS)
  public void setCompletionCostDetails_JsonNullable(JsonNullable<Map<String, String>> completionCostDetails) {
    this.completionCostDetails = completionCostDetails;
  }

  public void setCompletionCostDetails(@javax.annotation.Nullable Map<String, String> completionCostDetails) {
    this.completionCostDetails = JsonNullable.<Map<String, String>>of(completionCostDetails);
  }


  public RunSchemaWithAnnotationQueueInfo priceModelId(@javax.annotation.Nullable UUID priceModelId) {
    this.priceModelId = JsonNullable.<UUID>of(priceModelId);
    return this;
  }

  /**
   * Get priceModelId
   * @return priceModelId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getPriceModelId() {
        return priceModelId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE_MODEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getPriceModelId_JsonNullable() {
    return priceModelId;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE_MODEL_ID)
  public void setPriceModelId_JsonNullable(JsonNullable<UUID> priceModelId) {
    this.priceModelId = priceModelId;
  }

  public void setPriceModelId(@javax.annotation.Nullable UUID priceModelId) {
    this.priceModelId = JsonNullable.<UUID>of(priceModelId);
  }


  public RunSchemaWithAnnotationQueueInfo firstTokenTime(@javax.annotation.Nullable OffsetDateTime firstTokenTime) {
    this.firstTokenTime = JsonNullable.<OffsetDateTime>of(firstTokenTime);
    return this;
  }

  /**
   * Get firstTokenTime
   * @return firstTokenTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getFirstTokenTime() {
        return firstTokenTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRST_TOKEN_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getFirstTokenTime_JsonNullable() {
    return firstTokenTime;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRST_TOKEN_TIME)
  public void setFirstTokenTime_JsonNullable(JsonNullable<OffsetDateTime> firstTokenTime) {
    this.firstTokenTime = firstTokenTime;
  }

  public void setFirstTokenTime(@javax.annotation.Nullable OffsetDateTime firstTokenTime) {
    this.firstTokenTime = JsonNullable.<OffsetDateTime>of(firstTokenTime);
  }


  public RunSchemaWithAnnotationQueueInfo sessionId(@javax.annotation.Nonnull UUID sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * Get sessionId
   * @return sessionId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getSessionId() {
    return sessionId;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSessionId(@javax.annotation.Nonnull UUID sessionId) {
    this.sessionId = sessionId;
  }


  public RunSchemaWithAnnotationQueueInfo appPath(@javax.annotation.Nonnull String appPath) {
    this.appPath = appPath;
    return this;
  }

  /**
   * Get appPath
   * @return appPath
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APP_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAppPath() {
    return appPath;
  }


  @JsonProperty(JSON_PROPERTY_APP_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAppPath(@javax.annotation.Nonnull String appPath) {
    this.appPath = appPath;
  }


  public RunSchemaWithAnnotationQueueInfo lastQueuedAt(@javax.annotation.Nullable OffsetDateTime lastQueuedAt) {
    this.lastQueuedAt = JsonNullable.<OffsetDateTime>of(lastQueuedAt);
    return this;
  }

  /**
   * Get lastQueuedAt
   * @return lastQueuedAt
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getLastQueuedAt() {
        return lastQueuedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_QUEUED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getLastQueuedAt_JsonNullable() {
    return lastQueuedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_QUEUED_AT)
  public void setLastQueuedAt_JsonNullable(JsonNullable<OffsetDateTime> lastQueuedAt) {
    this.lastQueuedAt = lastQueuedAt;
  }

  public void setLastQueuedAt(@javax.annotation.Nullable OffsetDateTime lastQueuedAt) {
    this.lastQueuedAt = JsonNullable.<OffsetDateTime>of(lastQueuedAt);
  }


  public RunSchemaWithAnnotationQueueInfo inDataset(@javax.annotation.Nullable Boolean inDataset) {
    this.inDataset = JsonNullable.<Boolean>of(inDataset);
    return this;
  }

  /**
   * Get inDataset
   * @return inDataset
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getInDataset() {
        return inDataset.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IN_DATASET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getInDataset_JsonNullable() {
    return inDataset;
  }
  
  @JsonProperty(JSON_PROPERTY_IN_DATASET)
  public void setInDataset_JsonNullable(JsonNullable<Boolean> inDataset) {
    this.inDataset = inDataset;
  }

  public void setInDataset(@javax.annotation.Nullable Boolean inDataset) {
    this.inDataset = JsonNullable.<Boolean>of(inDataset);
  }


  public RunSchemaWithAnnotationQueueInfo shareToken(@javax.annotation.Nullable UUID shareToken) {
    this.shareToken = JsonNullable.<UUID>of(shareToken);
    return this;
  }

  /**
   * Get shareToken
   * @return shareToken
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getShareToken() {
        return shareToken.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHARE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getShareToken_JsonNullable() {
    return shareToken;
  }
  
  @JsonProperty(JSON_PROPERTY_SHARE_TOKEN)
  public void setShareToken_JsonNullable(JsonNullable<UUID> shareToken) {
    this.shareToken = shareToken;
  }

  public void setShareToken(@javax.annotation.Nullable UUID shareToken) {
    this.shareToken = JsonNullable.<UUID>of(shareToken);
  }


  public RunSchemaWithAnnotationQueueInfo traceTier(@javax.annotation.Nullable TraceTier traceTier) {
    this.traceTier = JsonNullable.<TraceTier>of(traceTier);
    return this;
  }

  /**
   * Get traceTier
   * @return traceTier
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public TraceTier getTraceTier() {
        return traceTier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRACE_TIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TraceTier> getTraceTier_JsonNullable() {
    return traceTier;
  }
  
  @JsonProperty(JSON_PROPERTY_TRACE_TIER)
  public void setTraceTier_JsonNullable(JsonNullable<TraceTier> traceTier) {
    this.traceTier = traceTier;
  }

  public void setTraceTier(@javax.annotation.Nullable TraceTier traceTier) {
    this.traceTier = JsonNullable.<TraceTier>of(traceTier);
  }


  public RunSchemaWithAnnotationQueueInfo traceFirstReceivedAt(@javax.annotation.Nullable OffsetDateTime traceFirstReceivedAt) {
    this.traceFirstReceivedAt = JsonNullable.<OffsetDateTime>of(traceFirstReceivedAt);
    return this;
  }

  /**
   * Get traceFirstReceivedAt
   * @return traceFirstReceivedAt
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getTraceFirstReceivedAt() {
        return traceFirstReceivedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRACE_FIRST_RECEIVED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getTraceFirstReceivedAt_JsonNullable() {
    return traceFirstReceivedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_TRACE_FIRST_RECEIVED_AT)
  public void setTraceFirstReceivedAt_JsonNullable(JsonNullable<OffsetDateTime> traceFirstReceivedAt) {
    this.traceFirstReceivedAt = traceFirstReceivedAt;
  }

  public void setTraceFirstReceivedAt(@javax.annotation.Nullable OffsetDateTime traceFirstReceivedAt) {
    this.traceFirstReceivedAt = JsonNullable.<OffsetDateTime>of(traceFirstReceivedAt);
  }


  public RunSchemaWithAnnotationQueueInfo ttlSeconds(@javax.annotation.Nullable Integer ttlSeconds) {
    this.ttlSeconds = JsonNullable.<Integer>of(ttlSeconds);
    return this;
  }

  /**
   * Get ttlSeconds
   * @return ttlSeconds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getTtlSeconds() {
        return ttlSeconds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TTL_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTtlSeconds_JsonNullable() {
    return ttlSeconds;
  }
  
  @JsonProperty(JSON_PROPERTY_TTL_SECONDS)
  public void setTtlSeconds_JsonNullable(JsonNullable<Integer> ttlSeconds) {
    this.ttlSeconds = ttlSeconds;
  }

  public void setTtlSeconds(@javax.annotation.Nullable Integer ttlSeconds) {
    this.ttlSeconds = JsonNullable.<Integer>of(ttlSeconds);
  }


  public RunSchemaWithAnnotationQueueInfo traceUpgrade(@javax.annotation.Nullable Boolean traceUpgrade) {
    this.traceUpgrade = traceUpgrade;
    return this;
  }

  /**
   * Get traceUpgrade
   * @return traceUpgrade
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACE_UPGRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getTraceUpgrade() {
    return traceUpgrade;
  }


  @JsonProperty(JSON_PROPERTY_TRACE_UPGRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTraceUpgrade(@javax.annotation.Nullable Boolean traceUpgrade) {
    this.traceUpgrade = traceUpgrade;
  }


  public RunSchemaWithAnnotationQueueInfo referenceDatasetId(@javax.annotation.Nullable UUID referenceDatasetId) {
    this.referenceDatasetId = JsonNullable.<UUID>of(referenceDatasetId);
    return this;
  }

  /**
   * Get referenceDatasetId
   * @return referenceDatasetId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getReferenceDatasetId() {
        return referenceDatasetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFERENCE_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getReferenceDatasetId_JsonNullable() {
    return referenceDatasetId;
  }
  
  @JsonProperty(JSON_PROPERTY_REFERENCE_DATASET_ID)
  public void setReferenceDatasetId_JsonNullable(JsonNullable<UUID> referenceDatasetId) {
    this.referenceDatasetId = referenceDatasetId;
  }

  public void setReferenceDatasetId(@javax.annotation.Nullable UUID referenceDatasetId) {
    this.referenceDatasetId = JsonNullable.<UUID>of(referenceDatasetId);
  }


  public RunSchemaWithAnnotationQueueInfo threadId(@javax.annotation.Nullable String threadId) {
    this.threadId = JsonNullable.<String>of(threadId);
    return this;
  }

  /**
   * Get threadId
   * @return threadId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getThreadId() {
        return threadId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THREAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getThreadId_JsonNullable() {
    return threadId;
  }
  
  @JsonProperty(JSON_PROPERTY_THREAD_ID)
  public void setThreadId_JsonNullable(JsonNullable<String> threadId) {
    this.threadId = threadId;
  }

  public void setThreadId(@javax.annotation.Nullable String threadId) {
    this.threadId = JsonNullable.<String>of(threadId);
  }


  public RunSchemaWithAnnotationQueueInfo queueRunId(@javax.annotation.Nonnull UUID queueRunId) {
    this.queueRunId = queueRunId;
    return this;
  }

  /**
   * Get queueRunId
   * @return queueRunId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUEUE_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getQueueRunId() {
    return queueRunId;
  }


  @JsonProperty(JSON_PROPERTY_QUEUE_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQueueRunId(@javax.annotation.Nonnull UUID queueRunId) {
    this.queueRunId = queueRunId;
  }


  public RunSchemaWithAnnotationQueueInfo lastReviewedTime(@javax.annotation.Nullable OffsetDateTime lastReviewedTime) {
    this.lastReviewedTime = JsonNullable.<OffsetDateTime>of(lastReviewedTime);
    return this;
  }

  /**
   * Get lastReviewedTime
   * @return lastReviewedTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getLastReviewedTime() {
        return lastReviewedTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_REVIEWED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getLastReviewedTime_JsonNullable() {
    return lastReviewedTime;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_REVIEWED_TIME)
  public void setLastReviewedTime_JsonNullable(JsonNullable<OffsetDateTime> lastReviewedTime) {
    this.lastReviewedTime = lastReviewedTime;
  }

  public void setLastReviewedTime(@javax.annotation.Nullable OffsetDateTime lastReviewedTime) {
    this.lastReviewedTime = JsonNullable.<OffsetDateTime>of(lastReviewedTime);
  }


  public RunSchemaWithAnnotationQueueInfo addedAt(@javax.annotation.Nullable OffsetDateTime addedAt) {
    this.addedAt = JsonNullable.<OffsetDateTime>of(addedAt);
    return this;
  }

  /**
   * Get addedAt
   * @return addedAt
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getAddedAt() {
        return addedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADDED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getAddedAt_JsonNullable() {
    return addedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_ADDED_AT)
  public void setAddedAt_JsonNullable(JsonNullable<OffsetDateTime> addedAt) {
    this.addedAt = addedAt;
  }

  public void setAddedAt(@javax.annotation.Nullable OffsetDateTime addedAt) {
    this.addedAt = JsonNullable.<OffsetDateTime>of(addedAt);
  }


  public RunSchemaWithAnnotationQueueInfo effectiveAddedAt(@javax.annotation.Nullable OffsetDateTime effectiveAddedAt) {
    this.effectiveAddedAt = JsonNullable.<OffsetDateTime>of(effectiveAddedAt);
    return this;
  }

  /**
   * Get effectiveAddedAt
   * @return effectiveAddedAt
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getEffectiveAddedAt() {
        return effectiveAddedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EFFECTIVE_ADDED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEffectiveAddedAt_JsonNullable() {
    return effectiveAddedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_EFFECTIVE_ADDED_AT)
  public void setEffectiveAddedAt_JsonNullable(JsonNullable<OffsetDateTime> effectiveAddedAt) {
    this.effectiveAddedAt = effectiveAddedAt;
  }

  public void setEffectiveAddedAt(@javax.annotation.Nullable OffsetDateTime effectiveAddedAt) {
    this.effectiveAddedAt = JsonNullable.<OffsetDateTime>of(effectiveAddedAt);
  }


  /**
   * Return true if this RunSchemaWithAnnotationQueueInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunSchemaWithAnnotationQueueInfo runSchemaWithAnnotationQueueInfo = (RunSchemaWithAnnotationQueueInfo) o;
    return Objects.equals(this.name, runSchemaWithAnnotationQueueInfo.name) &&
        equalsNullable(this.inputs, runSchemaWithAnnotationQueueInfo.inputs) &&
        equalsNullable(this.inputsPreview, runSchemaWithAnnotationQueueInfo.inputsPreview) &&
        Objects.equals(this.runType, runSchemaWithAnnotationQueueInfo.runType) &&
        Objects.equals(this.startTime, runSchemaWithAnnotationQueueInfo.startTime) &&
        equalsNullable(this.endTime, runSchemaWithAnnotationQueueInfo.endTime) &&
        equalsNullable(this.extra, runSchemaWithAnnotationQueueInfo.extra) &&
        equalsNullable(this.error, runSchemaWithAnnotationQueueInfo.error) &&
        Objects.equals(this.executionOrder, runSchemaWithAnnotationQueueInfo.executionOrder) &&
        equalsNullable(this.serialized, runSchemaWithAnnotationQueueInfo.serialized) &&
        equalsNullable(this.outputs, runSchemaWithAnnotationQueueInfo.outputs) &&
        equalsNullable(this.outputsPreview, runSchemaWithAnnotationQueueInfo.outputsPreview) &&
        equalsNullable(this.parentRunId, runSchemaWithAnnotationQueueInfo.parentRunId) &&
        equalsNullable(this.manifestId, runSchemaWithAnnotationQueueInfo.manifestId) &&
        equalsNullable(this.manifestS3Id, runSchemaWithAnnotationQueueInfo.manifestS3Id) &&
        equalsNullable(this.events, runSchemaWithAnnotationQueueInfo.events) &&
        equalsNullable(this.tags, runSchemaWithAnnotationQueueInfo.tags) &&
        equalsNullable(this.inputsS3Urls, runSchemaWithAnnotationQueueInfo.inputsS3Urls) &&
        equalsNullable(this.outputsS3Urls, runSchemaWithAnnotationQueueInfo.outputsS3Urls) &&
        equalsNullable(this.s3Urls, runSchemaWithAnnotationQueueInfo.s3Urls) &&
        Objects.equals(this.traceId, runSchemaWithAnnotationQueueInfo.traceId) &&
        Objects.equals(this.dottedOrder, runSchemaWithAnnotationQueueInfo.dottedOrder) &&
        Objects.equals(this.id, runSchemaWithAnnotationQueueInfo.id) &&
        Objects.equals(this.status, runSchemaWithAnnotationQueueInfo.status) &&
        equalsNullable(this.childRunIds, runSchemaWithAnnotationQueueInfo.childRunIds) &&
        equalsNullable(this.directChildRunIds, runSchemaWithAnnotationQueueInfo.directChildRunIds) &&
        equalsNullable(this.parentRunIds, runSchemaWithAnnotationQueueInfo.parentRunIds) &&
        equalsNullable(this.feedbackStats, runSchemaWithAnnotationQueueInfo.feedbackStats) &&
        equalsNullable(this.referenceExampleId, runSchemaWithAnnotationQueueInfo.referenceExampleId) &&
        Objects.equals(this.totalTokens, runSchemaWithAnnotationQueueInfo.totalTokens) &&
        Objects.equals(this.promptTokens, runSchemaWithAnnotationQueueInfo.promptTokens) &&
        Objects.equals(this.completionTokens, runSchemaWithAnnotationQueueInfo.completionTokens) &&
        equalsNullable(this.promptTokenDetails, runSchemaWithAnnotationQueueInfo.promptTokenDetails) &&
        equalsNullable(this.completionTokenDetails, runSchemaWithAnnotationQueueInfo.completionTokenDetails) &&
        equalsNullable(this.totalCost, runSchemaWithAnnotationQueueInfo.totalCost) &&
        equalsNullable(this.promptCost, runSchemaWithAnnotationQueueInfo.promptCost) &&
        equalsNullable(this.completionCost, runSchemaWithAnnotationQueueInfo.completionCost) &&
        equalsNullable(this.promptCostDetails, runSchemaWithAnnotationQueueInfo.promptCostDetails) &&
        equalsNullable(this.completionCostDetails, runSchemaWithAnnotationQueueInfo.completionCostDetails) &&
        equalsNullable(this.priceModelId, runSchemaWithAnnotationQueueInfo.priceModelId) &&
        equalsNullable(this.firstTokenTime, runSchemaWithAnnotationQueueInfo.firstTokenTime) &&
        Objects.equals(this.sessionId, runSchemaWithAnnotationQueueInfo.sessionId) &&
        Objects.equals(this.appPath, runSchemaWithAnnotationQueueInfo.appPath) &&
        equalsNullable(this.lastQueuedAt, runSchemaWithAnnotationQueueInfo.lastQueuedAt) &&
        equalsNullable(this.inDataset, runSchemaWithAnnotationQueueInfo.inDataset) &&
        equalsNullable(this.shareToken, runSchemaWithAnnotationQueueInfo.shareToken) &&
        equalsNullable(this.traceTier, runSchemaWithAnnotationQueueInfo.traceTier) &&
        equalsNullable(this.traceFirstReceivedAt, runSchemaWithAnnotationQueueInfo.traceFirstReceivedAt) &&
        equalsNullable(this.ttlSeconds, runSchemaWithAnnotationQueueInfo.ttlSeconds) &&
        Objects.equals(this.traceUpgrade, runSchemaWithAnnotationQueueInfo.traceUpgrade) &&
        equalsNullable(this.referenceDatasetId, runSchemaWithAnnotationQueueInfo.referenceDatasetId) &&
        equalsNullable(this.threadId, runSchemaWithAnnotationQueueInfo.threadId) &&
        Objects.equals(this.queueRunId, runSchemaWithAnnotationQueueInfo.queueRunId) &&
        equalsNullable(this.lastReviewedTime, runSchemaWithAnnotationQueueInfo.lastReviewedTime) &&
        equalsNullable(this.addedAt, runSchemaWithAnnotationQueueInfo.addedAt) &&
        equalsNullable(this.effectiveAddedAt, runSchemaWithAnnotationQueueInfo.effectiveAddedAt);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, hashCodeNullable(inputs), hashCodeNullable(inputsPreview), runType, startTime, hashCodeNullable(endTime), hashCodeNullable(extra), hashCodeNullable(error), executionOrder, hashCodeNullable(serialized), hashCodeNullable(outputs), hashCodeNullable(outputsPreview), hashCodeNullable(parentRunId), hashCodeNullable(manifestId), hashCodeNullable(manifestS3Id), hashCodeNullable(events), hashCodeNullable(tags), hashCodeNullable(inputsS3Urls), hashCodeNullable(outputsS3Urls), hashCodeNullable(s3Urls), traceId, dottedOrder, id, status, hashCodeNullable(childRunIds), hashCodeNullable(directChildRunIds), hashCodeNullable(parentRunIds), hashCodeNullable(feedbackStats), hashCodeNullable(referenceExampleId), totalTokens, promptTokens, completionTokens, hashCodeNullable(promptTokenDetails), hashCodeNullable(completionTokenDetails), hashCodeNullable(totalCost), hashCodeNullable(promptCost), hashCodeNullable(completionCost), hashCodeNullable(promptCostDetails), hashCodeNullable(completionCostDetails), hashCodeNullable(priceModelId), hashCodeNullable(firstTokenTime), sessionId, appPath, hashCodeNullable(lastQueuedAt), hashCodeNullable(inDataset), hashCodeNullable(shareToken), hashCodeNullable(traceTier), hashCodeNullable(traceFirstReceivedAt), hashCodeNullable(ttlSeconds), traceUpgrade, hashCodeNullable(referenceDatasetId), hashCodeNullable(threadId), queueRunId, hashCodeNullable(lastReviewedTime), hashCodeNullable(addedAt), hashCodeNullable(effectiveAddedAt));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunSchemaWithAnnotationQueueInfo {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    inputsPreview: ").append(toIndentedString(inputsPreview)).append("\n");
    sb.append("    runType: ").append(toIndentedString(runType)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    executionOrder: ").append(toIndentedString(executionOrder)).append("\n");
    sb.append("    serialized: ").append(toIndentedString(serialized)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    outputsPreview: ").append(toIndentedString(outputsPreview)).append("\n");
    sb.append("    parentRunId: ").append(toIndentedString(parentRunId)).append("\n");
    sb.append("    manifestId: ").append(toIndentedString(manifestId)).append("\n");
    sb.append("    manifestS3Id: ").append(toIndentedString(manifestS3Id)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    inputsS3Urls: ").append(toIndentedString(inputsS3Urls)).append("\n");
    sb.append("    outputsS3Urls: ").append(toIndentedString(outputsS3Urls)).append("\n");
    sb.append("    s3Urls: ").append(toIndentedString(s3Urls)).append("\n");
    sb.append("    traceId: ").append(toIndentedString(traceId)).append("\n");
    sb.append("    dottedOrder: ").append(toIndentedString(dottedOrder)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    childRunIds: ").append(toIndentedString(childRunIds)).append("\n");
    sb.append("    directChildRunIds: ").append(toIndentedString(directChildRunIds)).append("\n");
    sb.append("    parentRunIds: ").append(toIndentedString(parentRunIds)).append("\n");
    sb.append("    feedbackStats: ").append(toIndentedString(feedbackStats)).append("\n");
    sb.append("    referenceExampleId: ").append(toIndentedString(referenceExampleId)).append("\n");
    sb.append("    totalTokens: ").append(toIndentedString(totalTokens)).append("\n");
    sb.append("    promptTokens: ").append(toIndentedString(promptTokens)).append("\n");
    sb.append("    completionTokens: ").append(toIndentedString(completionTokens)).append("\n");
    sb.append("    promptTokenDetails: ").append(toIndentedString(promptTokenDetails)).append("\n");
    sb.append("    completionTokenDetails: ").append(toIndentedString(completionTokenDetails)).append("\n");
    sb.append("    totalCost: ").append(toIndentedString(totalCost)).append("\n");
    sb.append("    promptCost: ").append(toIndentedString(promptCost)).append("\n");
    sb.append("    completionCost: ").append(toIndentedString(completionCost)).append("\n");
    sb.append("    promptCostDetails: ").append(toIndentedString(promptCostDetails)).append("\n");
    sb.append("    completionCostDetails: ").append(toIndentedString(completionCostDetails)).append("\n");
    sb.append("    priceModelId: ").append(toIndentedString(priceModelId)).append("\n");
    sb.append("    firstTokenTime: ").append(toIndentedString(firstTokenTime)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    appPath: ").append(toIndentedString(appPath)).append("\n");
    sb.append("    lastQueuedAt: ").append(toIndentedString(lastQueuedAt)).append("\n");
    sb.append("    inDataset: ").append(toIndentedString(inDataset)).append("\n");
    sb.append("    shareToken: ").append(toIndentedString(shareToken)).append("\n");
    sb.append("    traceTier: ").append(toIndentedString(traceTier)).append("\n");
    sb.append("    traceFirstReceivedAt: ").append(toIndentedString(traceFirstReceivedAt)).append("\n");
    sb.append("    ttlSeconds: ").append(toIndentedString(ttlSeconds)).append("\n");
    sb.append("    traceUpgrade: ").append(toIndentedString(traceUpgrade)).append("\n");
    sb.append("    referenceDatasetId: ").append(toIndentedString(referenceDatasetId)).append("\n");
    sb.append("    threadId: ").append(toIndentedString(threadId)).append("\n");
    sb.append("    queueRunId: ").append(toIndentedString(queueRunId)).append("\n");
    sb.append("    lastReviewedTime: ").append(toIndentedString(lastReviewedTime)).append("\n");
    sb.append("    addedAt: ").append(toIndentedString(addedAt)).append("\n");
    sb.append("    effectiveAddedAt: ").append(toIndentedString(effectiveAddedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `inputs` to the URL query string
    if (getInputs() != null) {
      joiner.add(String.format("%sinputs%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInputs()))));
    }

    // add `inputs_preview` to the URL query string
    if (getInputsPreview() != null) {
      joiner.add(String.format("%sinputs_preview%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInputsPreview()))));
    }

    // add `run_type` to the URL query string
    if (getRunType() != null) {
      joiner.add(String.format("%srun_type%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRunType()))));
    }

    // add `start_time` to the URL query string
    if (getStartTime() != null) {
      joiner.add(String.format("%sstart_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStartTime()))));
    }

    // add `end_time` to the URL query string
    if (getEndTime() != null) {
      joiner.add(String.format("%send_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEndTime()))));
    }

    // add `extra` to the URL query string
    if (getExtra() != null) {
      joiner.add(String.format("%sextra%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExtra()))));
    }

    // add `error` to the URL query string
    if (getError() != null) {
      joiner.add(String.format("%serror%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getError()))));
    }

    // add `execution_order` to the URL query string
    if (getExecutionOrder() != null) {
      joiner.add(String.format("%sexecution_order%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExecutionOrder()))));
    }

    // add `serialized` to the URL query string
    if (getSerialized() != null) {
      joiner.add(String.format("%sserialized%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSerialized()))));
    }

    // add `outputs` to the URL query string
    if (getOutputs() != null) {
      joiner.add(String.format("%soutputs%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOutputs()))));
    }

    // add `outputs_preview` to the URL query string
    if (getOutputsPreview() != null) {
      joiner.add(String.format("%soutputs_preview%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOutputsPreview()))));
    }

    // add `parent_run_id` to the URL query string
    if (getParentRunId() != null) {
      joiner.add(String.format("%sparent_run_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentRunId()))));
    }

    // add `manifest_id` to the URL query string
    if (getManifestId() != null) {
      joiner.add(String.format("%smanifest_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getManifestId()))));
    }

    // add `manifest_s3_id` to the URL query string
    if (getManifestS3Id() != null) {
      joiner.add(String.format("%smanifest_s3_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getManifestS3Id()))));
    }

    // add `events` to the URL query string
    if (getEvents() != null) {
      for (int i = 0; i < getEvents().size(); i++) {
        joiner.add(String.format("%sevents%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getEvents().get(i)))));
      }
    }

    // add `tags` to the URL query string
    if (getTags() != null) {
      for (int i = 0; i < getTags().size(); i++) {
        joiner.add(String.format("%stags%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getTags().get(i)))));
      }
    }

    // add `inputs_s3_urls` to the URL query string
    if (getInputsS3Urls() != null) {
      joiner.add(String.format("%sinputs_s3_urls%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInputsS3Urls()))));
    }

    // add `outputs_s3_urls` to the URL query string
    if (getOutputsS3Urls() != null) {
      joiner.add(String.format("%soutputs_s3_urls%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOutputsS3Urls()))));
    }

    // add `s3_urls` to the URL query string
    if (getS3Urls() != null) {
      joiner.add(String.format("%ss3_urls%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getS3Urls()))));
    }

    // add `trace_id` to the URL query string
    if (getTraceId() != null) {
      joiner.add(String.format("%strace_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTraceId()))));
    }

    // add `dotted_order` to the URL query string
    if (getDottedOrder() != null) {
      joiner.add(String.format("%sdotted_order%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDottedOrder()))));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
    }

    // add `child_run_ids` to the URL query string
    if (getChildRunIds() != null) {
      for (int i = 0; i < getChildRunIds().size(); i++) {
        if (getChildRunIds().get(i) != null) {
          joiner.add(String.format("%schild_run_ids%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getChildRunIds().get(i)))));
        }
      }
    }

    // add `direct_child_run_ids` to the URL query string
    if (getDirectChildRunIds() != null) {
      for (int i = 0; i < getDirectChildRunIds().size(); i++) {
        if (getDirectChildRunIds().get(i) != null) {
          joiner.add(String.format("%sdirect_child_run_ids%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getDirectChildRunIds().get(i)))));
        }
      }
    }

    // add `parent_run_ids` to the URL query string
    if (getParentRunIds() != null) {
      for (int i = 0; i < getParentRunIds().size(); i++) {
        if (getParentRunIds().get(i) != null) {
          joiner.add(String.format("%sparent_run_ids%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getParentRunIds().get(i)))));
        }
      }
    }

    // add `feedback_stats` to the URL query string
    if (getFeedbackStats() != null) {
      for (String _key : getFeedbackStats().keySet()) {
        joiner.add(String.format("%sfeedback_stats%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getFeedbackStats().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getFeedbackStats().get(_key)))));
      }
    }

    // add `reference_example_id` to the URL query string
    if (getReferenceExampleId() != null) {
      joiner.add(String.format("%sreference_example_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getReferenceExampleId()))));
    }

    // add `total_tokens` to the URL query string
    if (getTotalTokens() != null) {
      joiner.add(String.format("%stotal_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTotalTokens()))));
    }

    // add `prompt_tokens` to the URL query string
    if (getPromptTokens() != null) {
      joiner.add(String.format("%sprompt_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPromptTokens()))));
    }

    // add `completion_tokens` to the URL query string
    if (getCompletionTokens() != null) {
      joiner.add(String.format("%scompletion_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCompletionTokens()))));
    }

    // add `prompt_token_details` to the URL query string
    if (getPromptTokenDetails() != null) {
      for (String _key : getPromptTokenDetails().keySet()) {
        joiner.add(String.format("%sprompt_token_details%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getPromptTokenDetails().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getPromptTokenDetails().get(_key)))));
      }
    }

    // add `completion_token_details` to the URL query string
    if (getCompletionTokenDetails() != null) {
      for (String _key : getCompletionTokenDetails().keySet()) {
        joiner.add(String.format("%scompletion_token_details%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getCompletionTokenDetails().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getCompletionTokenDetails().get(_key)))));
      }
    }

    // add `total_cost` to the URL query string
    if (getTotalCost() != null) {
      joiner.add(String.format("%stotal_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTotalCost()))));
    }

    // add `prompt_cost` to the URL query string
    if (getPromptCost() != null) {
      joiner.add(String.format("%sprompt_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPromptCost()))));
    }

    // add `completion_cost` to the URL query string
    if (getCompletionCost() != null) {
      joiner.add(String.format("%scompletion_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCompletionCost()))));
    }

    // add `prompt_cost_details` to the URL query string
    if (getPromptCostDetails() != null) {
      for (String _key : getPromptCostDetails().keySet()) {
        joiner.add(String.format("%sprompt_cost_details%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getPromptCostDetails().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getPromptCostDetails().get(_key)))));
      }
    }

    // add `completion_cost_details` to the URL query string
    if (getCompletionCostDetails() != null) {
      for (String _key : getCompletionCostDetails().keySet()) {
        joiner.add(String.format("%scompletion_cost_details%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getCompletionCostDetails().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getCompletionCostDetails().get(_key)))));
      }
    }

    // add `price_model_id` to the URL query string
    if (getPriceModelId() != null) {
      joiner.add(String.format("%sprice_model_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPriceModelId()))));
    }

    // add `first_token_time` to the URL query string
    if (getFirstTokenTime() != null) {
      joiner.add(String.format("%sfirst_token_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFirstTokenTime()))));
    }

    // add `session_id` to the URL query string
    if (getSessionId() != null) {
      joiner.add(String.format("%ssession_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionId()))));
    }

    // add `app_path` to the URL query string
    if (getAppPath() != null) {
      joiner.add(String.format("%sapp_path%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAppPath()))));
    }

    // add `last_queued_at` to the URL query string
    if (getLastQueuedAt() != null) {
      joiner.add(String.format("%slast_queued_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastQueuedAt()))));
    }

    // add `in_dataset` to the URL query string
    if (getInDataset() != null) {
      joiner.add(String.format("%sin_dataset%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInDataset()))));
    }

    // add `share_token` to the URL query string
    if (getShareToken() != null) {
      joiner.add(String.format("%sshare_token%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getShareToken()))));
    }

    // add `trace_tier` to the URL query string
    if (getTraceTier() != null) {
      joiner.add(String.format("%strace_tier%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTraceTier()))));
    }

    // add `trace_first_received_at` to the URL query string
    if (getTraceFirstReceivedAt() != null) {
      joiner.add(String.format("%strace_first_received_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTraceFirstReceivedAt()))));
    }

    // add `ttl_seconds` to the URL query string
    if (getTtlSeconds() != null) {
      joiner.add(String.format("%sttl_seconds%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTtlSeconds()))));
    }

    // add `trace_upgrade` to the URL query string
    if (getTraceUpgrade() != null) {
      joiner.add(String.format("%strace_upgrade%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTraceUpgrade()))));
    }

    // add `reference_dataset_id` to the URL query string
    if (getReferenceDatasetId() != null) {
      joiner.add(String.format("%sreference_dataset_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getReferenceDatasetId()))));
    }

    // add `thread_id` to the URL query string
    if (getThreadId() != null) {
      joiner.add(String.format("%sthread_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getThreadId()))));
    }

    // add `queue_run_id` to the URL query string
    if (getQueueRunId() != null) {
      joiner.add(String.format("%squeue_run_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getQueueRunId()))));
    }

    // add `last_reviewed_time` to the URL query string
    if (getLastReviewedTime() != null) {
      joiner.add(String.format("%slast_reviewed_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastReviewedTime()))));
    }

    // add `added_at` to the URL query string
    if (getAddedAt() != null) {
      joiner.add(String.format("%sadded_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAddedAt()))));
    }

    // add `effective_added_at` to the URL query string
    if (getEffectiveAddedAt() != null) {
      joiner.add(String.format("%seffective_added_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEffectiveAddedAt()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private RunSchemaWithAnnotationQueueInfo instance;

    public Builder() {
      this(new RunSchemaWithAnnotationQueueInfo());
    }

    protected Builder(RunSchemaWithAnnotationQueueInfo instance) {
      this.instance = instance;
    }

    public RunSchemaWithAnnotationQueueInfo.Builder name(String name) {
      this.instance.name = name;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder inputs(Object inputs) {
      this.instance.inputs = JsonNullable.<Object>of(inputs);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder inputs(JsonNullable<Object> inputs) {
      this.instance.inputs = inputs;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder inputsPreview(String inputsPreview) {
      this.instance.inputsPreview = JsonNullable.<String>of(inputsPreview);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder inputsPreview(JsonNullable<String> inputsPreview) {
      this.instance.inputsPreview = inputsPreview;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder runType(RunTypeEnum runType) {
      this.instance.runType = runType;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder startTime(OffsetDateTime startTime) {
      this.instance.startTime = startTime;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder endTime(OffsetDateTime endTime) {
      this.instance.endTime = JsonNullable.<OffsetDateTime>of(endTime);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder endTime(JsonNullable<OffsetDateTime> endTime) {
      this.instance.endTime = endTime;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder extra(Object extra) {
      this.instance.extra = JsonNullable.<Object>of(extra);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder extra(JsonNullable<Object> extra) {
      this.instance.extra = extra;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder error(String error) {
      this.instance.error = JsonNullable.<String>of(error);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder error(JsonNullable<String> error) {
      this.instance.error = error;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder executionOrder(Integer executionOrder) {
      this.instance.executionOrder = executionOrder;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder serialized(Object serialized) {
      this.instance.serialized = JsonNullable.<Object>of(serialized);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder serialized(JsonNullable<Object> serialized) {
      this.instance.serialized = serialized;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder outputs(Object outputs) {
      this.instance.outputs = JsonNullable.<Object>of(outputs);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder outputs(JsonNullable<Object> outputs) {
      this.instance.outputs = outputs;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder outputsPreview(String outputsPreview) {
      this.instance.outputsPreview = JsonNullable.<String>of(outputsPreview);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder outputsPreview(JsonNullable<String> outputsPreview) {
      this.instance.outputsPreview = outputsPreview;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder parentRunId(UUID parentRunId) {
      this.instance.parentRunId = JsonNullable.<UUID>of(parentRunId);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder parentRunId(JsonNullable<UUID> parentRunId) {
      this.instance.parentRunId = parentRunId;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder manifestId(UUID manifestId) {
      this.instance.manifestId = JsonNullable.<UUID>of(manifestId);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder manifestId(JsonNullable<UUID> manifestId) {
      this.instance.manifestId = manifestId;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder manifestS3Id(UUID manifestS3Id) {
      this.instance.manifestS3Id = JsonNullable.<UUID>of(manifestS3Id);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder manifestS3Id(JsonNullable<UUID> manifestS3Id) {
      this.instance.manifestS3Id = manifestS3Id;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder events(List<Object> events) {
      this.instance.events = JsonNullable.<List<Object>>of(events);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder events(JsonNullable<List<Object>> events) {
      this.instance.events = events;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder tags(List<String> tags) {
      this.instance.tags = JsonNullable.<List<String>>of(tags);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder tags(JsonNullable<List<String>> tags) {
      this.instance.tags = tags;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder inputsS3Urls(Object inputsS3Urls) {
      this.instance.inputsS3Urls = JsonNullable.<Object>of(inputsS3Urls);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder inputsS3Urls(JsonNullable<Object> inputsS3Urls) {
      this.instance.inputsS3Urls = inputsS3Urls;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder outputsS3Urls(Object outputsS3Urls) {
      this.instance.outputsS3Urls = JsonNullable.<Object>of(outputsS3Urls);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder outputsS3Urls(JsonNullable<Object> outputsS3Urls) {
      this.instance.outputsS3Urls = outputsS3Urls;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder s3Urls(Object s3Urls) {
      this.instance.s3Urls = JsonNullable.<Object>of(s3Urls);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder s3Urls(JsonNullable<Object> s3Urls) {
      this.instance.s3Urls = s3Urls;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder traceId(UUID traceId) {
      this.instance.traceId = traceId;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder dottedOrder(String dottedOrder) {
      this.instance.dottedOrder = dottedOrder;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder status(String status) {
      this.instance.status = status;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder childRunIds(List<UUID> childRunIds) {
      this.instance.childRunIds = JsonNullable.<List<UUID>>of(childRunIds);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder childRunIds(JsonNullable<List<UUID>> childRunIds) {
      this.instance.childRunIds = childRunIds;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder directChildRunIds(List<UUID> directChildRunIds) {
      this.instance.directChildRunIds = JsonNullable.<List<UUID>>of(directChildRunIds);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder directChildRunIds(JsonNullable<List<UUID>> directChildRunIds) {
      this.instance.directChildRunIds = directChildRunIds;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder parentRunIds(List<UUID> parentRunIds) {
      this.instance.parentRunIds = JsonNullable.<List<UUID>>of(parentRunIds);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder parentRunIds(JsonNullable<List<UUID>> parentRunIds) {
      this.instance.parentRunIds = parentRunIds;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder feedbackStats(Map<String, Object> feedbackStats) {
      this.instance.feedbackStats = JsonNullable.<Map<String, Object>>of(feedbackStats);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder feedbackStats(JsonNullable<Map<String, Object>> feedbackStats) {
      this.instance.feedbackStats = feedbackStats;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder referenceExampleId(UUID referenceExampleId) {
      this.instance.referenceExampleId = JsonNullable.<UUID>of(referenceExampleId);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder referenceExampleId(JsonNullable<UUID> referenceExampleId) {
      this.instance.referenceExampleId = referenceExampleId;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder totalTokens(Integer totalTokens) {
      this.instance.totalTokens = totalTokens;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder promptTokens(Integer promptTokens) {
      this.instance.promptTokens = promptTokens;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder completionTokens(Integer completionTokens) {
      this.instance.completionTokens = completionTokens;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder promptTokenDetails(Map<String, Integer> promptTokenDetails) {
      this.instance.promptTokenDetails = JsonNullable.<Map<String, Integer>>of(promptTokenDetails);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder promptTokenDetails(JsonNullable<Map<String, Integer>> promptTokenDetails) {
      this.instance.promptTokenDetails = promptTokenDetails;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder completionTokenDetails(Map<String, Integer> completionTokenDetails) {
      this.instance.completionTokenDetails = JsonNullable.<Map<String, Integer>>of(completionTokenDetails);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder completionTokenDetails(JsonNullable<Map<String, Integer>> completionTokenDetails) {
      this.instance.completionTokenDetails = completionTokenDetails;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder totalCost(String totalCost) {
      this.instance.totalCost = JsonNullable.<String>of(totalCost);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder totalCost(JsonNullable<String> totalCost) {
      this.instance.totalCost = totalCost;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder promptCost(String promptCost) {
      this.instance.promptCost = JsonNullable.<String>of(promptCost);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder promptCost(JsonNullable<String> promptCost) {
      this.instance.promptCost = promptCost;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder completionCost(String completionCost) {
      this.instance.completionCost = JsonNullable.<String>of(completionCost);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder completionCost(JsonNullable<String> completionCost) {
      this.instance.completionCost = completionCost;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder promptCostDetails(Map<String, String> promptCostDetails) {
      this.instance.promptCostDetails = JsonNullable.<Map<String, String>>of(promptCostDetails);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder promptCostDetails(JsonNullable<Map<String, String>> promptCostDetails) {
      this.instance.promptCostDetails = promptCostDetails;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder completionCostDetails(Map<String, String> completionCostDetails) {
      this.instance.completionCostDetails = JsonNullable.<Map<String, String>>of(completionCostDetails);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder completionCostDetails(JsonNullable<Map<String, String>> completionCostDetails) {
      this.instance.completionCostDetails = completionCostDetails;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder priceModelId(UUID priceModelId) {
      this.instance.priceModelId = JsonNullable.<UUID>of(priceModelId);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder priceModelId(JsonNullable<UUID> priceModelId) {
      this.instance.priceModelId = priceModelId;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder firstTokenTime(OffsetDateTime firstTokenTime) {
      this.instance.firstTokenTime = JsonNullable.<OffsetDateTime>of(firstTokenTime);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder firstTokenTime(JsonNullable<OffsetDateTime> firstTokenTime) {
      this.instance.firstTokenTime = firstTokenTime;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder sessionId(UUID sessionId) {
      this.instance.sessionId = sessionId;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder appPath(String appPath) {
      this.instance.appPath = appPath;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder lastQueuedAt(OffsetDateTime lastQueuedAt) {
      this.instance.lastQueuedAt = JsonNullable.<OffsetDateTime>of(lastQueuedAt);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder lastQueuedAt(JsonNullable<OffsetDateTime> lastQueuedAt) {
      this.instance.lastQueuedAt = lastQueuedAt;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder inDataset(Boolean inDataset) {
      this.instance.inDataset = JsonNullable.<Boolean>of(inDataset);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder inDataset(JsonNullable<Boolean> inDataset) {
      this.instance.inDataset = inDataset;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder shareToken(UUID shareToken) {
      this.instance.shareToken = JsonNullable.<UUID>of(shareToken);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder shareToken(JsonNullable<UUID> shareToken) {
      this.instance.shareToken = shareToken;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder traceTier(TraceTier traceTier) {
      this.instance.traceTier = JsonNullable.<TraceTier>of(traceTier);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder traceTier(JsonNullable<TraceTier> traceTier) {
      this.instance.traceTier = traceTier;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder traceFirstReceivedAt(OffsetDateTime traceFirstReceivedAt) {
      this.instance.traceFirstReceivedAt = JsonNullable.<OffsetDateTime>of(traceFirstReceivedAt);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder traceFirstReceivedAt(JsonNullable<OffsetDateTime> traceFirstReceivedAt) {
      this.instance.traceFirstReceivedAt = traceFirstReceivedAt;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder ttlSeconds(Integer ttlSeconds) {
      this.instance.ttlSeconds = JsonNullable.<Integer>of(ttlSeconds);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder ttlSeconds(JsonNullable<Integer> ttlSeconds) {
      this.instance.ttlSeconds = ttlSeconds;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder traceUpgrade(Boolean traceUpgrade) {
      this.instance.traceUpgrade = traceUpgrade;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder referenceDatasetId(UUID referenceDatasetId) {
      this.instance.referenceDatasetId = JsonNullable.<UUID>of(referenceDatasetId);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder referenceDatasetId(JsonNullable<UUID> referenceDatasetId) {
      this.instance.referenceDatasetId = referenceDatasetId;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder threadId(String threadId) {
      this.instance.threadId = JsonNullable.<String>of(threadId);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder threadId(JsonNullable<String> threadId) {
      this.instance.threadId = threadId;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder queueRunId(UUID queueRunId) {
      this.instance.queueRunId = queueRunId;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder lastReviewedTime(OffsetDateTime lastReviewedTime) {
      this.instance.lastReviewedTime = JsonNullable.<OffsetDateTime>of(lastReviewedTime);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder lastReviewedTime(JsonNullable<OffsetDateTime> lastReviewedTime) {
      this.instance.lastReviewedTime = lastReviewedTime;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder addedAt(OffsetDateTime addedAt) {
      this.instance.addedAt = JsonNullable.<OffsetDateTime>of(addedAt);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder addedAt(JsonNullable<OffsetDateTime> addedAt) {
      this.instance.addedAt = addedAt;
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder effectiveAddedAt(OffsetDateTime effectiveAddedAt) {
      this.instance.effectiveAddedAt = JsonNullable.<OffsetDateTime>of(effectiveAddedAt);
      return this;
    }
    public RunSchemaWithAnnotationQueueInfo.Builder effectiveAddedAt(JsonNullable<OffsetDateTime> effectiveAddedAt) {
      this.instance.effectiveAddedAt = effectiveAddedAt;
      return this;
    }


    /**
    * returns a built RunSchemaWithAnnotationQueueInfo instance.
    *
    * The builder is not reusable.
    */
    public RunSchemaWithAnnotationQueueInfo build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static RunSchemaWithAnnotationQueueInfo.Builder builder() {
    return new RunSchemaWithAnnotationQueueInfo.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public RunSchemaWithAnnotationQueueInfo.Builder toBuilder() {
    return new RunSchemaWithAnnotationQueueInfo.Builder()
      .name(getName())
      .inputs(getInputs())
      .inputsPreview(getInputsPreview())
      .runType(getRunType())
      .startTime(getStartTime())
      .endTime(getEndTime())
      .extra(getExtra())
      .error(getError())
      .executionOrder(getExecutionOrder())
      .serialized(getSerialized())
      .outputs(getOutputs())
      .outputsPreview(getOutputsPreview())
      .parentRunId(getParentRunId())
      .manifestId(getManifestId())
      .manifestS3Id(getManifestS3Id())
      .events(getEvents())
      .tags(getTags())
      .inputsS3Urls(getInputsS3Urls())
      .outputsS3Urls(getOutputsS3Urls())
      .s3Urls(getS3Urls())
      .traceId(getTraceId())
      .dottedOrder(getDottedOrder())
      .id(getId())
      .status(getStatus())
      .childRunIds(getChildRunIds())
      .directChildRunIds(getDirectChildRunIds())
      .parentRunIds(getParentRunIds())
      .feedbackStats(getFeedbackStats())
      .referenceExampleId(getReferenceExampleId())
      .totalTokens(getTotalTokens())
      .promptTokens(getPromptTokens())
      .completionTokens(getCompletionTokens())
      .promptTokenDetails(getPromptTokenDetails())
      .completionTokenDetails(getCompletionTokenDetails())
      .totalCost(getTotalCost())
      .promptCost(getPromptCost())
      .completionCost(getCompletionCost())
      .promptCostDetails(getPromptCostDetails())
      .completionCostDetails(getCompletionCostDetails())
      .priceModelId(getPriceModelId())
      .firstTokenTime(getFirstTokenTime())
      .sessionId(getSessionId())
      .appPath(getAppPath())
      .lastQueuedAt(getLastQueuedAt())
      .inDataset(getInDataset())
      .shareToken(getShareToken())
      .traceTier(getTraceTier())
      .traceFirstReceivedAt(getTraceFirstReceivedAt())
      .ttlSeconds(getTtlSeconds())
      .traceUpgrade(getTraceUpgrade())
      .referenceDatasetId(getReferenceDatasetId())
      .threadId(getThreadId())
      .queueRunId(getQueueRunId())
      .lastReviewedTime(getLastReviewedTime())
      .addedAt(getAddedAt())
      .effectiveAddedAt(getEffectiveAddedAt());
  }

}

