/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.bsc.langgraph4j.langsmith.gen.model.Sample;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Request to create a run clustering job.
 */
@JsonPropertyOrder({
  CreateRunClusteringJobRequest.JSON_PROPERTY_START_TIME,
  CreateRunClusteringJobRequest.JSON_PROPERTY_END_TIME,
  CreateRunClusteringJobRequest.JSON_PROPERTY_LAST_N_HOURS,
  CreateRunClusteringJobRequest.JSON_PROPERTY_HIERARCHY,
  CreateRunClusteringJobRequest.JSON_PROPERTY_PARTITIONS,
  CreateRunClusteringJobRequest.JSON_PROPERTY_SAMPLE,
  CreateRunClusteringJobRequest.JSON_PROPERTY_SUMMARY_PROMPT,
  CreateRunClusteringJobRequest.JSON_PROPERTY_FILTER,
  CreateRunClusteringJobRequest.JSON_PROPERTY_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class CreateRunClusteringJobRequest {
  public static final String JSON_PROPERTY_START_TIME = "start_time";
  private JsonNullable<OffsetDateTime> startTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  private JsonNullable<OffsetDateTime> endTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_LAST_N_HOURS = "last_n_hours";
  private JsonNullable<Integer> lastNHours = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_HIERARCHY = "hierarchy";
  private JsonNullable<List<Integer>> hierarchy = JsonNullable.<List<Integer>>undefined();

  public static final String JSON_PROPERTY_PARTITIONS = "partitions";
  private JsonNullable<Map<String, String>> partitions = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_SAMPLE = "sample";
  private JsonNullable<Sample> sample = JsonNullable.<Sample>undefined();

  public static final String JSON_PROPERTY_SUMMARY_PROMPT = "summary_prompt";
  private JsonNullable<String> summaryPrompt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FILTER = "filter";
  private JsonNullable<String> filter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public CreateRunClusteringJobRequest() { 
  }

  public CreateRunClusteringJobRequest startTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = JsonNullable.<OffsetDateTime>of(startTime);
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getStartTime() {
        return startTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getStartTime_JsonNullable() {
    return startTime;
  }
  
  @JsonProperty(JSON_PROPERTY_START_TIME)
  public void setStartTime_JsonNullable(JsonNullable<OffsetDateTime> startTime) {
    this.startTime = startTime;
  }

  public void setStartTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = JsonNullable.<OffsetDateTime>of(startTime);
  }


  public CreateRunClusteringJobRequest endTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getEndTime() {
        return endTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEndTime_JsonNullable() {
    return endTime;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME)
  public void setEndTime_JsonNullable(JsonNullable<OffsetDateTime> endTime) {
    this.endTime = endTime;
  }

  public void setEndTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
  }


  public CreateRunClusteringJobRequest lastNHours(@javax.annotation.Nullable Integer lastNHours) {
    this.lastNHours = JsonNullable.<Integer>of(lastNHours);
    return this;
  }

  /**
   * Get lastNHours
   * @return lastNHours
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getLastNHours() {
        return lastNHours.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_N_HOURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getLastNHours_JsonNullable() {
    return lastNHours;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_N_HOURS)
  public void setLastNHours_JsonNullable(JsonNullable<Integer> lastNHours) {
    this.lastNHours = lastNHours;
  }

  public void setLastNHours(@javax.annotation.Nullable Integer lastNHours) {
    this.lastNHours = JsonNullable.<Integer>of(lastNHours);
  }


  public CreateRunClusteringJobRequest hierarchy(@javax.annotation.Nullable List<Integer> hierarchy) {
    this.hierarchy = JsonNullable.<List<Integer>>of(hierarchy);
    return this;
  }

  public CreateRunClusteringJobRequest addHierarchyItem(Integer hierarchyItem) {
    if (this.hierarchy == null || !this.hierarchy.isPresent()) {
      this.hierarchy = JsonNullable.<List<Integer>>of(new ArrayList<>());
    }
    try {
      this.hierarchy.get().add(hierarchyItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get hierarchy
   * @return hierarchy
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<Integer> getHierarchy() {
        return hierarchy.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HIERARCHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Integer>> getHierarchy_JsonNullable() {
    return hierarchy;
  }
  
  @JsonProperty(JSON_PROPERTY_HIERARCHY)
  public void setHierarchy_JsonNullable(JsonNullable<List<Integer>> hierarchy) {
    this.hierarchy = hierarchy;
  }

  public void setHierarchy(@javax.annotation.Nullable List<Integer> hierarchy) {
    this.hierarchy = JsonNullable.<List<Integer>>of(hierarchy);
  }


  public CreateRunClusteringJobRequest partitions(@javax.annotation.Nullable Map<String, String> partitions) {
    this.partitions = JsonNullable.<Map<String, String>>of(partitions);
    return this;
  }

  public CreateRunClusteringJobRequest putPartitionsItem(String key, String partitionsItem) {
    if (this.partitions == null || !this.partitions.isPresent()) {
      this.partitions = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.partitions.get().put(key, partitionsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get partitions
   * @return partitions
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, String> getPartitions() {
        return partitions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARTITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getPartitions_JsonNullable() {
    return partitions;
  }
  
  @JsonProperty(JSON_PROPERTY_PARTITIONS)
  public void setPartitions_JsonNullable(JsonNullable<Map<String, String>> partitions) {
    this.partitions = partitions;
  }

  public void setPartitions(@javax.annotation.Nullable Map<String, String> partitions) {
    this.partitions = JsonNullable.<Map<String, String>>of(partitions);
  }


  public CreateRunClusteringJobRequest sample(@javax.annotation.Nullable Sample sample) {
    this.sample = JsonNullable.<Sample>of(sample);
    return this;
  }

  /**
   * Get sample
   * @return sample
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Sample getSample() {
        return sample.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAMPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Sample> getSample_JsonNullable() {
    return sample;
  }
  
  @JsonProperty(JSON_PROPERTY_SAMPLE)
  public void setSample_JsonNullable(JsonNullable<Sample> sample) {
    this.sample = sample;
  }

  public void setSample(@javax.annotation.Nullable Sample sample) {
    this.sample = JsonNullable.<Sample>of(sample);
  }


  public CreateRunClusteringJobRequest summaryPrompt(@javax.annotation.Nullable String summaryPrompt) {
    this.summaryPrompt = JsonNullable.<String>of(summaryPrompt);
    return this;
  }

  /**
   * Get summaryPrompt
   * @return summaryPrompt
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSummaryPrompt() {
        return summaryPrompt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUMMARY_PROMPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSummaryPrompt_JsonNullable() {
    return summaryPrompt;
  }
  
  @JsonProperty(JSON_PROPERTY_SUMMARY_PROMPT)
  public void setSummaryPrompt_JsonNullable(JsonNullable<String> summaryPrompt) {
    this.summaryPrompt = summaryPrompt;
  }

  public void setSummaryPrompt(@javax.annotation.Nullable String summaryPrompt) {
    this.summaryPrompt = JsonNullable.<String>of(summaryPrompt);
  }


  public CreateRunClusteringJobRequest filter(@javax.annotation.Nullable String filter) {
    this.filter = JsonNullable.<String>of(filter);
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFilter() {
        return filter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFilter_JsonNullable() {
    return filter;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER)
  public void setFilter_JsonNullable(JsonNullable<String> filter) {
    this.filter = filter;
  }

  public void setFilter(@javax.annotation.Nullable String filter) {
    this.filter = JsonNullable.<String>of(filter);
  }


  public CreateRunClusteringJobRequest name(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
  }


  /**
   * Return true if this CreateRunClusteringJobRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateRunClusteringJobRequest createRunClusteringJobRequest = (CreateRunClusteringJobRequest) o;
    return equalsNullable(this.startTime, createRunClusteringJobRequest.startTime) &&
        equalsNullable(this.endTime, createRunClusteringJobRequest.endTime) &&
        equalsNullable(this.lastNHours, createRunClusteringJobRequest.lastNHours) &&
        equalsNullable(this.hierarchy, createRunClusteringJobRequest.hierarchy) &&
        equalsNullable(this.partitions, createRunClusteringJobRequest.partitions) &&
        equalsNullable(this.sample, createRunClusteringJobRequest.sample) &&
        equalsNullable(this.summaryPrompt, createRunClusteringJobRequest.summaryPrompt) &&
        equalsNullable(this.filter, createRunClusteringJobRequest.filter) &&
        equalsNullable(this.name, createRunClusteringJobRequest.name);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(startTime), hashCodeNullable(endTime), hashCodeNullable(lastNHours), hashCodeNullable(hierarchy), hashCodeNullable(partitions), hashCodeNullable(sample), hashCodeNullable(summaryPrompt), hashCodeNullable(filter), hashCodeNullable(name));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateRunClusteringJobRequest {\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    lastNHours: ").append(toIndentedString(lastNHours)).append("\n");
    sb.append("    hierarchy: ").append(toIndentedString(hierarchy)).append("\n");
    sb.append("    partitions: ").append(toIndentedString(partitions)).append("\n");
    sb.append("    sample: ").append(toIndentedString(sample)).append("\n");
    sb.append("    summaryPrompt: ").append(toIndentedString(summaryPrompt)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `start_time` to the URL query string
    if (getStartTime() != null) {
      joiner.add(String.format("%sstart_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStartTime()))));
    }

    // add `end_time` to the URL query string
    if (getEndTime() != null) {
      joiner.add(String.format("%send_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEndTime()))));
    }

    // add `last_n_hours` to the URL query string
    if (getLastNHours() != null) {
      joiner.add(String.format("%slast_n_hours%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastNHours()))));
    }

    // add `hierarchy` to the URL query string
    if (getHierarchy() != null) {
      for (int i = 0; i < getHierarchy().size(); i++) {
        joiner.add(String.format("%shierarchy%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getHierarchy().get(i)))));
      }
    }

    // add `partitions` to the URL query string
    if (getPartitions() != null) {
      for (String _key : getPartitions().keySet()) {
        joiner.add(String.format("%spartitions%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getPartitions().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getPartitions().get(_key)))));
      }
    }

    // add `sample` to the URL query string
    if (getSample() != null) {
      joiner.add(getSample().toUrlQueryString(prefix + "sample" + suffix));
    }

    // add `summary_prompt` to the URL query string
    if (getSummaryPrompt() != null) {
      joiner.add(String.format("%ssummary_prompt%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSummaryPrompt()))));
    }

    // add `filter` to the URL query string
    if (getFilter() != null) {
      joiner.add(String.format("%sfilter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFilter()))));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private CreateRunClusteringJobRequest instance;

    public Builder() {
      this(new CreateRunClusteringJobRequest());
    }

    protected Builder(CreateRunClusteringJobRequest instance) {
      this.instance = instance;
    }

    public CreateRunClusteringJobRequest.Builder startTime(OffsetDateTime startTime) {
      this.instance.startTime = JsonNullable.<OffsetDateTime>of(startTime);
      return this;
    }
    public CreateRunClusteringJobRequest.Builder startTime(JsonNullable<OffsetDateTime> startTime) {
      this.instance.startTime = startTime;
      return this;
    }
    public CreateRunClusteringJobRequest.Builder endTime(OffsetDateTime endTime) {
      this.instance.endTime = JsonNullable.<OffsetDateTime>of(endTime);
      return this;
    }
    public CreateRunClusteringJobRequest.Builder endTime(JsonNullable<OffsetDateTime> endTime) {
      this.instance.endTime = endTime;
      return this;
    }
    public CreateRunClusteringJobRequest.Builder lastNHours(Integer lastNHours) {
      this.instance.lastNHours = JsonNullable.<Integer>of(lastNHours);
      return this;
    }
    public CreateRunClusteringJobRequest.Builder lastNHours(JsonNullable<Integer> lastNHours) {
      this.instance.lastNHours = lastNHours;
      return this;
    }
    public CreateRunClusteringJobRequest.Builder hierarchy(List<Integer> hierarchy) {
      this.instance.hierarchy = JsonNullable.<List<Integer>>of(hierarchy);
      return this;
    }
    public CreateRunClusteringJobRequest.Builder hierarchy(JsonNullable<List<Integer>> hierarchy) {
      this.instance.hierarchy = hierarchy;
      return this;
    }
    public CreateRunClusteringJobRequest.Builder partitions(Map<String, String> partitions) {
      this.instance.partitions = JsonNullable.<Map<String, String>>of(partitions);
      return this;
    }
    public CreateRunClusteringJobRequest.Builder partitions(JsonNullable<Map<String, String>> partitions) {
      this.instance.partitions = partitions;
      return this;
    }
    public CreateRunClusteringJobRequest.Builder sample(Sample sample) {
      this.instance.sample = JsonNullable.<Sample>of(sample);
      return this;
    }
    public CreateRunClusteringJobRequest.Builder sample(JsonNullable<Sample> sample) {
      this.instance.sample = sample;
      return this;
    }
    public CreateRunClusteringJobRequest.Builder summaryPrompt(String summaryPrompt) {
      this.instance.summaryPrompt = JsonNullable.<String>of(summaryPrompt);
      return this;
    }
    public CreateRunClusteringJobRequest.Builder summaryPrompt(JsonNullable<String> summaryPrompt) {
      this.instance.summaryPrompt = summaryPrompt;
      return this;
    }
    public CreateRunClusteringJobRequest.Builder filter(String filter) {
      this.instance.filter = JsonNullable.<String>of(filter);
      return this;
    }
    public CreateRunClusteringJobRequest.Builder filter(JsonNullable<String> filter) {
      this.instance.filter = filter;
      return this;
    }
    public CreateRunClusteringJobRequest.Builder name(String name) {
      this.instance.name = JsonNullable.<String>of(name);
      return this;
    }
    public CreateRunClusteringJobRequest.Builder name(JsonNullable<String> name) {
      this.instance.name = name;
      return this;
    }


    /**
    * returns a built CreateRunClusteringJobRequest instance.
    *
    * The builder is not reusable.
    */
    public CreateRunClusteringJobRequest build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static CreateRunClusteringJobRequest.Builder builder() {
    return new CreateRunClusteringJobRequest.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public CreateRunClusteringJobRequest.Builder toBuilder() {
    return new CreateRunClusteringJobRequest.Builder()
      .startTime(getStartTime())
      .endTime(getEndTime())
      .lastNHours(getLastNHours())
      .hierarchy(getHierarchy())
      .partitions(getPartitions())
      .sample(getSample())
      .summaryPrompt(getSummaryPrompt())
      .filter(getFilter())
      .name(getName());
  }

}

