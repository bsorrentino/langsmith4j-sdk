/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * BulkExportRunProgress
 */
@JsonPropertyOrder({
  BulkExportRunProgress.JSON_PROPERTY_ROWS_WRITTEN,
  BulkExportRunProgress.JSON_PROPERTY_EXPORTED_FILES,
  BulkExportRunProgress.JSON_PROPERTY_EXPORT_PATH,
  BulkExportRunProgress.JSON_PROPERTY_LATEST_CURSOR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class BulkExportRunProgress {
  public static final String JSON_PROPERTY_ROWS_WRITTEN = "rows_written";
  @javax.annotation.Nonnull
  private Integer rowsWritten;

  public static final String JSON_PROPERTY_EXPORTED_FILES = "exported_files";
  @javax.annotation.Nonnull
  private List<String> exportedFiles = new ArrayList<>();

  public static final String JSON_PROPERTY_EXPORT_PATH = "export_path";
  @javax.annotation.Nonnull
  private String exportPath;

  public static final String JSON_PROPERTY_LATEST_CURSOR = "latest_cursor";
  @javax.annotation.Nullable
  private String latestCursor;

  public BulkExportRunProgress() { 
  }

  public BulkExportRunProgress rowsWritten(@javax.annotation.Nonnull Integer rowsWritten) {
    this.rowsWritten = rowsWritten;
    return this;
  }

  /**
   * Get rowsWritten
   * @return rowsWritten
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROWS_WRITTEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getRowsWritten() {
    return rowsWritten;
  }


  @JsonProperty(JSON_PROPERTY_ROWS_WRITTEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRowsWritten(@javax.annotation.Nonnull Integer rowsWritten) {
    this.rowsWritten = rowsWritten;
  }


  public BulkExportRunProgress exportedFiles(@javax.annotation.Nonnull List<String> exportedFiles) {
    this.exportedFiles = exportedFiles;
    return this;
  }

  public BulkExportRunProgress addExportedFilesItem(String exportedFilesItem) {
    if (this.exportedFiles == null) {
      this.exportedFiles = new ArrayList<>();
    }
    this.exportedFiles.add(exportedFilesItem);
    return this;
  }

  /**
   * Get exportedFiles
   * @return exportedFiles
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPORTED_FILES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<String> getExportedFiles() {
    return exportedFiles;
  }


  @JsonProperty(JSON_PROPERTY_EXPORTED_FILES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExportedFiles(@javax.annotation.Nonnull List<String> exportedFiles) {
    this.exportedFiles = exportedFiles;
  }


  public BulkExportRunProgress exportPath(@javax.annotation.Nonnull String exportPath) {
    this.exportPath = exportPath;
    return this;
  }

  /**
   * Get exportPath
   * @return exportPath
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPORT_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getExportPath() {
    return exportPath;
  }


  @JsonProperty(JSON_PROPERTY_EXPORT_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExportPath(@javax.annotation.Nonnull String exportPath) {
    this.exportPath = exportPath;
  }


  public BulkExportRunProgress latestCursor(@javax.annotation.Nullable String latestCursor) {
    this.latestCursor = latestCursor;
    return this;
  }

  /**
   * Get latestCursor
   * @return latestCursor
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LATEST_CURSOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLatestCursor() {
    return latestCursor;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_CURSOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLatestCursor(@javax.annotation.Nullable String latestCursor) {
    this.latestCursor = latestCursor;
  }


  /**
   * Return true if this BulkExportRunProgress object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkExportRunProgress bulkExportRunProgress = (BulkExportRunProgress) o;
    return Objects.equals(this.rowsWritten, bulkExportRunProgress.rowsWritten) &&
        Objects.equals(this.exportedFiles, bulkExportRunProgress.exportedFiles) &&
        Objects.equals(this.exportPath, bulkExportRunProgress.exportPath) &&
        Objects.equals(this.latestCursor, bulkExportRunProgress.latestCursor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rowsWritten, exportedFiles, exportPath, latestCursor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkExportRunProgress {\n");
    sb.append("    rowsWritten: ").append(toIndentedString(rowsWritten)).append("\n");
    sb.append("    exportedFiles: ").append(toIndentedString(exportedFiles)).append("\n");
    sb.append("    exportPath: ").append(toIndentedString(exportPath)).append("\n");
    sb.append("    latestCursor: ").append(toIndentedString(latestCursor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `rows_written` to the URL query string
    if (getRowsWritten() != null) {
      joiner.add(String.format("%srows_written%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRowsWritten()))));
    }

    // add `exported_files` to the URL query string
    if (getExportedFiles() != null) {
      for (int i = 0; i < getExportedFiles().size(); i++) {
        joiner.add(String.format("%sexported_files%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getExportedFiles().get(i)))));
      }
    }

    // add `export_path` to the URL query string
    if (getExportPath() != null) {
      joiner.add(String.format("%sexport_path%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExportPath()))));
    }

    // add `latest_cursor` to the URL query string
    if (getLatestCursor() != null) {
      joiner.add(String.format("%slatest_cursor%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLatestCursor()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private BulkExportRunProgress instance;

    public Builder() {
      this(new BulkExportRunProgress());
    }

    protected Builder(BulkExportRunProgress instance) {
      this.instance = instance;
    }

    public BulkExportRunProgress.Builder rowsWritten(Integer rowsWritten) {
      this.instance.rowsWritten = rowsWritten;
      return this;
    }
    public BulkExportRunProgress.Builder exportedFiles(List<String> exportedFiles) {
      this.instance.exportedFiles = exportedFiles;
      return this;
    }
    public BulkExportRunProgress.Builder exportPath(String exportPath) {
      this.instance.exportPath = exportPath;
      return this;
    }
    public BulkExportRunProgress.Builder latestCursor(String latestCursor) {
      this.instance.latestCursor = latestCursor;
      return this;
    }


    /**
    * returns a built BulkExportRunProgress instance.
    *
    * The builder is not reusable.
    */
    public BulkExportRunProgress build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static BulkExportRunProgress.Builder builder() {
    return new BulkExportRunProgress.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public BulkExportRunProgress.Builder toBuilder() {
    return new BulkExportRunProgress.Builder()
      .rowsWritten(getRowsWritten())
      .exportedFiles(getExportedFiles())
      .exportPath(getExportPath())
      .latestCursor(getLatestCursor());
  }

}

