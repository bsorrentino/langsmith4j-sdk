/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.Config;
import org.bsc.langgraph4j.langsmith.gen.model.EPromptOptimizationAlgorithm;
import org.bsc.langgraph4j.langsmith.gen.model.EPromptOptimizationJobStatus;
import org.bsc.langgraph4j.langsmith.gen.model.PromptOptimizationResult;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * PromptOptimizationJob
 */
@JsonPropertyOrder({
  PromptOptimizationJob.JSON_PROPERTY_ID,
  PromptOptimizationJob.JSON_PROPERTY_REPO_ID,
  PromptOptimizationJob.JSON_PROPERTY_STATUS,
  PromptOptimizationJob.JSON_PROPERTY_TENANT_ID,
  PromptOptimizationJob.JSON_PROPERTY_ALGORITHM,
  PromptOptimizationJob.JSON_PROPERTY_CONFIG,
  PromptOptimizationJob.JSON_PROPERTY_RESULTS,
  PromptOptimizationJob.JSON_PROPERTY_CREATED_AT,
  PromptOptimizationJob.JSON_PROPERTY_UPDATED_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class PromptOptimizationJob {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_REPO_ID = "repo_id";
  @javax.annotation.Nonnull
  private UUID repoId;

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nonnull
  private EPromptOptimizationJobStatus status;

  public static final String JSON_PROPERTY_TENANT_ID = "tenant_id";
  @javax.annotation.Nonnull
  private UUID tenantId;

  public static final String JSON_PROPERTY_ALGORITHM = "algorithm";
  @javax.annotation.Nonnull
  private EPromptOptimizationAlgorithm algorithm;

  public static final String JSON_PROPERTY_CONFIG = "config";
  @javax.annotation.Nonnull
  private Config config;

  public static final String JSON_PROPERTY_RESULTS = "results";
  @javax.annotation.Nullable
  private List<PromptOptimizationResult> results = new ArrayList<>();

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @javax.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  @javax.annotation.Nonnull
  private OffsetDateTime updatedAt;

  public PromptOptimizationJob() { 
  }

  public PromptOptimizationJob id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public PromptOptimizationJob repoId(@javax.annotation.Nonnull UUID repoId) {
    this.repoId = repoId;
    return this;
  }

  /**
   * Get repoId
   * @return repoId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REPO_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getRepoId() {
    return repoId;
  }


  @JsonProperty(JSON_PROPERTY_REPO_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRepoId(@javax.annotation.Nonnull UUID repoId) {
    this.repoId = repoId;
  }


  public PromptOptimizationJob status(@javax.annotation.Nonnull EPromptOptimizationJobStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public EPromptOptimizationJobStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@javax.annotation.Nonnull EPromptOptimizationJobStatus status) {
    this.status = status;
  }


  public PromptOptimizationJob tenantId(@javax.annotation.Nonnull UUID tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenantId(@javax.annotation.Nonnull UUID tenantId) {
    this.tenantId = tenantId;
  }


  public PromptOptimizationJob algorithm(@javax.annotation.Nonnull EPromptOptimizationAlgorithm algorithm) {
    this.algorithm = algorithm;
    return this;
  }

  /**
   * Get algorithm
   * @return algorithm
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ALGORITHM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public EPromptOptimizationAlgorithm getAlgorithm() {
    return algorithm;
  }


  @JsonProperty(JSON_PROPERTY_ALGORITHM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAlgorithm(@javax.annotation.Nonnull EPromptOptimizationAlgorithm algorithm) {
    this.algorithm = algorithm;
  }


  public PromptOptimizationJob config(@javax.annotation.Nonnull Config config) {
    this.config = config;
    return this;
  }

  /**
   * Get config
   * @return config
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Config getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfig(@javax.annotation.Nonnull Config config) {
    this.config = config;
  }


  public PromptOptimizationJob results(@javax.annotation.Nullable List<PromptOptimizationResult> results) {
    this.results = results;
    return this;
  }

  public PromptOptimizationJob addResultsItem(PromptOptimizationResult resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

  /**
   * Get results
   * @return results
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<PromptOptimizationResult> getResults() {
    return results;
  }


  @JsonProperty(JSON_PROPERTY_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResults(@javax.annotation.Nullable List<PromptOptimizationResult> results) {
    this.results = results;
  }


  public PromptOptimizationJob createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public PromptOptimizationJob updatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  /**
   * Return true if this PromptOptimizationJob object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromptOptimizationJob promptOptimizationJob = (PromptOptimizationJob) o;
    return Objects.equals(this.id, promptOptimizationJob.id) &&
        Objects.equals(this.repoId, promptOptimizationJob.repoId) &&
        Objects.equals(this.status, promptOptimizationJob.status) &&
        Objects.equals(this.tenantId, promptOptimizationJob.tenantId) &&
        Objects.equals(this.algorithm, promptOptimizationJob.algorithm) &&
        Objects.equals(this.config, promptOptimizationJob.config) &&
        Objects.equals(this.results, promptOptimizationJob.results) &&
        Objects.equals(this.createdAt, promptOptimizationJob.createdAt) &&
        Objects.equals(this.updatedAt, promptOptimizationJob.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, repoId, status, tenantId, algorithm, config, results, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromptOptimizationJob {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    repoId: ").append(toIndentedString(repoId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    algorithm: ").append(toIndentedString(algorithm)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `repo_id` to the URL query string
    if (getRepoId() != null) {
      joiner.add(String.format("%srepo_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRepoId()))));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
    }

    // add `tenant_id` to the URL query string
    if (getTenantId() != null) {
      joiner.add(String.format("%stenant_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTenantId()))));
    }

    // add `algorithm` to the URL query string
    if (getAlgorithm() != null) {
      joiner.add(String.format("%salgorithm%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAlgorithm()))));
    }

    // add `config` to the URL query string
    if (getConfig() != null) {
      joiner.add(getConfig().toUrlQueryString(prefix + "config" + suffix));
    }

    // add `results` to the URL query string
    if (getResults() != null) {
      for (int i = 0; i < getResults().size(); i++) {
        if (getResults().get(i) != null) {
          joiner.add(getResults().get(i).toUrlQueryString(String.format("%sresults%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `created_at` to the URL query string
    if (getCreatedAt() != null) {
      joiner.add(String.format("%screated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
    }

    // add `updated_at` to the URL query string
    if (getUpdatedAt() != null) {
      joiner.add(String.format("%supdated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUpdatedAt()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private PromptOptimizationJob instance;

    public Builder() {
      this(new PromptOptimizationJob());
    }

    protected Builder(PromptOptimizationJob instance) {
      this.instance = instance;
    }

    public PromptOptimizationJob.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public PromptOptimizationJob.Builder repoId(UUID repoId) {
      this.instance.repoId = repoId;
      return this;
    }
    public PromptOptimizationJob.Builder status(EPromptOptimizationJobStatus status) {
      this.instance.status = status;
      return this;
    }
    public PromptOptimizationJob.Builder tenantId(UUID tenantId) {
      this.instance.tenantId = tenantId;
      return this;
    }
    public PromptOptimizationJob.Builder algorithm(EPromptOptimizationAlgorithm algorithm) {
      this.instance.algorithm = algorithm;
      return this;
    }
    public PromptOptimizationJob.Builder config(Config config) {
      this.instance.config = config;
      return this;
    }
    public PromptOptimizationJob.Builder results(List<PromptOptimizationResult> results) {
      this.instance.results = results;
      return this;
    }
    public PromptOptimizationJob.Builder createdAt(OffsetDateTime createdAt) {
      this.instance.createdAt = createdAt;
      return this;
    }
    public PromptOptimizationJob.Builder updatedAt(OffsetDateTime updatedAt) {
      this.instance.updatedAt = updatedAt;
      return this;
    }


    /**
    * returns a built PromptOptimizationJob instance.
    *
    * The builder is not reusable.
    */
    public PromptOptimizationJob build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static PromptOptimizationJob.Builder builder() {
    return new PromptOptimizationJob.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public PromptOptimizationJob.Builder toBuilder() {
    return new PromptOptimizationJob.Builder()
      .id(getId())
      .repoId(getRepoId())
      .status(getStatus())
      .tenantId(getTenantId())
      .algorithm(getAlgorithm())
      .config(getConfig())
      .results(getResults())
      .createdAt(getCreatedAt())
      .updatedAt(getUpdatedAt());
  }

}

