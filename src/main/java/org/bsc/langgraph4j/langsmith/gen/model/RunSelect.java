/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Enum for available run columns.
 */
public enum RunSelect {
  
  ID("id"),
  
  NAME("name"),
  
  RUN_TYPE("run_type"),
  
  START_TIME("start_time"),
  
  END_TIME("end_time"),
  
  STATUS("status"),
  
  ERROR("error"),
  
  EXTRA("extra"),
  
  EVENTS("events"),
  
  INPUTS("inputs"),
  
  INPUTS_PREVIEW("inputs_preview"),
  
  INPUTS_S3_URLS("inputs_s3_urls"),
  
  INPUTS_OR_SIGNED_URL("inputs_or_signed_url"),
  
  OUTPUTS("outputs"),
  
  OUTPUTS_PREVIEW("outputs_preview"),
  
  OUTPUTS_S3_URLS("outputs_s3_urls"),
  
  OUTPUTS_OR_SIGNED_URL("outputs_or_signed_url"),
  
  S3_URLS("s3_urls"),
  
  ERROR_OR_SIGNED_URL("error_or_signed_url"),
  
  EVENTS_OR_SIGNED_URL("events_or_signed_url"),
  
  EXTRA_OR_SIGNED_URL("extra_or_signed_url"),
  
  SERIALIZED_OR_SIGNED_URL("serialized_or_signed_url"),
  
  PARENT_RUN_ID("parent_run_id"),
  
  MANIFEST_ID("manifest_id"),
  
  MANIFEST_S3_ID("manifest_s3_id"),
  
  MANIFEST("manifest"),
  
  SESSION_ID("session_id"),
  
  SERIALIZED("serialized"),
  
  REFERENCE_EXAMPLE_ID("reference_example_id"),
  
  REFERENCE_DATASET_ID("reference_dataset_id"),
  
  TOTAL_TOKENS("total_tokens"),
  
  PROMPT_TOKENS("prompt_tokens"),
  
  PROMPT_TOKEN_DETAILS("prompt_token_details"),
  
  COMPLETION_TOKENS("completion_tokens"),
  
  COMPLETION_TOKEN_DETAILS("completion_token_details"),
  
  TOTAL_COST("total_cost"),
  
  PROMPT_COST("prompt_cost"),
  
  PROMPT_COST_DETAILS("prompt_cost_details"),
  
  COMPLETION_COST("completion_cost"),
  
  COMPLETION_COST_DETAILS("completion_cost_details"),
  
  PRICE_MODEL_ID("price_model_id"),
  
  FIRST_TOKEN_TIME("first_token_time"),
  
  TRACE_ID("trace_id"),
  
  DOTTED_ORDER("dotted_order"),
  
  LAST_QUEUED_AT("last_queued_at"),
  
  FEEDBACK_STATS("feedback_stats"),
  
  CHILD_RUN_IDS("child_run_ids"),
  
  PARENT_RUN_IDS("parent_run_ids"),
  
  TAGS("tags"),
  
  IN_DATASET("in_dataset"),
  
  APP_PATH("app_path"),
  
  SHARE_TOKEN("share_token"),
  
  TRACE_TIER("trace_tier"),
  
  TRACE_FIRST_RECEIVED_AT("trace_first_received_at"),
  
  TTL_SECONDS("ttl_seconds"),
  
  TRACE_UPGRADE("trace_upgrade"),
  
  THREAD_ID("thread_id");

  private String value;

  RunSelect(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static RunSelect fromValue(String value) {
    for (RunSelect b : RunSelect.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

