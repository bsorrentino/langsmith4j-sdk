/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * DemoConfig
 */
@JsonPropertyOrder({
  DemoConfig.JSON_PROPERTY_MESSAGE_INDEX,
  DemoConfig.JSON_PROPERTY_METAPROMPT,
  DemoConfig.JSON_PROPERTY_EXAMPLES,
  DemoConfig.JSON_PROPERTY_OVERALL_FEEDBACK
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class DemoConfig {
  public static final String JSON_PROPERTY_MESSAGE_INDEX = "message_index";
  @javax.annotation.Nonnull
  private Integer messageIndex;

  public static final String JSON_PROPERTY_METAPROMPT = "metaprompt";
  @javax.annotation.Nonnull
  private Object metaprompt;

  public static final String JSON_PROPERTY_EXAMPLES = "examples";
  @javax.annotation.Nonnull
  private List<Object> examples = new ArrayList<>();

  public static final String JSON_PROPERTY_OVERALL_FEEDBACK = "overall_feedback";
  @javax.annotation.Nullable
  private String overallFeedback;

  public DemoConfig() { 
  }

  public DemoConfig messageIndex(@javax.annotation.Nonnull Integer messageIndex) {
    this.messageIndex = messageIndex;
    return this;
  }

  /**
   * Get messageIndex
   * @return messageIndex
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSAGE_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getMessageIndex() {
    return messageIndex;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessageIndex(@javax.annotation.Nonnull Integer messageIndex) {
    this.messageIndex = messageIndex;
  }


  public DemoConfig metaprompt(@javax.annotation.Nonnull Object metaprompt) {
    this.metaprompt = metaprompt;
    return this;
  }

  /**
   * Get metaprompt
   * @return metaprompt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_METAPROMPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Object getMetaprompt() {
    return metaprompt;
  }


  @JsonProperty(JSON_PROPERTY_METAPROMPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetaprompt(@javax.annotation.Nonnull Object metaprompt) {
    this.metaprompt = metaprompt;
  }


  public DemoConfig examples(@javax.annotation.Nonnull List<Object> examples) {
    this.examples = examples;
    return this;
  }

  public DemoConfig addExamplesItem(Object examplesItem) {
    if (this.examples == null) {
      this.examples = new ArrayList<>();
    }
    this.examples.add(examplesItem);
    return this;
  }

  /**
   * Get examples
   * @return examples
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXAMPLES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<Object> getExamples() {
    return examples;
  }


  @JsonProperty(JSON_PROPERTY_EXAMPLES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExamples(@javax.annotation.Nonnull List<Object> examples) {
    this.examples = examples;
  }


  public DemoConfig overallFeedback(@javax.annotation.Nullable String overallFeedback) {
    this.overallFeedback = overallFeedback;
    return this;
  }

  /**
   * Get overallFeedback
   * @return overallFeedback
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OVERALL_FEEDBACK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getOverallFeedback() {
    return overallFeedback;
  }


  @JsonProperty(JSON_PROPERTY_OVERALL_FEEDBACK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOverallFeedback(@javax.annotation.Nullable String overallFeedback) {
    this.overallFeedback = overallFeedback;
  }


  /**
   * Return true if this DemoConfig object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DemoConfig demoConfig = (DemoConfig) o;
    return Objects.equals(this.messageIndex, demoConfig.messageIndex) &&
        Objects.equals(this.metaprompt, demoConfig.metaprompt) &&
        Objects.equals(this.examples, demoConfig.examples) &&
        Objects.equals(this.overallFeedback, demoConfig.overallFeedback);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageIndex, metaprompt, examples, overallFeedback);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DemoConfig {\n");
    sb.append("    messageIndex: ").append(toIndentedString(messageIndex)).append("\n");
    sb.append("    metaprompt: ").append(toIndentedString(metaprompt)).append("\n");
    sb.append("    examples: ").append(toIndentedString(examples)).append("\n");
    sb.append("    overallFeedback: ").append(toIndentedString(overallFeedback)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `message_index` to the URL query string
    if (getMessageIndex() != null) {
      joiner.add(String.format("%smessage_index%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMessageIndex()))));
    }

    // add `metaprompt` to the URL query string
    if (getMetaprompt() != null) {
      joiner.add(String.format("%smetaprompt%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMetaprompt()))));
    }

    // add `examples` to the URL query string
    if (getExamples() != null) {
      for (int i = 0; i < getExamples().size(); i++) {
        joiner.add(String.format("%sexamples%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getExamples().get(i)))));
      }
    }

    // add `overall_feedback` to the URL query string
    if (getOverallFeedback() != null) {
      joiner.add(String.format("%soverall_feedback%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOverallFeedback()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private DemoConfig instance;

    public Builder() {
      this(new DemoConfig());
    }

    protected Builder(DemoConfig instance) {
      this.instance = instance;
    }

    public DemoConfig.Builder messageIndex(Integer messageIndex) {
      this.instance.messageIndex = messageIndex;
      return this;
    }
    public DemoConfig.Builder metaprompt(Object metaprompt) {
      this.instance.metaprompt = metaprompt;
      return this;
    }
    public DemoConfig.Builder examples(List<Object> examples) {
      this.instance.examples = examples;
      return this;
    }
    public DemoConfig.Builder overallFeedback(String overallFeedback) {
      this.instance.overallFeedback = overallFeedback;
      return this;
    }


    /**
    * returns a built DemoConfig instance.
    *
    * The builder is not reusable.
    */
    public DemoConfig build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static DemoConfig.Builder builder() {
    return new DemoConfig.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public DemoConfig.Builder toBuilder() {
    return new DemoConfig.Builder()
      .messageIndex(getMessageIndex())
      .metaprompt(getMetaprompt())
      .examples(getExamples())
      .overallFeedback(getOverallFeedback());
  }

}

