/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.RunTypeEnum;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Schema for a run in a publicly-shared dataset.
 */
@JsonPropertyOrder({
  RunPublicDatasetSchema.JSON_PROPERTY_NAME,
  RunPublicDatasetSchema.JSON_PROPERTY_INPUTS,
  RunPublicDatasetSchema.JSON_PROPERTY_INPUTS_PREVIEW,
  RunPublicDatasetSchema.JSON_PROPERTY_RUN_TYPE,
  RunPublicDatasetSchema.JSON_PROPERTY_START_TIME,
  RunPublicDatasetSchema.JSON_PROPERTY_END_TIME,
  RunPublicDatasetSchema.JSON_PROPERTY_EXTRA,
  RunPublicDatasetSchema.JSON_PROPERTY_ERROR,
  RunPublicDatasetSchema.JSON_PROPERTY_EXECUTION_ORDER,
  RunPublicDatasetSchema.JSON_PROPERTY_SERIALIZED,
  RunPublicDatasetSchema.JSON_PROPERTY_OUTPUTS,
  RunPublicDatasetSchema.JSON_PROPERTY_OUTPUTS_PREVIEW,
  RunPublicDatasetSchema.JSON_PROPERTY_PARENT_RUN_ID,
  RunPublicDatasetSchema.JSON_PROPERTY_MANIFEST_ID,
  RunPublicDatasetSchema.JSON_PROPERTY_MANIFEST_S3_ID,
  RunPublicDatasetSchema.JSON_PROPERTY_EVENTS,
  RunPublicDatasetSchema.JSON_PROPERTY_TAGS,
  RunPublicDatasetSchema.JSON_PROPERTY_INPUTS_S3_URLS,
  RunPublicDatasetSchema.JSON_PROPERTY_OUTPUTS_S3_URLS,
  RunPublicDatasetSchema.JSON_PROPERTY_S3_URLS,
  RunPublicDatasetSchema.JSON_PROPERTY_TRACE_ID,
  RunPublicDatasetSchema.JSON_PROPERTY_DOTTED_ORDER,
  RunPublicDatasetSchema.JSON_PROPERTY_ID,
  RunPublicDatasetSchema.JSON_PROPERTY_STATUS,
  RunPublicDatasetSchema.JSON_PROPERTY_CHILD_RUN_IDS,
  RunPublicDatasetSchema.JSON_PROPERTY_DIRECT_CHILD_RUN_IDS,
  RunPublicDatasetSchema.JSON_PROPERTY_PARENT_RUN_IDS,
  RunPublicDatasetSchema.JSON_PROPERTY_FEEDBACK_STATS,
  RunPublicDatasetSchema.JSON_PROPERTY_REFERENCE_EXAMPLE_ID,
  RunPublicDatasetSchema.JSON_PROPERTY_TOTAL_TOKENS,
  RunPublicDatasetSchema.JSON_PROPERTY_PROMPT_TOKENS,
  RunPublicDatasetSchema.JSON_PROPERTY_COMPLETION_TOKENS,
  RunPublicDatasetSchema.JSON_PROPERTY_PROMPT_TOKEN_DETAILS,
  RunPublicDatasetSchema.JSON_PROPERTY_COMPLETION_TOKEN_DETAILS,
  RunPublicDatasetSchema.JSON_PROPERTY_TOTAL_COST,
  RunPublicDatasetSchema.JSON_PROPERTY_PROMPT_COST,
  RunPublicDatasetSchema.JSON_PROPERTY_COMPLETION_COST,
  RunPublicDatasetSchema.JSON_PROPERTY_PROMPT_COST_DETAILS,
  RunPublicDatasetSchema.JSON_PROPERTY_COMPLETION_COST_DETAILS,
  RunPublicDatasetSchema.JSON_PROPERTY_PRICE_MODEL_ID,
  RunPublicDatasetSchema.JSON_PROPERTY_FIRST_TOKEN_TIME,
  RunPublicDatasetSchema.JSON_PROPERTY_SESSION_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class RunPublicDatasetSchema {
  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_INPUTS = "inputs";
  private JsonNullable<Object> inputs = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_INPUTS_PREVIEW = "inputs_preview";
  private JsonNullable<String> inputsPreview = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RUN_TYPE = "run_type";
  @javax.annotation.Nonnull
  private RunTypeEnum runType;

  public static final String JSON_PROPERTY_START_TIME = "start_time";
  @javax.annotation.Nullable
  private OffsetDateTime startTime;

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  private JsonNullable<OffsetDateTime> endTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_EXTRA = "extra";
  private JsonNullable<Object> extra = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_ERROR = "error";
  private JsonNullable<String> error = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXECUTION_ORDER = "execution_order";
  @javax.annotation.Nullable
  private Integer executionOrder = 1;

  public static final String JSON_PROPERTY_SERIALIZED = "serialized";
  private JsonNullable<Object> serialized = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_OUTPUTS = "outputs";
  private JsonNullable<Object> outputs = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_OUTPUTS_PREVIEW = "outputs_preview";
  private JsonNullable<String> outputsPreview = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PARENT_RUN_ID = "parent_run_id";
  private JsonNullable<UUID> parentRunId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_MANIFEST_ID = "manifest_id";
  private JsonNullable<UUID> manifestId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_MANIFEST_S3_ID = "manifest_s3_id";
  private JsonNullable<UUID> manifestS3Id = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_EVENTS = "events";
  private JsonNullable<List<Object>> events = JsonNullable.<List<Object>>undefined();

  public static final String JSON_PROPERTY_TAGS = "tags";
  private JsonNullable<List<String>> tags = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_INPUTS_S3_URLS = "inputs_s3_urls";
  private JsonNullable<Object> inputsS3Urls = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_OUTPUTS_S3_URLS = "outputs_s3_urls";
  private JsonNullable<Object> outputsS3Urls = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_S3_URLS = "s3_urls";
  private JsonNullable<Object> s3Urls = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_TRACE_ID = "trace_id";
  @javax.annotation.Nonnull
  private UUID traceId;

  public static final String JSON_PROPERTY_DOTTED_ORDER = "dotted_order";
  @javax.annotation.Nonnull
  private String dottedOrder;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nonnull
  private String status;

  public static final String JSON_PROPERTY_CHILD_RUN_IDS = "child_run_ids";
  private JsonNullable<List<UUID>> childRunIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_DIRECT_CHILD_RUN_IDS = "direct_child_run_ids";
  private JsonNullable<List<UUID>> directChildRunIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_PARENT_RUN_IDS = "parent_run_ids";
  private JsonNullable<List<UUID>> parentRunIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_FEEDBACK_STATS = "feedback_stats";
  private JsonNullable<Map<String, Object>> feedbackStats = JsonNullable.<Map<String, Object>>undefined();

  public static final String JSON_PROPERTY_REFERENCE_EXAMPLE_ID = "reference_example_id";
  private JsonNullable<UUID> referenceExampleId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TOTAL_TOKENS = "total_tokens";
  @javax.annotation.Nullable
  private Integer totalTokens = 0;

  public static final String JSON_PROPERTY_PROMPT_TOKENS = "prompt_tokens";
  @javax.annotation.Nullable
  private Integer promptTokens = 0;

  public static final String JSON_PROPERTY_COMPLETION_TOKENS = "completion_tokens";
  @javax.annotation.Nullable
  private Integer completionTokens = 0;

  public static final String JSON_PROPERTY_PROMPT_TOKEN_DETAILS = "prompt_token_details";
  private JsonNullable<Map<String, Integer>> promptTokenDetails = JsonNullable.<Map<String, Integer>>undefined();

  public static final String JSON_PROPERTY_COMPLETION_TOKEN_DETAILS = "completion_token_details";
  private JsonNullable<Map<String, Integer>> completionTokenDetails = JsonNullable.<Map<String, Integer>>undefined();

  public static final String JSON_PROPERTY_TOTAL_COST = "total_cost";
  private JsonNullable<String> totalCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROMPT_COST = "prompt_cost";
  private JsonNullable<String> promptCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMPLETION_COST = "completion_cost";
  private JsonNullable<String> completionCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROMPT_COST_DETAILS = "prompt_cost_details";
  private JsonNullable<Map<String, String>> promptCostDetails = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_COMPLETION_COST_DETAILS = "completion_cost_details";
  private JsonNullable<Map<String, String>> completionCostDetails = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_PRICE_MODEL_ID = "price_model_id";
  private JsonNullable<UUID> priceModelId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_FIRST_TOKEN_TIME = "first_token_time";
  private JsonNullable<OffsetDateTime> firstTokenTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_SESSION_ID = "session_id";
  @javax.annotation.Nonnull
  private UUID sessionId;

  public RunPublicDatasetSchema() { 
  }

  public RunPublicDatasetSchema name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public RunPublicDatasetSchema inputs(@javax.annotation.Nullable Object inputs) {
    this.inputs = JsonNullable.<Object>of(inputs);
    return this;
  }

  /**
   * Get inputs
   * @return inputs
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getInputs() {
        return inputs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getInputs_JsonNullable() {
    return inputs;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUTS)
  public void setInputs_JsonNullable(JsonNullable<Object> inputs) {
    this.inputs = inputs;
  }

  public void setInputs(@javax.annotation.Nullable Object inputs) {
    this.inputs = JsonNullable.<Object>of(inputs);
  }


  public RunPublicDatasetSchema inputsPreview(@javax.annotation.Nullable String inputsPreview) {
    this.inputsPreview = JsonNullable.<String>of(inputsPreview);
    return this;
  }

  /**
   * Get inputsPreview
   * @return inputsPreview
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getInputsPreview() {
        return inputsPreview.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUTS_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInputsPreview_JsonNullable() {
    return inputsPreview;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUTS_PREVIEW)
  public void setInputsPreview_JsonNullable(JsonNullable<String> inputsPreview) {
    this.inputsPreview = inputsPreview;
  }

  public void setInputsPreview(@javax.annotation.Nullable String inputsPreview) {
    this.inputsPreview = JsonNullable.<String>of(inputsPreview);
  }


  public RunPublicDatasetSchema runType(@javax.annotation.Nonnull RunTypeEnum runType) {
    this.runType = runType;
    return this;
  }

  /**
   * Get runType
   * @return runType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public RunTypeEnum getRunType() {
    return runType;
  }


  @JsonProperty(JSON_PROPERTY_RUN_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRunType(@javax.annotation.Nonnull RunTypeEnum runType) {
    this.runType = runType;
  }


  public RunPublicDatasetSchema startTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public RunPublicDatasetSchema endTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getEndTime() {
        return endTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEndTime_JsonNullable() {
    return endTime;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME)
  public void setEndTime_JsonNullable(JsonNullable<OffsetDateTime> endTime) {
    this.endTime = endTime;
  }

  public void setEndTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
  }


  public RunPublicDatasetSchema extra(@javax.annotation.Nullable Object extra) {
    this.extra = JsonNullable.<Object>of(extra);
    return this;
  }

  /**
   * Get extra
   * @return extra
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getExtra() {
        return extra.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getExtra_JsonNullable() {
    return extra;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTRA)
  public void setExtra_JsonNullable(JsonNullable<Object> extra) {
    this.extra = extra;
  }

  public void setExtra(@javax.annotation.Nullable Object extra) {
    this.extra = JsonNullable.<Object>of(extra);
  }


  public RunPublicDatasetSchema error(@javax.annotation.Nullable String error) {
    this.error = JsonNullable.<String>of(error);
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getError() {
        return error.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getError_JsonNullable() {
    return error;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR)
  public void setError_JsonNullable(JsonNullable<String> error) {
    this.error = error;
  }

  public void setError(@javax.annotation.Nullable String error) {
    this.error = JsonNullable.<String>of(error);
  }


  public RunPublicDatasetSchema executionOrder(@javax.annotation.Nullable Integer executionOrder) {
    this.executionOrder = executionOrder;
    return this;
  }

  /**
   * Get executionOrder
   * minimum: 1
   * @return executionOrder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXECUTION_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getExecutionOrder() {
    return executionOrder;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTION_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutionOrder(@javax.annotation.Nullable Integer executionOrder) {
    this.executionOrder = executionOrder;
  }


  public RunPublicDatasetSchema serialized(@javax.annotation.Nullable Object serialized) {
    this.serialized = JsonNullable.<Object>of(serialized);
    return this;
  }

  /**
   * Get serialized
   * @return serialized
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getSerialized() {
        return serialized.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIALIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSerialized_JsonNullable() {
    return serialized;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIALIZED)
  public void setSerialized_JsonNullable(JsonNullable<Object> serialized) {
    this.serialized = serialized;
  }

  public void setSerialized(@javax.annotation.Nullable Object serialized) {
    this.serialized = JsonNullable.<Object>of(serialized);
  }


  public RunPublicDatasetSchema outputs(@javax.annotation.Nullable Object outputs) {
    this.outputs = JsonNullable.<Object>of(outputs);
    return this;
  }

  /**
   * Get outputs
   * @return outputs
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getOutputs() {
        return outputs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOutputs_JsonNullable() {
    return outputs;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTPUTS)
  public void setOutputs_JsonNullable(JsonNullable<Object> outputs) {
    this.outputs = outputs;
  }

  public void setOutputs(@javax.annotation.Nullable Object outputs) {
    this.outputs = JsonNullable.<Object>of(outputs);
  }


  public RunPublicDatasetSchema outputsPreview(@javax.annotation.Nullable String outputsPreview) {
    this.outputsPreview = JsonNullable.<String>of(outputsPreview);
    return this;
  }

  /**
   * Get outputsPreview
   * @return outputsPreview
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getOutputsPreview() {
        return outputsPreview.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTPUTS_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOutputsPreview_JsonNullable() {
    return outputsPreview;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTPUTS_PREVIEW)
  public void setOutputsPreview_JsonNullable(JsonNullable<String> outputsPreview) {
    this.outputsPreview = outputsPreview;
  }

  public void setOutputsPreview(@javax.annotation.Nullable String outputsPreview) {
    this.outputsPreview = JsonNullable.<String>of(outputsPreview);
  }


  public RunPublicDatasetSchema parentRunId(@javax.annotation.Nullable UUID parentRunId) {
    this.parentRunId = JsonNullable.<UUID>of(parentRunId);
    return this;
  }

  /**
   * Get parentRunId
   * @return parentRunId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getParentRunId() {
        return parentRunId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getParentRunId_JsonNullable() {
    return parentRunId;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_RUN_ID)
  public void setParentRunId_JsonNullable(JsonNullable<UUID> parentRunId) {
    this.parentRunId = parentRunId;
  }

  public void setParentRunId(@javax.annotation.Nullable UUID parentRunId) {
    this.parentRunId = JsonNullable.<UUID>of(parentRunId);
  }


  public RunPublicDatasetSchema manifestId(@javax.annotation.Nullable UUID manifestId) {
    this.manifestId = JsonNullable.<UUID>of(manifestId);
    return this;
  }

  /**
   * Get manifestId
   * @return manifestId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getManifestId() {
        return manifestId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MANIFEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getManifestId_JsonNullable() {
    return manifestId;
  }
  
  @JsonProperty(JSON_PROPERTY_MANIFEST_ID)
  public void setManifestId_JsonNullable(JsonNullable<UUID> manifestId) {
    this.manifestId = manifestId;
  }

  public void setManifestId(@javax.annotation.Nullable UUID manifestId) {
    this.manifestId = JsonNullable.<UUID>of(manifestId);
  }


  public RunPublicDatasetSchema manifestS3Id(@javax.annotation.Nullable UUID manifestS3Id) {
    this.manifestS3Id = JsonNullable.<UUID>of(manifestS3Id);
    return this;
  }

  /**
   * Get manifestS3Id
   * @return manifestS3Id
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getManifestS3Id() {
        return manifestS3Id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MANIFEST_S3_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getManifestS3Id_JsonNullable() {
    return manifestS3Id;
  }
  
  @JsonProperty(JSON_PROPERTY_MANIFEST_S3_ID)
  public void setManifestS3Id_JsonNullable(JsonNullable<UUID> manifestS3Id) {
    this.manifestS3Id = manifestS3Id;
  }

  public void setManifestS3Id(@javax.annotation.Nullable UUID manifestS3Id) {
    this.manifestS3Id = JsonNullable.<UUID>of(manifestS3Id);
  }


  public RunPublicDatasetSchema events(@javax.annotation.Nullable List<Object> events) {
    this.events = JsonNullable.<List<Object>>of(events);
    return this;
  }

  public RunPublicDatasetSchema addEventsItem(Object eventsItem) {
    if (this.events == null || !this.events.isPresent()) {
      this.events = JsonNullable.<List<Object>>of(new ArrayList<>());
    }
    try {
      this.events.get().add(eventsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get events
   * @return events
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<Object> getEvents() {
        return events.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Object>> getEvents_JsonNullable() {
    return events;
  }
  
  @JsonProperty(JSON_PROPERTY_EVENTS)
  public void setEvents_JsonNullable(JsonNullable<List<Object>> events) {
    this.events = events;
  }

  public void setEvents(@javax.annotation.Nullable List<Object> events) {
    this.events = JsonNullable.<List<Object>>of(events);
  }


  public RunPublicDatasetSchema tags(@javax.annotation.Nullable List<String> tags) {
    this.tags = JsonNullable.<List<String>>of(tags);
    return this;
  }

  public RunPublicDatasetSchema addTagsItem(String tagsItem) {
    if (this.tags == null || !this.tags.isPresent()) {
      this.tags = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.tags.get().add(tagsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getTags() {
        return tags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTags_JsonNullable() {
    return tags;
  }
  
  @JsonProperty(JSON_PROPERTY_TAGS)
  public void setTags_JsonNullable(JsonNullable<List<String>> tags) {
    this.tags = tags;
  }

  public void setTags(@javax.annotation.Nullable List<String> tags) {
    this.tags = JsonNullable.<List<String>>of(tags);
  }


  public RunPublicDatasetSchema inputsS3Urls(@javax.annotation.Nullable Object inputsS3Urls) {
    this.inputsS3Urls = JsonNullable.<Object>of(inputsS3Urls);
    return this;
  }

  /**
   * Get inputsS3Urls
   * @return inputsS3Urls
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getInputsS3Urls() {
        return inputsS3Urls.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUTS_S3_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getInputsS3Urls_JsonNullable() {
    return inputsS3Urls;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUTS_S3_URLS)
  public void setInputsS3Urls_JsonNullable(JsonNullable<Object> inputsS3Urls) {
    this.inputsS3Urls = inputsS3Urls;
  }

  public void setInputsS3Urls(@javax.annotation.Nullable Object inputsS3Urls) {
    this.inputsS3Urls = JsonNullable.<Object>of(inputsS3Urls);
  }


  public RunPublicDatasetSchema outputsS3Urls(@javax.annotation.Nullable Object outputsS3Urls) {
    this.outputsS3Urls = JsonNullable.<Object>of(outputsS3Urls);
    return this;
  }

  /**
   * Get outputsS3Urls
   * @return outputsS3Urls
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getOutputsS3Urls() {
        return outputsS3Urls.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTPUTS_S3_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOutputsS3Urls_JsonNullable() {
    return outputsS3Urls;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTPUTS_S3_URLS)
  public void setOutputsS3Urls_JsonNullable(JsonNullable<Object> outputsS3Urls) {
    this.outputsS3Urls = outputsS3Urls;
  }

  public void setOutputsS3Urls(@javax.annotation.Nullable Object outputsS3Urls) {
    this.outputsS3Urls = JsonNullable.<Object>of(outputsS3Urls);
  }


  public RunPublicDatasetSchema s3Urls(@javax.annotation.Nullable Object s3Urls) {
    this.s3Urls = JsonNullable.<Object>of(s3Urls);
    return this;
  }

  /**
   * Get s3Urls
   * @return s3Urls
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getS3Urls() {
        return s3Urls.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_S3_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getS3Urls_JsonNullable() {
    return s3Urls;
  }
  
  @JsonProperty(JSON_PROPERTY_S3_URLS)
  public void setS3Urls_JsonNullable(JsonNullable<Object> s3Urls) {
    this.s3Urls = s3Urls;
  }

  public void setS3Urls(@javax.annotation.Nullable Object s3Urls) {
    this.s3Urls = JsonNullable.<Object>of(s3Urls);
  }


  public RunPublicDatasetSchema traceId(@javax.annotation.Nonnull UUID traceId) {
    this.traceId = traceId;
    return this;
  }

  /**
   * Get traceId
   * @return traceId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRACE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getTraceId() {
    return traceId;
  }


  @JsonProperty(JSON_PROPERTY_TRACE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTraceId(@javax.annotation.Nonnull UUID traceId) {
    this.traceId = traceId;
  }


  public RunPublicDatasetSchema dottedOrder(@javax.annotation.Nonnull String dottedOrder) {
    this.dottedOrder = dottedOrder;
    return this;
  }

  /**
   * Get dottedOrder
   * @return dottedOrder
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOTTED_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDottedOrder() {
    return dottedOrder;
  }


  @JsonProperty(JSON_PROPERTY_DOTTED_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDottedOrder(@javax.annotation.Nonnull String dottedOrder) {
    this.dottedOrder = dottedOrder;
  }


  public RunPublicDatasetSchema id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public RunPublicDatasetSchema status(@javax.annotation.Nonnull String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@javax.annotation.Nonnull String status) {
    this.status = status;
  }


  public RunPublicDatasetSchema childRunIds(@javax.annotation.Nullable List<UUID> childRunIds) {
    this.childRunIds = JsonNullable.<List<UUID>>of(childRunIds);
    return this;
  }

  public RunPublicDatasetSchema addChildRunIdsItem(UUID childRunIdsItem) {
    if (this.childRunIds == null || !this.childRunIds.isPresent()) {
      this.childRunIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.childRunIds.get().add(childRunIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get childRunIds
   * @return childRunIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getChildRunIds() {
        return childRunIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHILD_RUN_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getChildRunIds_JsonNullable() {
    return childRunIds;
  }
  
  @JsonProperty(JSON_PROPERTY_CHILD_RUN_IDS)
  public void setChildRunIds_JsonNullable(JsonNullable<List<UUID>> childRunIds) {
    this.childRunIds = childRunIds;
  }

  public void setChildRunIds(@javax.annotation.Nullable List<UUID> childRunIds) {
    this.childRunIds = JsonNullable.<List<UUID>>of(childRunIds);
  }


  public RunPublicDatasetSchema directChildRunIds(@javax.annotation.Nullable List<UUID> directChildRunIds) {
    this.directChildRunIds = JsonNullable.<List<UUID>>of(directChildRunIds);
    return this;
  }

  public RunPublicDatasetSchema addDirectChildRunIdsItem(UUID directChildRunIdsItem) {
    if (this.directChildRunIds == null || !this.directChildRunIds.isPresent()) {
      this.directChildRunIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.directChildRunIds.get().add(directChildRunIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get directChildRunIds
   * @return directChildRunIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getDirectChildRunIds() {
        return directChildRunIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIRECT_CHILD_RUN_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getDirectChildRunIds_JsonNullable() {
    return directChildRunIds;
  }
  
  @JsonProperty(JSON_PROPERTY_DIRECT_CHILD_RUN_IDS)
  public void setDirectChildRunIds_JsonNullable(JsonNullable<List<UUID>> directChildRunIds) {
    this.directChildRunIds = directChildRunIds;
  }

  public void setDirectChildRunIds(@javax.annotation.Nullable List<UUID> directChildRunIds) {
    this.directChildRunIds = JsonNullable.<List<UUID>>of(directChildRunIds);
  }


  public RunPublicDatasetSchema parentRunIds(@javax.annotation.Nullable List<UUID> parentRunIds) {
    this.parentRunIds = JsonNullable.<List<UUID>>of(parentRunIds);
    return this;
  }

  public RunPublicDatasetSchema addParentRunIdsItem(UUID parentRunIdsItem) {
    if (this.parentRunIds == null || !this.parentRunIds.isPresent()) {
      this.parentRunIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.parentRunIds.get().add(parentRunIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get parentRunIds
   * @return parentRunIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getParentRunIds() {
        return parentRunIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_RUN_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getParentRunIds_JsonNullable() {
    return parentRunIds;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_RUN_IDS)
  public void setParentRunIds_JsonNullable(JsonNullable<List<UUID>> parentRunIds) {
    this.parentRunIds = parentRunIds;
  }

  public void setParentRunIds(@javax.annotation.Nullable List<UUID> parentRunIds) {
    this.parentRunIds = JsonNullable.<List<UUID>>of(parentRunIds);
  }


  public RunPublicDatasetSchema feedbackStats(@javax.annotation.Nullable Map<String, Object> feedbackStats) {
    this.feedbackStats = JsonNullable.<Map<String, Object>>of(feedbackStats);
    return this;
  }

  public RunPublicDatasetSchema putFeedbackStatsItem(String key, Object feedbackStatsItem) {
    if (this.feedbackStats == null || !this.feedbackStats.isPresent()) {
      this.feedbackStats = JsonNullable.<Map<String, Object>>of(new HashMap<>());
    }
    try {
      this.feedbackStats.get().put(key, feedbackStatsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get feedbackStats
   * @return feedbackStats
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, Object> getFeedbackStats() {
        return feedbackStats.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FEEDBACK_STATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Object>> getFeedbackStats_JsonNullable() {
    return feedbackStats;
  }
  
  @JsonProperty(JSON_PROPERTY_FEEDBACK_STATS)
  public void setFeedbackStats_JsonNullable(JsonNullable<Map<String, Object>> feedbackStats) {
    this.feedbackStats = feedbackStats;
  }

  public void setFeedbackStats(@javax.annotation.Nullable Map<String, Object> feedbackStats) {
    this.feedbackStats = JsonNullable.<Map<String, Object>>of(feedbackStats);
  }


  public RunPublicDatasetSchema referenceExampleId(@javax.annotation.Nullable UUID referenceExampleId) {
    this.referenceExampleId = JsonNullable.<UUID>of(referenceExampleId);
    return this;
  }

  /**
   * Get referenceExampleId
   * @return referenceExampleId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getReferenceExampleId() {
        return referenceExampleId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFERENCE_EXAMPLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getReferenceExampleId_JsonNullable() {
    return referenceExampleId;
  }
  
  @JsonProperty(JSON_PROPERTY_REFERENCE_EXAMPLE_ID)
  public void setReferenceExampleId_JsonNullable(JsonNullable<UUID> referenceExampleId) {
    this.referenceExampleId = referenceExampleId;
  }

  public void setReferenceExampleId(@javax.annotation.Nullable UUID referenceExampleId) {
    this.referenceExampleId = JsonNullable.<UUID>of(referenceExampleId);
  }


  public RunPublicDatasetSchema totalTokens(@javax.annotation.Nullable Integer totalTokens) {
    this.totalTokens = totalTokens;
    return this;
  }

  /**
   * Get totalTokens
   * @return totalTokens
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getTotalTokens() {
    return totalTokens;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalTokens(@javax.annotation.Nullable Integer totalTokens) {
    this.totalTokens = totalTokens;
  }


  public RunPublicDatasetSchema promptTokens(@javax.annotation.Nullable Integer promptTokens) {
    this.promptTokens = promptTokens;
    return this;
  }

  /**
   * Get promptTokens
   * @return promptTokens
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROMPT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPromptTokens() {
    return promptTokens;
  }


  @JsonProperty(JSON_PROPERTY_PROMPT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPromptTokens(@javax.annotation.Nullable Integer promptTokens) {
    this.promptTokens = promptTokens;
  }


  public RunPublicDatasetSchema completionTokens(@javax.annotation.Nullable Integer completionTokens) {
    this.completionTokens = completionTokens;
    return this;
  }

  /**
   * Get completionTokens
   * @return completionTokens
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getCompletionTokens() {
    return completionTokens;
  }


  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompletionTokens(@javax.annotation.Nullable Integer completionTokens) {
    this.completionTokens = completionTokens;
  }


  public RunPublicDatasetSchema promptTokenDetails(@javax.annotation.Nullable Map<String, Integer> promptTokenDetails) {
    this.promptTokenDetails = JsonNullable.<Map<String, Integer>>of(promptTokenDetails);
    return this;
  }

  public RunPublicDatasetSchema putPromptTokenDetailsItem(String key, Integer promptTokenDetailsItem) {
    if (this.promptTokenDetails == null || !this.promptTokenDetails.isPresent()) {
      this.promptTokenDetails = JsonNullable.<Map<String, Integer>>of(new HashMap<>());
    }
    try {
      this.promptTokenDetails.get().put(key, promptTokenDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get promptTokenDetails
   * @return promptTokenDetails
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, Integer> getPromptTokenDetails() {
        return promptTokenDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROMPT_TOKEN_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Integer>> getPromptTokenDetails_JsonNullable() {
    return promptTokenDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_PROMPT_TOKEN_DETAILS)
  public void setPromptTokenDetails_JsonNullable(JsonNullable<Map<String, Integer>> promptTokenDetails) {
    this.promptTokenDetails = promptTokenDetails;
  }

  public void setPromptTokenDetails(@javax.annotation.Nullable Map<String, Integer> promptTokenDetails) {
    this.promptTokenDetails = JsonNullable.<Map<String, Integer>>of(promptTokenDetails);
  }


  public RunPublicDatasetSchema completionTokenDetails(@javax.annotation.Nullable Map<String, Integer> completionTokenDetails) {
    this.completionTokenDetails = JsonNullable.<Map<String, Integer>>of(completionTokenDetails);
    return this;
  }

  public RunPublicDatasetSchema putCompletionTokenDetailsItem(String key, Integer completionTokenDetailsItem) {
    if (this.completionTokenDetails == null || !this.completionTokenDetails.isPresent()) {
      this.completionTokenDetails = JsonNullable.<Map<String, Integer>>of(new HashMap<>());
    }
    try {
      this.completionTokenDetails.get().put(key, completionTokenDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get completionTokenDetails
   * @return completionTokenDetails
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, Integer> getCompletionTokenDetails() {
        return completionTokenDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKEN_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Integer>> getCompletionTokenDetails_JsonNullable() {
    return completionTokenDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKEN_DETAILS)
  public void setCompletionTokenDetails_JsonNullable(JsonNullable<Map<String, Integer>> completionTokenDetails) {
    this.completionTokenDetails = completionTokenDetails;
  }

  public void setCompletionTokenDetails(@javax.annotation.Nullable Map<String, Integer> completionTokenDetails) {
    this.completionTokenDetails = JsonNullable.<Map<String, Integer>>of(completionTokenDetails);
  }


  public RunPublicDatasetSchema totalCost(@javax.annotation.Nullable String totalCost) {
    this.totalCost = JsonNullable.<String>of(totalCost);
    return this;
  }

  /**
   * Get totalCost
   * @return totalCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTotalCost() {
        return totalCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTotalCost_JsonNullable() {
    return totalCost;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_COST)
  public void setTotalCost_JsonNullable(JsonNullable<String> totalCost) {
    this.totalCost = totalCost;
  }

  public void setTotalCost(@javax.annotation.Nullable String totalCost) {
    this.totalCost = JsonNullable.<String>of(totalCost);
  }


  public RunPublicDatasetSchema promptCost(@javax.annotation.Nullable String promptCost) {
    this.promptCost = JsonNullable.<String>of(promptCost);
    return this;
  }

  /**
   * Get promptCost
   * @return promptCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPromptCost() {
        return promptCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROMPT_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPromptCost_JsonNullable() {
    return promptCost;
  }
  
  @JsonProperty(JSON_PROPERTY_PROMPT_COST)
  public void setPromptCost_JsonNullable(JsonNullable<String> promptCost) {
    this.promptCost = promptCost;
  }

  public void setPromptCost(@javax.annotation.Nullable String promptCost) {
    this.promptCost = JsonNullable.<String>of(promptCost);
  }


  public RunPublicDatasetSchema completionCost(@javax.annotation.Nullable String completionCost) {
    this.completionCost = JsonNullable.<String>of(completionCost);
    return this;
  }

  /**
   * Get completionCost
   * @return completionCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCompletionCost() {
        return completionCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETION_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCompletionCost_JsonNullable() {
    return completionCost;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETION_COST)
  public void setCompletionCost_JsonNullable(JsonNullable<String> completionCost) {
    this.completionCost = completionCost;
  }

  public void setCompletionCost(@javax.annotation.Nullable String completionCost) {
    this.completionCost = JsonNullable.<String>of(completionCost);
  }


  public RunPublicDatasetSchema promptCostDetails(@javax.annotation.Nullable Map<String, String> promptCostDetails) {
    this.promptCostDetails = JsonNullable.<Map<String, String>>of(promptCostDetails);
    return this;
  }

  public RunPublicDatasetSchema putPromptCostDetailsItem(String key, String promptCostDetailsItem) {
    if (this.promptCostDetails == null || !this.promptCostDetails.isPresent()) {
      this.promptCostDetails = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.promptCostDetails.get().put(key, promptCostDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get promptCostDetails
   * @return promptCostDetails
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, String> getPromptCostDetails() {
        return promptCostDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROMPT_COST_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getPromptCostDetails_JsonNullable() {
    return promptCostDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_PROMPT_COST_DETAILS)
  public void setPromptCostDetails_JsonNullable(JsonNullable<Map<String, String>> promptCostDetails) {
    this.promptCostDetails = promptCostDetails;
  }

  public void setPromptCostDetails(@javax.annotation.Nullable Map<String, String> promptCostDetails) {
    this.promptCostDetails = JsonNullable.<Map<String, String>>of(promptCostDetails);
  }


  public RunPublicDatasetSchema completionCostDetails(@javax.annotation.Nullable Map<String, String> completionCostDetails) {
    this.completionCostDetails = JsonNullable.<Map<String, String>>of(completionCostDetails);
    return this;
  }

  public RunPublicDatasetSchema putCompletionCostDetailsItem(String key, String completionCostDetailsItem) {
    if (this.completionCostDetails == null || !this.completionCostDetails.isPresent()) {
      this.completionCostDetails = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.completionCostDetails.get().put(key, completionCostDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get completionCostDetails
   * @return completionCostDetails
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, String> getCompletionCostDetails() {
        return completionCostDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETION_COST_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getCompletionCostDetails_JsonNullable() {
    return completionCostDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETION_COST_DETAILS)
  public void setCompletionCostDetails_JsonNullable(JsonNullable<Map<String, String>> completionCostDetails) {
    this.completionCostDetails = completionCostDetails;
  }

  public void setCompletionCostDetails(@javax.annotation.Nullable Map<String, String> completionCostDetails) {
    this.completionCostDetails = JsonNullable.<Map<String, String>>of(completionCostDetails);
  }


  public RunPublicDatasetSchema priceModelId(@javax.annotation.Nullable UUID priceModelId) {
    this.priceModelId = JsonNullable.<UUID>of(priceModelId);
    return this;
  }

  /**
   * Get priceModelId
   * @return priceModelId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getPriceModelId() {
        return priceModelId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE_MODEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getPriceModelId_JsonNullable() {
    return priceModelId;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE_MODEL_ID)
  public void setPriceModelId_JsonNullable(JsonNullable<UUID> priceModelId) {
    this.priceModelId = priceModelId;
  }

  public void setPriceModelId(@javax.annotation.Nullable UUID priceModelId) {
    this.priceModelId = JsonNullable.<UUID>of(priceModelId);
  }


  public RunPublicDatasetSchema firstTokenTime(@javax.annotation.Nullable OffsetDateTime firstTokenTime) {
    this.firstTokenTime = JsonNullable.<OffsetDateTime>of(firstTokenTime);
    return this;
  }

  /**
   * Get firstTokenTime
   * @return firstTokenTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getFirstTokenTime() {
        return firstTokenTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRST_TOKEN_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getFirstTokenTime_JsonNullable() {
    return firstTokenTime;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRST_TOKEN_TIME)
  public void setFirstTokenTime_JsonNullable(JsonNullable<OffsetDateTime> firstTokenTime) {
    this.firstTokenTime = firstTokenTime;
  }

  public void setFirstTokenTime(@javax.annotation.Nullable OffsetDateTime firstTokenTime) {
    this.firstTokenTime = JsonNullable.<OffsetDateTime>of(firstTokenTime);
  }


  public RunPublicDatasetSchema sessionId(@javax.annotation.Nonnull UUID sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * Get sessionId
   * @return sessionId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getSessionId() {
    return sessionId;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSessionId(@javax.annotation.Nonnull UUID sessionId) {
    this.sessionId = sessionId;
  }


  /**
   * Return true if this RunPublicDatasetSchema object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunPublicDatasetSchema runPublicDatasetSchema = (RunPublicDatasetSchema) o;
    return Objects.equals(this.name, runPublicDatasetSchema.name) &&
        equalsNullable(this.inputs, runPublicDatasetSchema.inputs) &&
        equalsNullable(this.inputsPreview, runPublicDatasetSchema.inputsPreview) &&
        Objects.equals(this.runType, runPublicDatasetSchema.runType) &&
        Objects.equals(this.startTime, runPublicDatasetSchema.startTime) &&
        equalsNullable(this.endTime, runPublicDatasetSchema.endTime) &&
        equalsNullable(this.extra, runPublicDatasetSchema.extra) &&
        equalsNullable(this.error, runPublicDatasetSchema.error) &&
        Objects.equals(this.executionOrder, runPublicDatasetSchema.executionOrder) &&
        equalsNullable(this.serialized, runPublicDatasetSchema.serialized) &&
        equalsNullable(this.outputs, runPublicDatasetSchema.outputs) &&
        equalsNullable(this.outputsPreview, runPublicDatasetSchema.outputsPreview) &&
        equalsNullable(this.parentRunId, runPublicDatasetSchema.parentRunId) &&
        equalsNullable(this.manifestId, runPublicDatasetSchema.manifestId) &&
        equalsNullable(this.manifestS3Id, runPublicDatasetSchema.manifestS3Id) &&
        equalsNullable(this.events, runPublicDatasetSchema.events) &&
        equalsNullable(this.tags, runPublicDatasetSchema.tags) &&
        equalsNullable(this.inputsS3Urls, runPublicDatasetSchema.inputsS3Urls) &&
        equalsNullable(this.outputsS3Urls, runPublicDatasetSchema.outputsS3Urls) &&
        equalsNullable(this.s3Urls, runPublicDatasetSchema.s3Urls) &&
        Objects.equals(this.traceId, runPublicDatasetSchema.traceId) &&
        Objects.equals(this.dottedOrder, runPublicDatasetSchema.dottedOrder) &&
        Objects.equals(this.id, runPublicDatasetSchema.id) &&
        Objects.equals(this.status, runPublicDatasetSchema.status) &&
        equalsNullable(this.childRunIds, runPublicDatasetSchema.childRunIds) &&
        equalsNullable(this.directChildRunIds, runPublicDatasetSchema.directChildRunIds) &&
        equalsNullable(this.parentRunIds, runPublicDatasetSchema.parentRunIds) &&
        equalsNullable(this.feedbackStats, runPublicDatasetSchema.feedbackStats) &&
        equalsNullable(this.referenceExampleId, runPublicDatasetSchema.referenceExampleId) &&
        Objects.equals(this.totalTokens, runPublicDatasetSchema.totalTokens) &&
        Objects.equals(this.promptTokens, runPublicDatasetSchema.promptTokens) &&
        Objects.equals(this.completionTokens, runPublicDatasetSchema.completionTokens) &&
        equalsNullable(this.promptTokenDetails, runPublicDatasetSchema.promptTokenDetails) &&
        equalsNullable(this.completionTokenDetails, runPublicDatasetSchema.completionTokenDetails) &&
        equalsNullable(this.totalCost, runPublicDatasetSchema.totalCost) &&
        equalsNullable(this.promptCost, runPublicDatasetSchema.promptCost) &&
        equalsNullable(this.completionCost, runPublicDatasetSchema.completionCost) &&
        equalsNullable(this.promptCostDetails, runPublicDatasetSchema.promptCostDetails) &&
        equalsNullable(this.completionCostDetails, runPublicDatasetSchema.completionCostDetails) &&
        equalsNullable(this.priceModelId, runPublicDatasetSchema.priceModelId) &&
        equalsNullable(this.firstTokenTime, runPublicDatasetSchema.firstTokenTime) &&
        Objects.equals(this.sessionId, runPublicDatasetSchema.sessionId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, hashCodeNullable(inputs), hashCodeNullable(inputsPreview), runType, startTime, hashCodeNullable(endTime), hashCodeNullable(extra), hashCodeNullable(error), executionOrder, hashCodeNullable(serialized), hashCodeNullable(outputs), hashCodeNullable(outputsPreview), hashCodeNullable(parentRunId), hashCodeNullable(manifestId), hashCodeNullable(manifestS3Id), hashCodeNullable(events), hashCodeNullable(tags), hashCodeNullable(inputsS3Urls), hashCodeNullable(outputsS3Urls), hashCodeNullable(s3Urls), traceId, dottedOrder, id, status, hashCodeNullable(childRunIds), hashCodeNullable(directChildRunIds), hashCodeNullable(parentRunIds), hashCodeNullable(feedbackStats), hashCodeNullable(referenceExampleId), totalTokens, promptTokens, completionTokens, hashCodeNullable(promptTokenDetails), hashCodeNullable(completionTokenDetails), hashCodeNullable(totalCost), hashCodeNullable(promptCost), hashCodeNullable(completionCost), hashCodeNullable(promptCostDetails), hashCodeNullable(completionCostDetails), hashCodeNullable(priceModelId), hashCodeNullable(firstTokenTime), sessionId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunPublicDatasetSchema {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    inputsPreview: ").append(toIndentedString(inputsPreview)).append("\n");
    sb.append("    runType: ").append(toIndentedString(runType)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    executionOrder: ").append(toIndentedString(executionOrder)).append("\n");
    sb.append("    serialized: ").append(toIndentedString(serialized)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    outputsPreview: ").append(toIndentedString(outputsPreview)).append("\n");
    sb.append("    parentRunId: ").append(toIndentedString(parentRunId)).append("\n");
    sb.append("    manifestId: ").append(toIndentedString(manifestId)).append("\n");
    sb.append("    manifestS3Id: ").append(toIndentedString(manifestS3Id)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    inputsS3Urls: ").append(toIndentedString(inputsS3Urls)).append("\n");
    sb.append("    outputsS3Urls: ").append(toIndentedString(outputsS3Urls)).append("\n");
    sb.append("    s3Urls: ").append(toIndentedString(s3Urls)).append("\n");
    sb.append("    traceId: ").append(toIndentedString(traceId)).append("\n");
    sb.append("    dottedOrder: ").append(toIndentedString(dottedOrder)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    childRunIds: ").append(toIndentedString(childRunIds)).append("\n");
    sb.append("    directChildRunIds: ").append(toIndentedString(directChildRunIds)).append("\n");
    sb.append("    parentRunIds: ").append(toIndentedString(parentRunIds)).append("\n");
    sb.append("    feedbackStats: ").append(toIndentedString(feedbackStats)).append("\n");
    sb.append("    referenceExampleId: ").append(toIndentedString(referenceExampleId)).append("\n");
    sb.append("    totalTokens: ").append(toIndentedString(totalTokens)).append("\n");
    sb.append("    promptTokens: ").append(toIndentedString(promptTokens)).append("\n");
    sb.append("    completionTokens: ").append(toIndentedString(completionTokens)).append("\n");
    sb.append("    promptTokenDetails: ").append(toIndentedString(promptTokenDetails)).append("\n");
    sb.append("    completionTokenDetails: ").append(toIndentedString(completionTokenDetails)).append("\n");
    sb.append("    totalCost: ").append(toIndentedString(totalCost)).append("\n");
    sb.append("    promptCost: ").append(toIndentedString(promptCost)).append("\n");
    sb.append("    completionCost: ").append(toIndentedString(completionCost)).append("\n");
    sb.append("    promptCostDetails: ").append(toIndentedString(promptCostDetails)).append("\n");
    sb.append("    completionCostDetails: ").append(toIndentedString(completionCostDetails)).append("\n");
    sb.append("    priceModelId: ").append(toIndentedString(priceModelId)).append("\n");
    sb.append("    firstTokenTime: ").append(toIndentedString(firstTokenTime)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `inputs` to the URL query string
    if (getInputs() != null) {
      joiner.add(String.format("%sinputs%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInputs()))));
    }

    // add `inputs_preview` to the URL query string
    if (getInputsPreview() != null) {
      joiner.add(String.format("%sinputs_preview%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInputsPreview()))));
    }

    // add `run_type` to the URL query string
    if (getRunType() != null) {
      joiner.add(String.format("%srun_type%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRunType()))));
    }

    // add `start_time` to the URL query string
    if (getStartTime() != null) {
      joiner.add(String.format("%sstart_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStartTime()))));
    }

    // add `end_time` to the URL query string
    if (getEndTime() != null) {
      joiner.add(String.format("%send_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEndTime()))));
    }

    // add `extra` to the URL query string
    if (getExtra() != null) {
      joiner.add(String.format("%sextra%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExtra()))));
    }

    // add `error` to the URL query string
    if (getError() != null) {
      joiner.add(String.format("%serror%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getError()))));
    }

    // add `execution_order` to the URL query string
    if (getExecutionOrder() != null) {
      joiner.add(String.format("%sexecution_order%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExecutionOrder()))));
    }

    // add `serialized` to the URL query string
    if (getSerialized() != null) {
      joiner.add(String.format("%sserialized%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSerialized()))));
    }

    // add `outputs` to the URL query string
    if (getOutputs() != null) {
      joiner.add(String.format("%soutputs%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOutputs()))));
    }

    // add `outputs_preview` to the URL query string
    if (getOutputsPreview() != null) {
      joiner.add(String.format("%soutputs_preview%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOutputsPreview()))));
    }

    // add `parent_run_id` to the URL query string
    if (getParentRunId() != null) {
      joiner.add(String.format("%sparent_run_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentRunId()))));
    }

    // add `manifest_id` to the URL query string
    if (getManifestId() != null) {
      joiner.add(String.format("%smanifest_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getManifestId()))));
    }

    // add `manifest_s3_id` to the URL query string
    if (getManifestS3Id() != null) {
      joiner.add(String.format("%smanifest_s3_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getManifestS3Id()))));
    }

    // add `events` to the URL query string
    if (getEvents() != null) {
      for (int i = 0; i < getEvents().size(); i++) {
        joiner.add(String.format("%sevents%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getEvents().get(i)))));
      }
    }

    // add `tags` to the URL query string
    if (getTags() != null) {
      for (int i = 0; i < getTags().size(); i++) {
        joiner.add(String.format("%stags%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getTags().get(i)))));
      }
    }

    // add `inputs_s3_urls` to the URL query string
    if (getInputsS3Urls() != null) {
      joiner.add(String.format("%sinputs_s3_urls%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInputsS3Urls()))));
    }

    // add `outputs_s3_urls` to the URL query string
    if (getOutputsS3Urls() != null) {
      joiner.add(String.format("%soutputs_s3_urls%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOutputsS3Urls()))));
    }

    // add `s3_urls` to the URL query string
    if (getS3Urls() != null) {
      joiner.add(String.format("%ss3_urls%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getS3Urls()))));
    }

    // add `trace_id` to the URL query string
    if (getTraceId() != null) {
      joiner.add(String.format("%strace_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTraceId()))));
    }

    // add `dotted_order` to the URL query string
    if (getDottedOrder() != null) {
      joiner.add(String.format("%sdotted_order%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDottedOrder()))));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
    }

    // add `child_run_ids` to the URL query string
    if (getChildRunIds() != null) {
      for (int i = 0; i < getChildRunIds().size(); i++) {
        if (getChildRunIds().get(i) != null) {
          joiner.add(String.format("%schild_run_ids%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getChildRunIds().get(i)))));
        }
      }
    }

    // add `direct_child_run_ids` to the URL query string
    if (getDirectChildRunIds() != null) {
      for (int i = 0; i < getDirectChildRunIds().size(); i++) {
        if (getDirectChildRunIds().get(i) != null) {
          joiner.add(String.format("%sdirect_child_run_ids%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getDirectChildRunIds().get(i)))));
        }
      }
    }

    // add `parent_run_ids` to the URL query string
    if (getParentRunIds() != null) {
      for (int i = 0; i < getParentRunIds().size(); i++) {
        if (getParentRunIds().get(i) != null) {
          joiner.add(String.format("%sparent_run_ids%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getParentRunIds().get(i)))));
        }
      }
    }

    // add `feedback_stats` to the URL query string
    if (getFeedbackStats() != null) {
      for (String _key : getFeedbackStats().keySet()) {
        joiner.add(String.format("%sfeedback_stats%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getFeedbackStats().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getFeedbackStats().get(_key)))));
      }
    }

    // add `reference_example_id` to the URL query string
    if (getReferenceExampleId() != null) {
      joiner.add(String.format("%sreference_example_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getReferenceExampleId()))));
    }

    // add `total_tokens` to the URL query string
    if (getTotalTokens() != null) {
      joiner.add(String.format("%stotal_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTotalTokens()))));
    }

    // add `prompt_tokens` to the URL query string
    if (getPromptTokens() != null) {
      joiner.add(String.format("%sprompt_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPromptTokens()))));
    }

    // add `completion_tokens` to the URL query string
    if (getCompletionTokens() != null) {
      joiner.add(String.format("%scompletion_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCompletionTokens()))));
    }

    // add `prompt_token_details` to the URL query string
    if (getPromptTokenDetails() != null) {
      for (String _key : getPromptTokenDetails().keySet()) {
        joiner.add(String.format("%sprompt_token_details%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getPromptTokenDetails().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getPromptTokenDetails().get(_key)))));
      }
    }

    // add `completion_token_details` to the URL query string
    if (getCompletionTokenDetails() != null) {
      for (String _key : getCompletionTokenDetails().keySet()) {
        joiner.add(String.format("%scompletion_token_details%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getCompletionTokenDetails().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getCompletionTokenDetails().get(_key)))));
      }
    }

    // add `total_cost` to the URL query string
    if (getTotalCost() != null) {
      joiner.add(String.format("%stotal_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTotalCost()))));
    }

    // add `prompt_cost` to the URL query string
    if (getPromptCost() != null) {
      joiner.add(String.format("%sprompt_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPromptCost()))));
    }

    // add `completion_cost` to the URL query string
    if (getCompletionCost() != null) {
      joiner.add(String.format("%scompletion_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCompletionCost()))));
    }

    // add `prompt_cost_details` to the URL query string
    if (getPromptCostDetails() != null) {
      for (String _key : getPromptCostDetails().keySet()) {
        joiner.add(String.format("%sprompt_cost_details%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getPromptCostDetails().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getPromptCostDetails().get(_key)))));
      }
    }

    // add `completion_cost_details` to the URL query string
    if (getCompletionCostDetails() != null) {
      for (String _key : getCompletionCostDetails().keySet()) {
        joiner.add(String.format("%scompletion_cost_details%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getCompletionCostDetails().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getCompletionCostDetails().get(_key)))));
      }
    }

    // add `price_model_id` to the URL query string
    if (getPriceModelId() != null) {
      joiner.add(String.format("%sprice_model_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPriceModelId()))));
    }

    // add `first_token_time` to the URL query string
    if (getFirstTokenTime() != null) {
      joiner.add(String.format("%sfirst_token_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFirstTokenTime()))));
    }

    // add `session_id` to the URL query string
    if (getSessionId() != null) {
      joiner.add(String.format("%ssession_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionId()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private RunPublicDatasetSchema instance;

    public Builder() {
      this(new RunPublicDatasetSchema());
    }

    protected Builder(RunPublicDatasetSchema instance) {
      this.instance = instance;
    }

    public RunPublicDatasetSchema.Builder name(String name) {
      this.instance.name = name;
      return this;
    }
    public RunPublicDatasetSchema.Builder inputs(Object inputs) {
      this.instance.inputs = JsonNullable.<Object>of(inputs);
      return this;
    }
    public RunPublicDatasetSchema.Builder inputs(JsonNullable<Object> inputs) {
      this.instance.inputs = inputs;
      return this;
    }
    public RunPublicDatasetSchema.Builder inputsPreview(String inputsPreview) {
      this.instance.inputsPreview = JsonNullable.<String>of(inputsPreview);
      return this;
    }
    public RunPublicDatasetSchema.Builder inputsPreview(JsonNullable<String> inputsPreview) {
      this.instance.inputsPreview = inputsPreview;
      return this;
    }
    public RunPublicDatasetSchema.Builder runType(RunTypeEnum runType) {
      this.instance.runType = runType;
      return this;
    }
    public RunPublicDatasetSchema.Builder startTime(OffsetDateTime startTime) {
      this.instance.startTime = startTime;
      return this;
    }
    public RunPublicDatasetSchema.Builder endTime(OffsetDateTime endTime) {
      this.instance.endTime = JsonNullable.<OffsetDateTime>of(endTime);
      return this;
    }
    public RunPublicDatasetSchema.Builder endTime(JsonNullable<OffsetDateTime> endTime) {
      this.instance.endTime = endTime;
      return this;
    }
    public RunPublicDatasetSchema.Builder extra(Object extra) {
      this.instance.extra = JsonNullable.<Object>of(extra);
      return this;
    }
    public RunPublicDatasetSchema.Builder extra(JsonNullable<Object> extra) {
      this.instance.extra = extra;
      return this;
    }
    public RunPublicDatasetSchema.Builder error(String error) {
      this.instance.error = JsonNullable.<String>of(error);
      return this;
    }
    public RunPublicDatasetSchema.Builder error(JsonNullable<String> error) {
      this.instance.error = error;
      return this;
    }
    public RunPublicDatasetSchema.Builder executionOrder(Integer executionOrder) {
      this.instance.executionOrder = executionOrder;
      return this;
    }
    public RunPublicDatasetSchema.Builder serialized(Object serialized) {
      this.instance.serialized = JsonNullable.<Object>of(serialized);
      return this;
    }
    public RunPublicDatasetSchema.Builder serialized(JsonNullable<Object> serialized) {
      this.instance.serialized = serialized;
      return this;
    }
    public RunPublicDatasetSchema.Builder outputs(Object outputs) {
      this.instance.outputs = JsonNullable.<Object>of(outputs);
      return this;
    }
    public RunPublicDatasetSchema.Builder outputs(JsonNullable<Object> outputs) {
      this.instance.outputs = outputs;
      return this;
    }
    public RunPublicDatasetSchema.Builder outputsPreview(String outputsPreview) {
      this.instance.outputsPreview = JsonNullable.<String>of(outputsPreview);
      return this;
    }
    public RunPublicDatasetSchema.Builder outputsPreview(JsonNullable<String> outputsPreview) {
      this.instance.outputsPreview = outputsPreview;
      return this;
    }
    public RunPublicDatasetSchema.Builder parentRunId(UUID parentRunId) {
      this.instance.parentRunId = JsonNullable.<UUID>of(parentRunId);
      return this;
    }
    public RunPublicDatasetSchema.Builder parentRunId(JsonNullable<UUID> parentRunId) {
      this.instance.parentRunId = parentRunId;
      return this;
    }
    public RunPublicDatasetSchema.Builder manifestId(UUID manifestId) {
      this.instance.manifestId = JsonNullable.<UUID>of(manifestId);
      return this;
    }
    public RunPublicDatasetSchema.Builder manifestId(JsonNullable<UUID> manifestId) {
      this.instance.manifestId = manifestId;
      return this;
    }
    public RunPublicDatasetSchema.Builder manifestS3Id(UUID manifestS3Id) {
      this.instance.manifestS3Id = JsonNullable.<UUID>of(manifestS3Id);
      return this;
    }
    public RunPublicDatasetSchema.Builder manifestS3Id(JsonNullable<UUID> manifestS3Id) {
      this.instance.manifestS3Id = manifestS3Id;
      return this;
    }
    public RunPublicDatasetSchema.Builder events(List<Object> events) {
      this.instance.events = JsonNullable.<List<Object>>of(events);
      return this;
    }
    public RunPublicDatasetSchema.Builder events(JsonNullable<List<Object>> events) {
      this.instance.events = events;
      return this;
    }
    public RunPublicDatasetSchema.Builder tags(List<String> tags) {
      this.instance.tags = JsonNullable.<List<String>>of(tags);
      return this;
    }
    public RunPublicDatasetSchema.Builder tags(JsonNullable<List<String>> tags) {
      this.instance.tags = tags;
      return this;
    }
    public RunPublicDatasetSchema.Builder inputsS3Urls(Object inputsS3Urls) {
      this.instance.inputsS3Urls = JsonNullable.<Object>of(inputsS3Urls);
      return this;
    }
    public RunPublicDatasetSchema.Builder inputsS3Urls(JsonNullable<Object> inputsS3Urls) {
      this.instance.inputsS3Urls = inputsS3Urls;
      return this;
    }
    public RunPublicDatasetSchema.Builder outputsS3Urls(Object outputsS3Urls) {
      this.instance.outputsS3Urls = JsonNullable.<Object>of(outputsS3Urls);
      return this;
    }
    public RunPublicDatasetSchema.Builder outputsS3Urls(JsonNullable<Object> outputsS3Urls) {
      this.instance.outputsS3Urls = outputsS3Urls;
      return this;
    }
    public RunPublicDatasetSchema.Builder s3Urls(Object s3Urls) {
      this.instance.s3Urls = JsonNullable.<Object>of(s3Urls);
      return this;
    }
    public RunPublicDatasetSchema.Builder s3Urls(JsonNullable<Object> s3Urls) {
      this.instance.s3Urls = s3Urls;
      return this;
    }
    public RunPublicDatasetSchema.Builder traceId(UUID traceId) {
      this.instance.traceId = traceId;
      return this;
    }
    public RunPublicDatasetSchema.Builder dottedOrder(String dottedOrder) {
      this.instance.dottedOrder = dottedOrder;
      return this;
    }
    public RunPublicDatasetSchema.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public RunPublicDatasetSchema.Builder status(String status) {
      this.instance.status = status;
      return this;
    }
    public RunPublicDatasetSchema.Builder childRunIds(List<UUID> childRunIds) {
      this.instance.childRunIds = JsonNullable.<List<UUID>>of(childRunIds);
      return this;
    }
    public RunPublicDatasetSchema.Builder childRunIds(JsonNullable<List<UUID>> childRunIds) {
      this.instance.childRunIds = childRunIds;
      return this;
    }
    public RunPublicDatasetSchema.Builder directChildRunIds(List<UUID> directChildRunIds) {
      this.instance.directChildRunIds = JsonNullable.<List<UUID>>of(directChildRunIds);
      return this;
    }
    public RunPublicDatasetSchema.Builder directChildRunIds(JsonNullable<List<UUID>> directChildRunIds) {
      this.instance.directChildRunIds = directChildRunIds;
      return this;
    }
    public RunPublicDatasetSchema.Builder parentRunIds(List<UUID> parentRunIds) {
      this.instance.parentRunIds = JsonNullable.<List<UUID>>of(parentRunIds);
      return this;
    }
    public RunPublicDatasetSchema.Builder parentRunIds(JsonNullable<List<UUID>> parentRunIds) {
      this.instance.parentRunIds = parentRunIds;
      return this;
    }
    public RunPublicDatasetSchema.Builder feedbackStats(Map<String, Object> feedbackStats) {
      this.instance.feedbackStats = JsonNullable.<Map<String, Object>>of(feedbackStats);
      return this;
    }
    public RunPublicDatasetSchema.Builder feedbackStats(JsonNullable<Map<String, Object>> feedbackStats) {
      this.instance.feedbackStats = feedbackStats;
      return this;
    }
    public RunPublicDatasetSchema.Builder referenceExampleId(UUID referenceExampleId) {
      this.instance.referenceExampleId = JsonNullable.<UUID>of(referenceExampleId);
      return this;
    }
    public RunPublicDatasetSchema.Builder referenceExampleId(JsonNullable<UUID> referenceExampleId) {
      this.instance.referenceExampleId = referenceExampleId;
      return this;
    }
    public RunPublicDatasetSchema.Builder totalTokens(Integer totalTokens) {
      this.instance.totalTokens = totalTokens;
      return this;
    }
    public RunPublicDatasetSchema.Builder promptTokens(Integer promptTokens) {
      this.instance.promptTokens = promptTokens;
      return this;
    }
    public RunPublicDatasetSchema.Builder completionTokens(Integer completionTokens) {
      this.instance.completionTokens = completionTokens;
      return this;
    }
    public RunPublicDatasetSchema.Builder promptTokenDetails(Map<String, Integer> promptTokenDetails) {
      this.instance.promptTokenDetails = JsonNullable.<Map<String, Integer>>of(promptTokenDetails);
      return this;
    }
    public RunPublicDatasetSchema.Builder promptTokenDetails(JsonNullable<Map<String, Integer>> promptTokenDetails) {
      this.instance.promptTokenDetails = promptTokenDetails;
      return this;
    }
    public RunPublicDatasetSchema.Builder completionTokenDetails(Map<String, Integer> completionTokenDetails) {
      this.instance.completionTokenDetails = JsonNullable.<Map<String, Integer>>of(completionTokenDetails);
      return this;
    }
    public RunPublicDatasetSchema.Builder completionTokenDetails(JsonNullable<Map<String, Integer>> completionTokenDetails) {
      this.instance.completionTokenDetails = completionTokenDetails;
      return this;
    }
    public RunPublicDatasetSchema.Builder totalCost(String totalCost) {
      this.instance.totalCost = JsonNullable.<String>of(totalCost);
      return this;
    }
    public RunPublicDatasetSchema.Builder totalCost(JsonNullable<String> totalCost) {
      this.instance.totalCost = totalCost;
      return this;
    }
    public RunPublicDatasetSchema.Builder promptCost(String promptCost) {
      this.instance.promptCost = JsonNullable.<String>of(promptCost);
      return this;
    }
    public RunPublicDatasetSchema.Builder promptCost(JsonNullable<String> promptCost) {
      this.instance.promptCost = promptCost;
      return this;
    }
    public RunPublicDatasetSchema.Builder completionCost(String completionCost) {
      this.instance.completionCost = JsonNullable.<String>of(completionCost);
      return this;
    }
    public RunPublicDatasetSchema.Builder completionCost(JsonNullable<String> completionCost) {
      this.instance.completionCost = completionCost;
      return this;
    }
    public RunPublicDatasetSchema.Builder promptCostDetails(Map<String, String> promptCostDetails) {
      this.instance.promptCostDetails = JsonNullable.<Map<String, String>>of(promptCostDetails);
      return this;
    }
    public RunPublicDatasetSchema.Builder promptCostDetails(JsonNullable<Map<String, String>> promptCostDetails) {
      this.instance.promptCostDetails = promptCostDetails;
      return this;
    }
    public RunPublicDatasetSchema.Builder completionCostDetails(Map<String, String> completionCostDetails) {
      this.instance.completionCostDetails = JsonNullable.<Map<String, String>>of(completionCostDetails);
      return this;
    }
    public RunPublicDatasetSchema.Builder completionCostDetails(JsonNullable<Map<String, String>> completionCostDetails) {
      this.instance.completionCostDetails = completionCostDetails;
      return this;
    }
    public RunPublicDatasetSchema.Builder priceModelId(UUID priceModelId) {
      this.instance.priceModelId = JsonNullable.<UUID>of(priceModelId);
      return this;
    }
    public RunPublicDatasetSchema.Builder priceModelId(JsonNullable<UUID> priceModelId) {
      this.instance.priceModelId = priceModelId;
      return this;
    }
    public RunPublicDatasetSchema.Builder firstTokenTime(OffsetDateTime firstTokenTime) {
      this.instance.firstTokenTime = JsonNullable.<OffsetDateTime>of(firstTokenTime);
      return this;
    }
    public RunPublicDatasetSchema.Builder firstTokenTime(JsonNullable<OffsetDateTime> firstTokenTime) {
      this.instance.firstTokenTime = firstTokenTime;
      return this;
    }
    public RunPublicDatasetSchema.Builder sessionId(UUID sessionId) {
      this.instance.sessionId = sessionId;
      return this;
    }


    /**
    * returns a built RunPublicDatasetSchema instance.
    *
    * The builder is not reusable.
    */
    public RunPublicDatasetSchema build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static RunPublicDatasetSchema.Builder builder() {
    return new RunPublicDatasetSchema.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public RunPublicDatasetSchema.Builder toBuilder() {
    return new RunPublicDatasetSchema.Builder()
      .name(getName())
      .inputs(getInputs())
      .inputsPreview(getInputsPreview())
      .runType(getRunType())
      .startTime(getStartTime())
      .endTime(getEndTime())
      .extra(getExtra())
      .error(getError())
      .executionOrder(getExecutionOrder())
      .serialized(getSerialized())
      .outputs(getOutputs())
      .outputsPreview(getOutputsPreview())
      .parentRunId(getParentRunId())
      .manifestId(getManifestId())
      .manifestS3Id(getManifestS3Id())
      .events(getEvents())
      .tags(getTags())
      .inputsS3Urls(getInputsS3Urls())
      .outputsS3Urls(getOutputsS3Urls())
      .s3Urls(getS3Urls())
      .traceId(getTraceId())
      .dottedOrder(getDottedOrder())
      .id(getId())
      .status(getStatus())
      .childRunIds(getChildRunIds())
      .directChildRunIds(getDirectChildRunIds())
      .parentRunIds(getParentRunIds())
      .feedbackStats(getFeedbackStats())
      .referenceExampleId(getReferenceExampleId())
      .totalTokens(getTotalTokens())
      .promptTokens(getPromptTokens())
      .completionTokens(getCompletionTokens())
      .promptTokenDetails(getPromptTokenDetails())
      .completionTokenDetails(getCompletionTokenDetails())
      .totalCost(getTotalCost())
      .promptCost(getPromptCost())
      .completionCost(getCompletionCost())
      .promptCostDetails(getPromptCostDetails())
      .completionCostDetails(getCompletionCostDetails())
      .priceModelId(getPriceModelId())
      .firstTokenTime(getFirstTokenTime())
      .sessionId(getSessionId());
  }

}

