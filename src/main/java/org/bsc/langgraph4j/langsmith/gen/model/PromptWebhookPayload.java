/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.bsc.langgraph4j.langsmith.gen.model.EPromptWebhookTrigger;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * PromptWebhookPayload
 */
@JsonPropertyOrder({
  PromptWebhookPayload.JSON_PROPERTY_PROMPT_ID,
  PromptWebhookPayload.JSON_PROPERTY_PROMPT_NAME,
  PromptWebhookPayload.JSON_PROPERTY_MANIFEST,
  PromptWebhookPayload.JSON_PROPERTY_COMMIT_HASH,
  PromptWebhookPayload.JSON_PROPERTY_CREATED_AT,
  PromptWebhookPayload.JSON_PROPERTY_CREATED_BY,
  PromptWebhookPayload.JSON_PROPERTY_EVENT,
  PromptWebhookPayload.JSON_PROPERTY_TAG_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class PromptWebhookPayload {
  public static final String JSON_PROPERTY_PROMPT_ID = "prompt_id";
  @javax.annotation.Nonnull
  private String promptId;

  public static final String JSON_PROPERTY_PROMPT_NAME = "prompt_name";
  @javax.annotation.Nonnull
  private String promptName;

  public static final String JSON_PROPERTY_MANIFEST = "manifest";
  @javax.annotation.Nonnull
  private Object manifest;

  public static final String JSON_PROPERTY_COMMIT_HASH = "commit_hash";
  @javax.annotation.Nonnull
  private String commitHash;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @javax.annotation.Nonnull
  private String createdAt;

  public static final String JSON_PROPERTY_CREATED_BY = "created_by";
  @javax.annotation.Nonnull
  private String createdBy;

  public static final String JSON_PROPERTY_EVENT = "event";
  @javax.annotation.Nonnull
  private EPromptWebhookTrigger event;

  public static final String JSON_PROPERTY_TAG_NAME = "tag_name";
  private JsonNullable<String> tagName = JsonNullable.<String>undefined();

  public PromptWebhookPayload() { 
  }

  public PromptWebhookPayload promptId(@javax.annotation.Nonnull String promptId) {
    this.promptId = promptId;
    return this;
  }

  /**
   * Get promptId
   * @return promptId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROMPT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPromptId() {
    return promptId;
  }


  @JsonProperty(JSON_PROPERTY_PROMPT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPromptId(@javax.annotation.Nonnull String promptId) {
    this.promptId = promptId;
  }


  public PromptWebhookPayload promptName(@javax.annotation.Nonnull String promptName) {
    this.promptName = promptName;
    return this;
  }

  /**
   * Get promptName
   * @return promptName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROMPT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPromptName() {
    return promptName;
  }


  @JsonProperty(JSON_PROPERTY_PROMPT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPromptName(@javax.annotation.Nonnull String promptName) {
    this.promptName = promptName;
  }


  public PromptWebhookPayload manifest(@javax.annotation.Nonnull Object manifest) {
    this.manifest = manifest;
    return this;
  }

  /**
   * Get manifest
   * @return manifest
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MANIFEST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Object getManifest() {
    return manifest;
  }


  @JsonProperty(JSON_PROPERTY_MANIFEST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setManifest(@javax.annotation.Nonnull Object manifest) {
    this.manifest = manifest;
  }


  public PromptWebhookPayload commitHash(@javax.annotation.Nonnull String commitHash) {
    this.commitHash = commitHash;
    return this;
  }

  /**
   * Get commitHash
   * @return commitHash
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMMIT_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getCommitHash() {
    return commitHash;
  }


  @JsonProperty(JSON_PROPERTY_COMMIT_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCommitHash(@javax.annotation.Nonnull String commitHash) {
    this.commitHash = commitHash;
  }


  public PromptWebhookPayload createdAt(@javax.annotation.Nonnull String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull String createdAt) {
    this.createdAt = createdAt;
  }


  public PromptWebhookPayload createdBy(@javax.annotation.Nonnull String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedBy(@javax.annotation.Nonnull String createdBy) {
    this.createdBy = createdBy;
  }


  public PromptWebhookPayload event(@javax.annotation.Nonnull EPromptWebhookTrigger event) {
    this.event = event;
    return this;
  }

  /**
   * Get event
   * @return event
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public EPromptWebhookTrigger getEvent() {
    return event;
  }


  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEvent(@javax.annotation.Nonnull EPromptWebhookTrigger event) {
    this.event = event;
  }


  public PromptWebhookPayload tagName(@javax.annotation.Nullable String tagName) {
    this.tagName = JsonNullable.<String>of(tagName);
    return this;
  }

  /**
   * Get tagName
   * @return tagName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTagName() {
        return tagName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTagName_JsonNullable() {
    return tagName;
  }
  
  @JsonProperty(JSON_PROPERTY_TAG_NAME)
  public void setTagName_JsonNullable(JsonNullable<String> tagName) {
    this.tagName = tagName;
  }

  public void setTagName(@javax.annotation.Nullable String tagName) {
    this.tagName = JsonNullable.<String>of(tagName);
  }


  /**
   * Return true if this PromptWebhookPayload object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromptWebhookPayload promptWebhookPayload = (PromptWebhookPayload) o;
    return Objects.equals(this.promptId, promptWebhookPayload.promptId) &&
        Objects.equals(this.promptName, promptWebhookPayload.promptName) &&
        Objects.equals(this.manifest, promptWebhookPayload.manifest) &&
        Objects.equals(this.commitHash, promptWebhookPayload.commitHash) &&
        Objects.equals(this.createdAt, promptWebhookPayload.createdAt) &&
        Objects.equals(this.createdBy, promptWebhookPayload.createdBy) &&
        Objects.equals(this.event, promptWebhookPayload.event) &&
        equalsNullable(this.tagName, promptWebhookPayload.tagName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(promptId, promptName, manifest, commitHash, createdAt, createdBy, event, hashCodeNullable(tagName));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromptWebhookPayload {\n");
    sb.append("    promptId: ").append(toIndentedString(promptId)).append("\n");
    sb.append("    promptName: ").append(toIndentedString(promptName)).append("\n");
    sb.append("    manifest: ").append(toIndentedString(manifest)).append("\n");
    sb.append("    commitHash: ").append(toIndentedString(commitHash)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    tagName: ").append(toIndentedString(tagName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `prompt_id` to the URL query string
    if (getPromptId() != null) {
      joiner.add(String.format("%sprompt_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPromptId()))));
    }

    // add `prompt_name` to the URL query string
    if (getPromptName() != null) {
      joiner.add(String.format("%sprompt_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPromptName()))));
    }

    // add `manifest` to the URL query string
    if (getManifest() != null) {
      joiner.add(String.format("%smanifest%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getManifest()))));
    }

    // add `commit_hash` to the URL query string
    if (getCommitHash() != null) {
      joiner.add(String.format("%scommit_hash%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCommitHash()))));
    }

    // add `created_at` to the URL query string
    if (getCreatedAt() != null) {
      joiner.add(String.format("%screated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
    }

    // add `created_by` to the URL query string
    if (getCreatedBy() != null) {
      joiner.add(String.format("%screated_by%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedBy()))));
    }

    // add `event` to the URL query string
    if (getEvent() != null) {
      joiner.add(String.format("%sevent%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEvent()))));
    }

    // add `tag_name` to the URL query string
    if (getTagName() != null) {
      joiner.add(String.format("%stag_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTagName()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private PromptWebhookPayload instance;

    public Builder() {
      this(new PromptWebhookPayload());
    }

    protected Builder(PromptWebhookPayload instance) {
      this.instance = instance;
    }

    public PromptWebhookPayload.Builder promptId(String promptId) {
      this.instance.promptId = promptId;
      return this;
    }
    public PromptWebhookPayload.Builder promptName(String promptName) {
      this.instance.promptName = promptName;
      return this;
    }
    public PromptWebhookPayload.Builder manifest(Object manifest) {
      this.instance.manifest = manifest;
      return this;
    }
    public PromptWebhookPayload.Builder commitHash(String commitHash) {
      this.instance.commitHash = commitHash;
      return this;
    }
    public PromptWebhookPayload.Builder createdAt(String createdAt) {
      this.instance.createdAt = createdAt;
      return this;
    }
    public PromptWebhookPayload.Builder createdBy(String createdBy) {
      this.instance.createdBy = createdBy;
      return this;
    }
    public PromptWebhookPayload.Builder event(EPromptWebhookTrigger event) {
      this.instance.event = event;
      return this;
    }
    public PromptWebhookPayload.Builder tagName(String tagName) {
      this.instance.tagName = JsonNullable.<String>of(tagName);
      return this;
    }
    public PromptWebhookPayload.Builder tagName(JsonNullable<String> tagName) {
      this.instance.tagName = tagName;
      return this;
    }


    /**
    * returns a built PromptWebhookPayload instance.
    *
    * The builder is not reusable.
    */
    public PromptWebhookPayload build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static PromptWebhookPayload.Builder builder() {
    return new PromptWebhookPayload.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public PromptWebhookPayload.Builder toBuilder() {
    return new PromptWebhookPayload.Builder()
      .promptId(getPromptId())
      .promptName(getPromptName())
      .manifest(getManifest())
      .commitHash(getCommitHash())
      .createdAt(getCreatedAt())
      .createdBy(getCreatedBy())
      .event(getEvent())
      .tagName(getTagName());
  }

}

