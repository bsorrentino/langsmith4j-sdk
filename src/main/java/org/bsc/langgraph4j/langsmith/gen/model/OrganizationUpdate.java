/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Update organization schema.
 */
@JsonPropertyOrder({
  OrganizationUpdate.JSON_PROPERTY_DISPLAY_NAME,
  OrganizationUpdate.JSON_PROPERTY_PUBLIC_SHARING_DISABLED,
  OrganizationUpdate.JSON_PROPERTY_UNSHARE_ALL,
  OrganizationUpdate.JSON_PROPERTY_JIT_PROVISIONING_ENABLED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class OrganizationUpdate {
  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  @javax.annotation.Nullable
  private String displayName;

  public static final String JSON_PROPERTY_PUBLIC_SHARING_DISABLED = "public_sharing_disabled";
  private JsonNullable<Boolean> publicSharingDisabled = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_UNSHARE_ALL = "unshare_all";
  private JsonNullable<Boolean> unshareAll = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_JIT_PROVISIONING_ENABLED = "jit_provisioning_enabled";
  private JsonNullable<Boolean> jitProvisioningEnabled = JsonNullable.<Boolean>undefined();

  public OrganizationUpdate() { 
  }

  public OrganizationUpdate displayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
  }


  public OrganizationUpdate publicSharingDisabled(@javax.annotation.Nullable Boolean publicSharingDisabled) {
    this.publicSharingDisabled = JsonNullable.<Boolean>of(publicSharingDisabled);
    return this;
  }

  /**
   * Get publicSharingDisabled
   * @return publicSharingDisabled
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getPublicSharingDisabled() {
        return publicSharingDisabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PUBLIC_SHARING_DISABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getPublicSharingDisabled_JsonNullable() {
    return publicSharingDisabled;
  }
  
  @JsonProperty(JSON_PROPERTY_PUBLIC_SHARING_DISABLED)
  public void setPublicSharingDisabled_JsonNullable(JsonNullable<Boolean> publicSharingDisabled) {
    this.publicSharingDisabled = publicSharingDisabled;
  }

  public void setPublicSharingDisabled(@javax.annotation.Nullable Boolean publicSharingDisabled) {
    this.publicSharingDisabled = JsonNullable.<Boolean>of(publicSharingDisabled);
  }


  public OrganizationUpdate unshareAll(@javax.annotation.Nullable Boolean unshareAll) {
    this.unshareAll = JsonNullable.<Boolean>of(unshareAll);
    return this;
  }

  /**
   * Get unshareAll
   * @return unshareAll
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getUnshareAll() {
        return unshareAll.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNSHARE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getUnshareAll_JsonNullable() {
    return unshareAll;
  }
  
  @JsonProperty(JSON_PROPERTY_UNSHARE_ALL)
  public void setUnshareAll_JsonNullable(JsonNullable<Boolean> unshareAll) {
    this.unshareAll = unshareAll;
  }

  public void setUnshareAll(@javax.annotation.Nullable Boolean unshareAll) {
    this.unshareAll = JsonNullable.<Boolean>of(unshareAll);
  }


  public OrganizationUpdate jitProvisioningEnabled(@javax.annotation.Nullable Boolean jitProvisioningEnabled) {
    this.jitProvisioningEnabled = JsonNullable.<Boolean>of(jitProvisioningEnabled);
    return this;
  }

  /**
   * Get jitProvisioningEnabled
   * @return jitProvisioningEnabled
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getJitProvisioningEnabled() {
        return jitProvisioningEnabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JIT_PROVISIONING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getJitProvisioningEnabled_JsonNullable() {
    return jitProvisioningEnabled;
  }
  
  @JsonProperty(JSON_PROPERTY_JIT_PROVISIONING_ENABLED)
  public void setJitProvisioningEnabled_JsonNullable(JsonNullable<Boolean> jitProvisioningEnabled) {
    this.jitProvisioningEnabled = jitProvisioningEnabled;
  }

  public void setJitProvisioningEnabled(@javax.annotation.Nullable Boolean jitProvisioningEnabled) {
    this.jitProvisioningEnabled = JsonNullable.<Boolean>of(jitProvisioningEnabled);
  }


  /**
   * Return true if this OrganizationUpdate object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationUpdate organizationUpdate = (OrganizationUpdate) o;
    return Objects.equals(this.displayName, organizationUpdate.displayName) &&
        equalsNullable(this.publicSharingDisabled, organizationUpdate.publicSharingDisabled) &&
        equalsNullable(this.unshareAll, organizationUpdate.unshareAll) &&
        equalsNullable(this.jitProvisioningEnabled, organizationUpdate.jitProvisioningEnabled);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, hashCodeNullable(publicSharingDisabled), hashCodeNullable(unshareAll), hashCodeNullable(jitProvisioningEnabled));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationUpdate {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    publicSharingDisabled: ").append(toIndentedString(publicSharingDisabled)).append("\n");
    sb.append("    unshareAll: ").append(toIndentedString(unshareAll)).append("\n");
    sb.append("    jitProvisioningEnabled: ").append(toIndentedString(jitProvisioningEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `display_name` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sdisplay_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDisplayName()))));
    }

    // add `public_sharing_disabled` to the URL query string
    if (getPublicSharingDisabled() != null) {
      joiner.add(String.format("%spublic_sharing_disabled%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPublicSharingDisabled()))));
    }

    // add `unshare_all` to the URL query string
    if (getUnshareAll() != null) {
      joiner.add(String.format("%sunshare_all%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUnshareAll()))));
    }

    // add `jit_provisioning_enabled` to the URL query string
    if (getJitProvisioningEnabled() != null) {
      joiner.add(String.format("%sjit_provisioning_enabled%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getJitProvisioningEnabled()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private OrganizationUpdate instance;

    public Builder() {
      this(new OrganizationUpdate());
    }

    protected Builder(OrganizationUpdate instance) {
      this.instance = instance;
    }

    public OrganizationUpdate.Builder displayName(String displayName) {
      this.instance.displayName = displayName;
      return this;
    }
    public OrganizationUpdate.Builder publicSharingDisabled(Boolean publicSharingDisabled) {
      this.instance.publicSharingDisabled = JsonNullable.<Boolean>of(publicSharingDisabled);
      return this;
    }
    public OrganizationUpdate.Builder publicSharingDisabled(JsonNullable<Boolean> publicSharingDisabled) {
      this.instance.publicSharingDisabled = publicSharingDisabled;
      return this;
    }
    public OrganizationUpdate.Builder unshareAll(Boolean unshareAll) {
      this.instance.unshareAll = JsonNullable.<Boolean>of(unshareAll);
      return this;
    }
    public OrganizationUpdate.Builder unshareAll(JsonNullable<Boolean> unshareAll) {
      this.instance.unshareAll = unshareAll;
      return this;
    }
    public OrganizationUpdate.Builder jitProvisioningEnabled(Boolean jitProvisioningEnabled) {
      this.instance.jitProvisioningEnabled = JsonNullable.<Boolean>of(jitProvisioningEnabled);
      return this;
    }
    public OrganizationUpdate.Builder jitProvisioningEnabled(JsonNullable<Boolean> jitProvisioningEnabled) {
      this.instance.jitProvisioningEnabled = jitProvisioningEnabled;
      return this;
    }


    /**
    * returns a built OrganizationUpdate instance.
    *
    * The builder is not reusable.
    */
    public OrganizationUpdate build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static OrganizationUpdate.Builder builder() {
    return new OrganizationUpdate.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public OrganizationUpdate.Builder toBuilder() {
    return new OrganizationUpdate.Builder()
      .displayName(getDisplayName())
      .publicSharingDisabled(getPublicSharingDisabled())
      .unshareAll(getUnshareAll())
      .jitProvisioningEnabled(getJitProvisioningEnabled());
  }

}

