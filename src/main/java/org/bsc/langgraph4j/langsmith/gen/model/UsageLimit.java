/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.UsageLimitType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Usage limit model.
 */
@JsonPropertyOrder({
  UsageLimit.JSON_PROPERTY_LIMIT_TYPE,
  UsageLimit.JSON_PROPERTY_LIMIT_VALUE,
  UsageLimit.JSON_PROPERTY_ID,
  UsageLimit.JSON_PROPERTY_TENANT_ID,
  UsageLimit.JSON_PROPERTY_CREATED_AT,
  UsageLimit.JSON_PROPERTY_UPDATED_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class UsageLimit {
  public static final String JSON_PROPERTY_LIMIT_TYPE = "limit_type";
  @javax.annotation.Nonnull
  private UsageLimitType limitType;

  public static final String JSON_PROPERTY_LIMIT_VALUE = "limit_value";
  @javax.annotation.Nonnull
  private Integer limitValue;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private UUID id;

  public static final String JSON_PROPERTY_TENANT_ID = "tenant_id";
  @javax.annotation.Nonnull
  private UUID tenantId;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @javax.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  @javax.annotation.Nonnull
  private OffsetDateTime updatedAt;

  public UsageLimit() { 
  }

  public UsageLimit limitType(@javax.annotation.Nonnull UsageLimitType limitType) {
    this.limitType = limitType;
    return this;
  }

  /**
   * Get limitType
   * @return limitType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LIMIT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UsageLimitType getLimitType() {
    return limitType;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLimitType(@javax.annotation.Nonnull UsageLimitType limitType) {
    this.limitType = limitType;
  }


  public UsageLimit limitValue(@javax.annotation.Nonnull Integer limitValue) {
    this.limitValue = limitValue;
    return this;
  }

  /**
   * Get limitValue
   * @return limitValue
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LIMIT_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getLimitValue() {
    return limitValue;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLimitValue(@javax.annotation.Nonnull Integer limitValue) {
    this.limitValue = limitValue;
  }


  public UsageLimit id(@javax.annotation.Nullable UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable UUID id) {
    this.id = id;
  }


  public UsageLimit tenantId(@javax.annotation.Nonnull UUID tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenantId(@javax.annotation.Nonnull UUID tenantId) {
    this.tenantId = tenantId;
  }


  public UsageLimit createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public UsageLimit updatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  /**
   * Return true if this UsageLimit object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsageLimit usageLimit = (UsageLimit) o;
    return Objects.equals(this.limitType, usageLimit.limitType) &&
        Objects.equals(this.limitValue, usageLimit.limitValue) &&
        Objects.equals(this.id, usageLimit.id) &&
        Objects.equals(this.tenantId, usageLimit.tenantId) &&
        Objects.equals(this.createdAt, usageLimit.createdAt) &&
        Objects.equals(this.updatedAt, usageLimit.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limitType, limitValue, id, tenantId, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsageLimit {\n");
    sb.append("    limitType: ").append(toIndentedString(limitType)).append("\n");
    sb.append("    limitValue: ").append(toIndentedString(limitValue)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `limit_type` to the URL query string
    if (getLimitType() != null) {
      joiner.add(String.format("%slimit_type%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLimitType()))));
    }

    // add `limit_value` to the URL query string
    if (getLimitValue() != null) {
      joiner.add(String.format("%slimit_value%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLimitValue()))));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `tenant_id` to the URL query string
    if (getTenantId() != null) {
      joiner.add(String.format("%stenant_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTenantId()))));
    }

    // add `created_at` to the URL query string
    if (getCreatedAt() != null) {
      joiner.add(String.format("%screated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
    }

    // add `updated_at` to the URL query string
    if (getUpdatedAt() != null) {
      joiner.add(String.format("%supdated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUpdatedAt()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private UsageLimit instance;

    public Builder() {
      this(new UsageLimit());
    }

    protected Builder(UsageLimit instance) {
      this.instance = instance;
    }

    public UsageLimit.Builder limitType(UsageLimitType limitType) {
      this.instance.limitType = limitType;
      return this;
    }
    public UsageLimit.Builder limitValue(Integer limitValue) {
      this.instance.limitValue = limitValue;
      return this;
    }
    public UsageLimit.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public UsageLimit.Builder tenantId(UUID tenantId) {
      this.instance.tenantId = tenantId;
      return this;
    }
    public UsageLimit.Builder createdAt(OffsetDateTime createdAt) {
      this.instance.createdAt = createdAt;
      return this;
    }
    public UsageLimit.Builder updatedAt(OffsetDateTime updatedAt) {
      this.instance.updatedAt = updatedAt;
      return this;
    }


    /**
    * returns a built UsageLimit instance.
    *
    * The builder is not reusable.
    */
    public UsageLimit build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static UsageLimit.Builder builder() {
    return new UsageLimit.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public UsageLimit.Builder toBuilder() {
    return new UsageLimit.Builder()
      .limitType(getLimitType())
      .limitValue(getLimitValue())
      .id(getId())
      .tenantId(getTenantId())
      .createdAt(getCreatedAt())
      .updatedAt(getUpdatedAt());
  }

}

