/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.SortParamsForRunsComparisonView;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * QueryExampleSchemaWithRuns
 */
@JsonPropertyOrder({
  QueryExampleSchemaWithRuns.JSON_PROPERTY_SESSION_IDS,
  QueryExampleSchemaWithRuns.JSON_PROPERTY_OFFSET,
  QueryExampleSchemaWithRuns.JSON_PROPERTY_LIMIT,
  QueryExampleSchemaWithRuns.JSON_PROPERTY_PREVIEW,
  QueryExampleSchemaWithRuns.JSON_PROPERTY_FORMAT,
  QueryExampleSchemaWithRuns.JSON_PROPERTY_COMPARATIVE_EXPERIMENT_ID,
  QueryExampleSchemaWithRuns.JSON_PROPERTY_SORT_PARAMS,
  QueryExampleSchemaWithRuns.JSON_PROPERTY_FILTERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class QueryExampleSchemaWithRuns {
  public static final String JSON_PROPERTY_SESSION_IDS = "session_ids";
  @javax.annotation.Nonnull
  private List<UUID> sessionIds = new ArrayList<>();

  public static final String JSON_PROPERTY_OFFSET = "offset";
  @javax.annotation.Nullable
  private Integer offset = 0;

  public static final String JSON_PROPERTY_LIMIT = "limit";
  @javax.annotation.Nullable
  private Integer limit = 10;

  public static final String JSON_PROPERTY_PREVIEW = "preview";
  @javax.annotation.Nullable
  private Boolean preview = false;

  /**
   * Gets or Sets format
   */
  public enum FormatEnum {
    CSV(String.valueOf("csv"));

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FormatEnum fromValue(String value) {
      for (FormatEnum b : FormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_FORMAT = "format";
  private JsonNullable<FormatEnum> format = JsonNullable.<FormatEnum>undefined();

  public static final String JSON_PROPERTY_COMPARATIVE_EXPERIMENT_ID = "comparative_experiment_id";
  private JsonNullable<UUID> comparativeExperimentId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_SORT_PARAMS = "sort_params";
  private JsonNullable<SortParamsForRunsComparisonView> sortParams = JsonNullable.<SortParamsForRunsComparisonView>undefined();

  public static final String JSON_PROPERTY_FILTERS = "filters";
  private JsonNullable<Map<String, List<String>>> filters = JsonNullable.<Map<String, List<String>>>undefined();

  public QueryExampleSchemaWithRuns() { 
  }

  public QueryExampleSchemaWithRuns sessionIds(@javax.annotation.Nonnull List<UUID> sessionIds) {
    this.sessionIds = sessionIds;
    return this;
  }

  public QueryExampleSchemaWithRuns addSessionIdsItem(UUID sessionIdsItem) {
    if (this.sessionIds == null) {
      this.sessionIds = new ArrayList<>();
    }
    this.sessionIds.add(sessionIdsItem);
    return this;
  }

  /**
   * Get sessionIds
   * @return sessionIds
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SESSION_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<UUID> getSessionIds() {
    return sessionIds;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSessionIds(@javax.annotation.Nonnull List<UUID> sessionIds) {
    this.sessionIds = sessionIds;
  }


  public QueryExampleSchemaWithRuns offset(@javax.annotation.Nullable Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * Get offset
   * minimum: 0
   * @return offset
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getOffset() {
    return offset;
  }


  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOffset(@javax.annotation.Nullable Integer offset) {
    this.offset = offset;
  }


  public QueryExampleSchemaWithRuns limit(@javax.annotation.Nullable Integer limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Get limit
   * minimum: 1
   * @return limit
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getLimit() {
    return limit;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimit(@javax.annotation.Nullable Integer limit) {
    this.limit = limit;
  }


  public QueryExampleSchemaWithRuns preview(@javax.annotation.Nullable Boolean preview) {
    this.preview = preview;
    return this;
  }

  /**
   * Get preview
   * @return preview
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getPreview() {
    return preview;
  }


  @JsonProperty(JSON_PROPERTY_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreview(@javax.annotation.Nullable Boolean preview) {
    this.preview = preview;
  }


  public QueryExampleSchemaWithRuns format(@javax.annotation.Nullable FormatEnum format) {
    this.format = JsonNullable.<FormatEnum>of(format);
    return this;
  }

  /**
   * Get format
   * @return format
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public FormatEnum getFormat() {
        return format.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<FormatEnum> getFormat_JsonNullable() {
    return format;
  }
  
  @JsonProperty(JSON_PROPERTY_FORMAT)
  public void setFormat_JsonNullable(JsonNullable<FormatEnum> format) {
    this.format = format;
  }

  public void setFormat(@javax.annotation.Nullable FormatEnum format) {
    this.format = JsonNullable.<FormatEnum>of(format);
  }


  public QueryExampleSchemaWithRuns comparativeExperimentId(@javax.annotation.Nullable UUID comparativeExperimentId) {
    this.comparativeExperimentId = JsonNullable.<UUID>of(comparativeExperimentId);
    return this;
  }

  /**
   * Get comparativeExperimentId
   * @return comparativeExperimentId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getComparativeExperimentId() {
        return comparativeExperimentId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPARATIVE_EXPERIMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getComparativeExperimentId_JsonNullable() {
    return comparativeExperimentId;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPARATIVE_EXPERIMENT_ID)
  public void setComparativeExperimentId_JsonNullable(JsonNullable<UUID> comparativeExperimentId) {
    this.comparativeExperimentId = comparativeExperimentId;
  }

  public void setComparativeExperimentId(@javax.annotation.Nullable UUID comparativeExperimentId) {
    this.comparativeExperimentId = JsonNullable.<UUID>of(comparativeExperimentId);
  }


  public QueryExampleSchemaWithRuns sortParams(@javax.annotation.Nullable SortParamsForRunsComparisonView sortParams) {
    this.sortParams = JsonNullable.<SortParamsForRunsComparisonView>of(sortParams);
    return this;
  }

  /**
   * Get sortParams
   * @return sortParams
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public SortParamsForRunsComparisonView getSortParams() {
        return sortParams.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORT_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SortParamsForRunsComparisonView> getSortParams_JsonNullable() {
    return sortParams;
  }
  
  @JsonProperty(JSON_PROPERTY_SORT_PARAMS)
  public void setSortParams_JsonNullable(JsonNullable<SortParamsForRunsComparisonView> sortParams) {
    this.sortParams = sortParams;
  }

  public void setSortParams(@javax.annotation.Nullable SortParamsForRunsComparisonView sortParams) {
    this.sortParams = JsonNullable.<SortParamsForRunsComparisonView>of(sortParams);
  }


  public QueryExampleSchemaWithRuns filters(@javax.annotation.Nullable Map<String, List<String>> filters) {
    this.filters = JsonNullable.<Map<String, List<String>>>of(filters);
    return this;
  }

  public QueryExampleSchemaWithRuns putFiltersItem(String key, List<String> filtersItem) {
    if (this.filters == null || !this.filters.isPresent()) {
      this.filters = JsonNullable.<Map<String, List<String>>>of(new HashMap<>());
    }
    try {
      this.filters.get().put(key, filtersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get filters
   * @return filters
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, List<String>> getFilters() {
        return filters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, List<String>>> getFilters_JsonNullable() {
    return filters;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTERS)
  public void setFilters_JsonNullable(JsonNullable<Map<String, List<String>>> filters) {
    this.filters = filters;
  }

  public void setFilters(@javax.annotation.Nullable Map<String, List<String>> filters) {
    this.filters = JsonNullable.<Map<String, List<String>>>of(filters);
  }


  /**
   * Return true if this QueryExampleSchemaWithRuns object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryExampleSchemaWithRuns queryExampleSchemaWithRuns = (QueryExampleSchemaWithRuns) o;
    return Objects.equals(this.sessionIds, queryExampleSchemaWithRuns.sessionIds) &&
        Objects.equals(this.offset, queryExampleSchemaWithRuns.offset) &&
        Objects.equals(this.limit, queryExampleSchemaWithRuns.limit) &&
        Objects.equals(this.preview, queryExampleSchemaWithRuns.preview) &&
        equalsNullable(this.format, queryExampleSchemaWithRuns.format) &&
        equalsNullable(this.comparativeExperimentId, queryExampleSchemaWithRuns.comparativeExperimentId) &&
        equalsNullable(this.sortParams, queryExampleSchemaWithRuns.sortParams) &&
        equalsNullable(this.filters, queryExampleSchemaWithRuns.filters);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessionIds, offset, limit, preview, hashCodeNullable(format), hashCodeNullable(comparativeExperimentId), hashCodeNullable(sortParams), hashCodeNullable(filters));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryExampleSchemaWithRuns {\n");
    sb.append("    sessionIds: ").append(toIndentedString(sessionIds)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    preview: ").append(toIndentedString(preview)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    comparativeExperimentId: ").append(toIndentedString(comparativeExperimentId)).append("\n");
    sb.append("    sortParams: ").append(toIndentedString(sortParams)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `session_ids` to the URL query string
    if (getSessionIds() != null) {
      for (int i = 0; i < getSessionIds().size(); i++) {
        if (getSessionIds().get(i) != null) {
          joiner.add(String.format("%ssession_ids%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getSessionIds().get(i)))));
        }
      }
    }

    // add `offset` to the URL query string
    if (getOffset() != null) {
      joiner.add(String.format("%soffset%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOffset()))));
    }

    // add `limit` to the URL query string
    if (getLimit() != null) {
      joiner.add(String.format("%slimit%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLimit()))));
    }

    // add `preview` to the URL query string
    if (getPreview() != null) {
      joiner.add(String.format("%spreview%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPreview()))));
    }

    // add `format` to the URL query string
    if (getFormat() != null) {
      joiner.add(String.format("%sformat%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFormat()))));
    }

    // add `comparative_experiment_id` to the URL query string
    if (getComparativeExperimentId() != null) {
      joiner.add(String.format("%scomparative_experiment_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getComparativeExperimentId()))));
    }

    // add `sort_params` to the URL query string
    if (getSortParams() != null) {
      joiner.add(getSortParams().toUrlQueryString(prefix + "sort_params" + suffix));
    }

    // add `filters` to the URL query string
    if (getFilters() != null) {
      for (String _key : getFilters().keySet()) {
        joiner.add(String.format("%sfilters%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getFilters().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getFilters().get(_key)))));
      }
    }

    return joiner.toString();
  }

    public static class Builder {

    private QueryExampleSchemaWithRuns instance;

    public Builder() {
      this(new QueryExampleSchemaWithRuns());
    }

    protected Builder(QueryExampleSchemaWithRuns instance) {
      this.instance = instance;
    }

    public QueryExampleSchemaWithRuns.Builder sessionIds(List<UUID> sessionIds) {
      this.instance.sessionIds = sessionIds;
      return this;
    }
    public QueryExampleSchemaWithRuns.Builder offset(Integer offset) {
      this.instance.offset = offset;
      return this;
    }
    public QueryExampleSchemaWithRuns.Builder limit(Integer limit) {
      this.instance.limit = limit;
      return this;
    }
    public QueryExampleSchemaWithRuns.Builder preview(Boolean preview) {
      this.instance.preview = preview;
      return this;
    }
    public QueryExampleSchemaWithRuns.Builder format(FormatEnum format) {
      this.instance.format = JsonNullable.<FormatEnum>of(format);
      return this;
    }
    public QueryExampleSchemaWithRuns.Builder format(JsonNullable<FormatEnum> format) {
      this.instance.format = format;
      return this;
    }
    public QueryExampleSchemaWithRuns.Builder comparativeExperimentId(UUID comparativeExperimentId) {
      this.instance.comparativeExperimentId = JsonNullable.<UUID>of(comparativeExperimentId);
      return this;
    }
    public QueryExampleSchemaWithRuns.Builder comparativeExperimentId(JsonNullable<UUID> comparativeExperimentId) {
      this.instance.comparativeExperimentId = comparativeExperimentId;
      return this;
    }
    public QueryExampleSchemaWithRuns.Builder sortParams(SortParamsForRunsComparisonView sortParams) {
      this.instance.sortParams = JsonNullable.<SortParamsForRunsComparisonView>of(sortParams);
      return this;
    }
    public QueryExampleSchemaWithRuns.Builder sortParams(JsonNullable<SortParamsForRunsComparisonView> sortParams) {
      this.instance.sortParams = sortParams;
      return this;
    }
    public QueryExampleSchemaWithRuns.Builder filters(Map<String, List<String>> filters) {
      this.instance.filters = JsonNullable.<Map<String, List<String>>>of(filters);
      return this;
    }
    public QueryExampleSchemaWithRuns.Builder filters(JsonNullable<Map<String, List<String>>> filters) {
      this.instance.filters = filters;
      return this;
    }


    /**
    * returns a built QueryExampleSchemaWithRuns instance.
    *
    * The builder is not reusable.
    */
    public QueryExampleSchemaWithRuns build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static QueryExampleSchemaWithRuns.Builder builder() {
    return new QueryExampleSchemaWithRuns.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public QueryExampleSchemaWithRuns.Builder toBuilder() {
    return new QueryExampleSchemaWithRuns.Builder()
      .sessionIds(getSessionIds())
      .offset(getOffset())
      .limit(getLimit())
      .preview(getPreview())
      .format(getFormat())
      .comparativeExperimentId(getComparativeExperimentId())
      .sortParams(getSortParams())
      .filters(getFilters());
  }

}

