/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.BulkExportDestinationS3Config;
import org.bsc.langgraph4j.langsmith.gen.model.BulkExportDestinationType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * BulkExportDestination
 */
@JsonPropertyOrder({
  BulkExportDestination.JSON_PROPERTY_DESTINATION_TYPE,
  BulkExportDestination.JSON_PROPERTY_DISPLAY_NAME,
  BulkExportDestination.JSON_PROPERTY_CONFIG,
  BulkExportDestination.JSON_PROPERTY_ID,
  BulkExportDestination.JSON_PROPERTY_TENANT_ID,
  BulkExportDestination.JSON_PROPERTY_CREATED_AT,
  BulkExportDestination.JSON_PROPERTY_UPDATED_AT,
  BulkExportDestination.JSON_PROPERTY_CREDENTIALS_KEYS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class BulkExportDestination {
  public static final String JSON_PROPERTY_DESTINATION_TYPE = "destination_type";
  @javax.annotation.Nullable
  private BulkExportDestinationType destinationType;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  @javax.annotation.Nonnull
  private String displayName;

  public static final String JSON_PROPERTY_CONFIG = "config";
  @javax.annotation.Nonnull
  private BulkExportDestinationS3Config config;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_TENANT_ID = "tenant_id";
  @javax.annotation.Nonnull
  private UUID tenantId;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @javax.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  @javax.annotation.Nonnull
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_CREDENTIALS_KEYS = "credentials_keys";
  @javax.annotation.Nonnull
  private List<String> credentialsKeys = new ArrayList<>();

  public BulkExportDestination() { 
  }

  public BulkExportDestination destinationType(@javax.annotation.Nullable BulkExportDestinationType destinationType) {
    this.destinationType = destinationType;
    return this;
  }

  /**
   * Get destinationType
   * @return destinationType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESTINATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BulkExportDestinationType getDestinationType() {
    return destinationType;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestinationType(@javax.annotation.Nullable BulkExportDestinationType destinationType) {
    this.destinationType = destinationType;
  }


  public BulkExportDestination displayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
  }


  public BulkExportDestination config(@javax.annotation.Nonnull BulkExportDestinationS3Config config) {
    this.config = config;
    return this;
  }

  /**
   * Get config
   * @return config
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public BulkExportDestinationS3Config getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfig(@javax.annotation.Nonnull BulkExportDestinationS3Config config) {
    this.config = config;
  }


  public BulkExportDestination id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public BulkExportDestination tenantId(@javax.annotation.Nonnull UUID tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenantId(@javax.annotation.Nonnull UUID tenantId) {
    this.tenantId = tenantId;
  }


  public BulkExportDestination createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public BulkExportDestination updatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public BulkExportDestination credentialsKeys(@javax.annotation.Nonnull List<String> credentialsKeys) {
    this.credentialsKeys = credentialsKeys;
    return this;
  }

  public BulkExportDestination addCredentialsKeysItem(String credentialsKeysItem) {
    if (this.credentialsKeys == null) {
      this.credentialsKeys = new ArrayList<>();
    }
    this.credentialsKeys.add(credentialsKeysItem);
    return this;
  }

  /**
   * Get credentialsKeys
   * @return credentialsKeys
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREDENTIALS_KEYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<String> getCredentialsKeys() {
    return credentialsKeys;
  }


  @JsonProperty(JSON_PROPERTY_CREDENTIALS_KEYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCredentialsKeys(@javax.annotation.Nonnull List<String> credentialsKeys) {
    this.credentialsKeys = credentialsKeys;
  }


  /**
   * Return true if this BulkExportDestination object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkExportDestination bulkExportDestination = (BulkExportDestination) o;
    return Objects.equals(this.destinationType, bulkExportDestination.destinationType) &&
        Objects.equals(this.displayName, bulkExportDestination.displayName) &&
        Objects.equals(this.config, bulkExportDestination.config) &&
        Objects.equals(this.id, bulkExportDestination.id) &&
        Objects.equals(this.tenantId, bulkExportDestination.tenantId) &&
        Objects.equals(this.createdAt, bulkExportDestination.createdAt) &&
        Objects.equals(this.updatedAt, bulkExportDestination.updatedAt) &&
        Objects.equals(this.credentialsKeys, bulkExportDestination.credentialsKeys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationType, displayName, config, id, tenantId, createdAt, updatedAt, credentialsKeys);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkExportDestination {\n");
    sb.append("    destinationType: ").append(toIndentedString(destinationType)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    credentialsKeys: ").append(toIndentedString(credentialsKeys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `destination_type` to the URL query string
    if (getDestinationType() != null) {
      joiner.add(String.format("%sdestination_type%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDestinationType()))));
    }

    // add `display_name` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sdisplay_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDisplayName()))));
    }

    // add `config` to the URL query string
    if (getConfig() != null) {
      joiner.add(getConfig().toUrlQueryString(prefix + "config" + suffix));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `tenant_id` to the URL query string
    if (getTenantId() != null) {
      joiner.add(String.format("%stenant_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTenantId()))));
    }

    // add `created_at` to the URL query string
    if (getCreatedAt() != null) {
      joiner.add(String.format("%screated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
    }

    // add `updated_at` to the URL query string
    if (getUpdatedAt() != null) {
      joiner.add(String.format("%supdated_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUpdatedAt()))));
    }

    // add `credentials_keys` to the URL query string
    if (getCredentialsKeys() != null) {
      for (int i = 0; i < getCredentialsKeys().size(); i++) {
        joiner.add(String.format("%scredentials_keys%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getCredentialsKeys().get(i)))));
      }
    }

    return joiner.toString();
  }

    public static class Builder {

    private BulkExportDestination instance;

    public Builder() {
      this(new BulkExportDestination());
    }

    protected Builder(BulkExportDestination instance) {
      this.instance = instance;
    }

    public BulkExportDestination.Builder destinationType(BulkExportDestinationType destinationType) {
      this.instance.destinationType = destinationType;
      return this;
    }
    public BulkExportDestination.Builder displayName(String displayName) {
      this.instance.displayName = displayName;
      return this;
    }
    public BulkExportDestination.Builder config(BulkExportDestinationS3Config config) {
      this.instance.config = config;
      return this;
    }
    public BulkExportDestination.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public BulkExportDestination.Builder tenantId(UUID tenantId) {
      this.instance.tenantId = tenantId;
      return this;
    }
    public BulkExportDestination.Builder createdAt(OffsetDateTime createdAt) {
      this.instance.createdAt = createdAt;
      return this;
    }
    public BulkExportDestination.Builder updatedAt(OffsetDateTime updatedAt) {
      this.instance.updatedAt = updatedAt;
      return this;
    }
    public BulkExportDestination.Builder credentialsKeys(List<String> credentialsKeys) {
      this.instance.credentialsKeys = credentialsKeys;
      return this;
    }


    /**
    * returns a built BulkExportDestination instance.
    *
    * The builder is not reusable.
    */
    public BulkExportDestination build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static BulkExportDestination.Builder builder() {
    return new BulkExportDestination.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public BulkExportDestination.Builder toBuilder() {
    return new BulkExportDestination.Builder()
      .destinationType(getDestinationType())
      .displayName(getDisplayName())
      .config(getConfig())
      .id(getId())
      .tenantId(getTenantId())
      .createdAt(getCreatedAt())
      .updatedAt(getUpdatedAt())
      .credentialsKeys(getCredentialsKeys());
  }

}

