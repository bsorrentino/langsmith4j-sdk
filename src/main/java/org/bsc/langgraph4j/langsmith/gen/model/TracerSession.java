/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.TraceTier;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * TracerSession schema.
 */
@JsonPropertyOrder({
  TracerSession.JSON_PROPERTY_START_TIME,
  TracerSession.JSON_PROPERTY_END_TIME,
  TracerSession.JSON_PROPERTY_EXTRA,
  TracerSession.JSON_PROPERTY_NAME,
  TracerSession.JSON_PROPERTY_DESCRIPTION,
  TracerSession.JSON_PROPERTY_DEFAULT_DATASET_ID,
  TracerSession.JSON_PROPERTY_REFERENCE_DATASET_ID,
  TracerSession.JSON_PROPERTY_TRACE_TIER,
  TracerSession.JSON_PROPERTY_ID,
  TracerSession.JSON_PROPERTY_RUN_COUNT,
  TracerSession.JSON_PROPERTY_LATENCY_P50,
  TracerSession.JSON_PROPERTY_LATENCY_P99,
  TracerSession.JSON_PROPERTY_FIRST_TOKEN_P50,
  TracerSession.JSON_PROPERTY_FIRST_TOKEN_P99,
  TracerSession.JSON_PROPERTY_TOTAL_TOKENS,
  TracerSession.JSON_PROPERTY_PROMPT_TOKENS,
  TracerSession.JSON_PROPERTY_COMPLETION_TOKENS,
  TracerSession.JSON_PROPERTY_TOTAL_COST,
  TracerSession.JSON_PROPERTY_PROMPT_COST,
  TracerSession.JSON_PROPERTY_COMPLETION_COST,
  TracerSession.JSON_PROPERTY_TENANT_ID,
  TracerSession.JSON_PROPERTY_LAST_RUN_START_TIME,
  TracerSession.JSON_PROPERTY_LAST_RUN_START_TIME_LIVE,
  TracerSession.JSON_PROPERTY_FEEDBACK_STATS,
  TracerSession.JSON_PROPERTY_SESSION_FEEDBACK_STATS,
  TracerSession.JSON_PROPERTY_RUN_FACETS,
  TracerSession.JSON_PROPERTY_ERROR_RATE,
  TracerSession.JSON_PROPERTY_STREAMING_RATE,
  TracerSession.JSON_PROPERTY_TEST_RUN_NUMBER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class TracerSession {
  public static final String JSON_PROPERTY_START_TIME = "start_time";
  @javax.annotation.Nullable
  private OffsetDateTime startTime;

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  private JsonNullable<OffsetDateTime> endTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_EXTRA = "extra";
  private JsonNullable<Object> extra = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DEFAULT_DATASET_ID = "default_dataset_id";
  private JsonNullable<UUID> defaultDatasetId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_REFERENCE_DATASET_ID = "reference_dataset_id";
  private JsonNullable<UUID> referenceDatasetId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TRACE_TIER = "trace_tier";
  private JsonNullable<TraceTier> traceTier = JsonNullable.<TraceTier>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_RUN_COUNT = "run_count";
  private JsonNullable<Integer> runCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_LATENCY_P50 = "latency_p50";
  private JsonNullable<BigDecimal> latencyP50 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_LATENCY_P99 = "latency_p99";
  private JsonNullable<BigDecimal> latencyP99 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_FIRST_TOKEN_P50 = "first_token_p50";
  private JsonNullable<BigDecimal> firstTokenP50 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_FIRST_TOKEN_P99 = "first_token_p99";
  private JsonNullable<BigDecimal> firstTokenP99 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_TOTAL_TOKENS = "total_tokens";
  private JsonNullable<Integer> totalTokens = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PROMPT_TOKENS = "prompt_tokens";
  private JsonNullable<Integer> promptTokens = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_COMPLETION_TOKENS = "completion_tokens";
  private JsonNullable<Integer> completionTokens = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_TOTAL_COST = "total_cost";
  private JsonNullable<String> totalCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROMPT_COST = "prompt_cost";
  private JsonNullable<String> promptCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMPLETION_COST = "completion_cost";
  private JsonNullable<String> completionCost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TENANT_ID = "tenant_id";
  @javax.annotation.Nonnull
  private UUID tenantId;

  public static final String JSON_PROPERTY_LAST_RUN_START_TIME = "last_run_start_time";
  private JsonNullable<OffsetDateTime> lastRunStartTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_LAST_RUN_START_TIME_LIVE = "last_run_start_time_live";
  private JsonNullable<OffsetDateTime> lastRunStartTimeLive = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_FEEDBACK_STATS = "feedback_stats";
  private JsonNullable<Object> feedbackStats = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_SESSION_FEEDBACK_STATS = "session_feedback_stats";
  private JsonNullable<Object> sessionFeedbackStats = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_RUN_FACETS = "run_facets";
  private JsonNullable<List<Object>> runFacets = JsonNullable.<List<Object>>undefined();

  public static final String JSON_PROPERTY_ERROR_RATE = "error_rate";
  private JsonNullable<BigDecimal> errorRate = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_STREAMING_RATE = "streaming_rate";
  private JsonNullable<BigDecimal> streamingRate = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_TEST_RUN_NUMBER = "test_run_number";
  private JsonNullable<Integer> testRunNumber = JsonNullable.<Integer>undefined();

  public TracerSession() { 
  }

  public TracerSession startTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(@javax.annotation.Nullable OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public TracerSession endTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getEndTime() {
        return endTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEndTime_JsonNullable() {
    return endTime;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME)
  public void setEndTime_JsonNullable(JsonNullable<OffsetDateTime> endTime) {
    this.endTime = endTime;
  }

  public void setEndTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
  }


  public TracerSession extra(@javax.annotation.Nullable Object extra) {
    this.extra = JsonNullable.<Object>of(extra);
    return this;
  }

  /**
   * Get extra
   * @return extra
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getExtra() {
        return extra.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getExtra_JsonNullable() {
    return extra;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTRA)
  public void setExtra_JsonNullable(JsonNullable<Object> extra) {
    this.extra = extra;
  }

  public void setExtra(@javax.annotation.Nullable Object extra) {
    this.extra = JsonNullable.<Object>of(extra);
  }


  public TracerSession name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public TracerSession description(@javax.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public TracerSession defaultDatasetId(@javax.annotation.Nullable UUID defaultDatasetId) {
    this.defaultDatasetId = JsonNullable.<UUID>of(defaultDatasetId);
    return this;
  }

  /**
   * Get defaultDatasetId
   * @return defaultDatasetId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getDefaultDatasetId() {
        return defaultDatasetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEFAULT_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getDefaultDatasetId_JsonNullable() {
    return defaultDatasetId;
  }
  
  @JsonProperty(JSON_PROPERTY_DEFAULT_DATASET_ID)
  public void setDefaultDatasetId_JsonNullable(JsonNullable<UUID> defaultDatasetId) {
    this.defaultDatasetId = defaultDatasetId;
  }

  public void setDefaultDatasetId(@javax.annotation.Nullable UUID defaultDatasetId) {
    this.defaultDatasetId = JsonNullable.<UUID>of(defaultDatasetId);
  }


  public TracerSession referenceDatasetId(@javax.annotation.Nullable UUID referenceDatasetId) {
    this.referenceDatasetId = JsonNullable.<UUID>of(referenceDatasetId);
    return this;
  }

  /**
   * Get referenceDatasetId
   * @return referenceDatasetId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getReferenceDatasetId() {
        return referenceDatasetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFERENCE_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getReferenceDatasetId_JsonNullable() {
    return referenceDatasetId;
  }
  
  @JsonProperty(JSON_PROPERTY_REFERENCE_DATASET_ID)
  public void setReferenceDatasetId_JsonNullable(JsonNullable<UUID> referenceDatasetId) {
    this.referenceDatasetId = referenceDatasetId;
  }

  public void setReferenceDatasetId(@javax.annotation.Nullable UUID referenceDatasetId) {
    this.referenceDatasetId = JsonNullable.<UUID>of(referenceDatasetId);
  }


  public TracerSession traceTier(@javax.annotation.Nullable TraceTier traceTier) {
    this.traceTier = JsonNullable.<TraceTier>of(traceTier);
    return this;
  }

  /**
   * Get traceTier
   * @return traceTier
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public TraceTier getTraceTier() {
        return traceTier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRACE_TIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TraceTier> getTraceTier_JsonNullable() {
    return traceTier;
  }
  
  @JsonProperty(JSON_PROPERTY_TRACE_TIER)
  public void setTraceTier_JsonNullable(JsonNullable<TraceTier> traceTier) {
    this.traceTier = traceTier;
  }

  public void setTraceTier(@javax.annotation.Nullable TraceTier traceTier) {
    this.traceTier = JsonNullable.<TraceTier>of(traceTier);
  }


  public TracerSession id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public TracerSession runCount(@javax.annotation.Nullable Integer runCount) {
    this.runCount = JsonNullable.<Integer>of(runCount);
    return this;
  }

  /**
   * Get runCount
   * @return runCount
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getRunCount() {
        return runCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RUN_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getRunCount_JsonNullable() {
    return runCount;
  }
  
  @JsonProperty(JSON_PROPERTY_RUN_COUNT)
  public void setRunCount_JsonNullable(JsonNullable<Integer> runCount) {
    this.runCount = runCount;
  }

  public void setRunCount(@javax.annotation.Nullable Integer runCount) {
    this.runCount = JsonNullable.<Integer>of(runCount);
  }


  public TracerSession latencyP50(@javax.annotation.Nullable BigDecimal latencyP50) {
    this.latencyP50 = JsonNullable.<BigDecimal>of(latencyP50);
    return this;
  }

  /**
   * Get latencyP50
   * @return latencyP50
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public BigDecimal getLatencyP50() {
        return latencyP50.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LATENCY_P50)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getLatencyP50_JsonNullable() {
    return latencyP50;
  }
  
  @JsonProperty(JSON_PROPERTY_LATENCY_P50)
  public void setLatencyP50_JsonNullable(JsonNullable<BigDecimal> latencyP50) {
    this.latencyP50 = latencyP50;
  }

  public void setLatencyP50(@javax.annotation.Nullable BigDecimal latencyP50) {
    this.latencyP50 = JsonNullable.<BigDecimal>of(latencyP50);
  }


  public TracerSession latencyP99(@javax.annotation.Nullable BigDecimal latencyP99) {
    this.latencyP99 = JsonNullable.<BigDecimal>of(latencyP99);
    return this;
  }

  /**
   * Get latencyP99
   * @return latencyP99
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public BigDecimal getLatencyP99() {
        return latencyP99.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LATENCY_P99)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getLatencyP99_JsonNullable() {
    return latencyP99;
  }
  
  @JsonProperty(JSON_PROPERTY_LATENCY_P99)
  public void setLatencyP99_JsonNullable(JsonNullable<BigDecimal> latencyP99) {
    this.latencyP99 = latencyP99;
  }

  public void setLatencyP99(@javax.annotation.Nullable BigDecimal latencyP99) {
    this.latencyP99 = JsonNullable.<BigDecimal>of(latencyP99);
  }


  public TracerSession firstTokenP50(@javax.annotation.Nullable BigDecimal firstTokenP50) {
    this.firstTokenP50 = JsonNullable.<BigDecimal>of(firstTokenP50);
    return this;
  }

  /**
   * Get firstTokenP50
   * @return firstTokenP50
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public BigDecimal getFirstTokenP50() {
        return firstTokenP50.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRST_TOKEN_P50)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getFirstTokenP50_JsonNullable() {
    return firstTokenP50;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRST_TOKEN_P50)
  public void setFirstTokenP50_JsonNullable(JsonNullable<BigDecimal> firstTokenP50) {
    this.firstTokenP50 = firstTokenP50;
  }

  public void setFirstTokenP50(@javax.annotation.Nullable BigDecimal firstTokenP50) {
    this.firstTokenP50 = JsonNullable.<BigDecimal>of(firstTokenP50);
  }


  public TracerSession firstTokenP99(@javax.annotation.Nullable BigDecimal firstTokenP99) {
    this.firstTokenP99 = JsonNullable.<BigDecimal>of(firstTokenP99);
    return this;
  }

  /**
   * Get firstTokenP99
   * @return firstTokenP99
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public BigDecimal getFirstTokenP99() {
        return firstTokenP99.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRST_TOKEN_P99)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getFirstTokenP99_JsonNullable() {
    return firstTokenP99;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRST_TOKEN_P99)
  public void setFirstTokenP99_JsonNullable(JsonNullable<BigDecimal> firstTokenP99) {
    this.firstTokenP99 = firstTokenP99;
  }

  public void setFirstTokenP99(@javax.annotation.Nullable BigDecimal firstTokenP99) {
    this.firstTokenP99 = JsonNullable.<BigDecimal>of(firstTokenP99);
  }


  public TracerSession totalTokens(@javax.annotation.Nullable Integer totalTokens) {
    this.totalTokens = JsonNullable.<Integer>of(totalTokens);
    return this;
  }

  /**
   * Get totalTokens
   * @return totalTokens
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getTotalTokens() {
        return totalTokens.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTotalTokens_JsonNullable() {
    return totalTokens;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_TOKENS)
  public void setTotalTokens_JsonNullable(JsonNullable<Integer> totalTokens) {
    this.totalTokens = totalTokens;
  }

  public void setTotalTokens(@javax.annotation.Nullable Integer totalTokens) {
    this.totalTokens = JsonNullable.<Integer>of(totalTokens);
  }


  public TracerSession promptTokens(@javax.annotation.Nullable Integer promptTokens) {
    this.promptTokens = JsonNullable.<Integer>of(promptTokens);
    return this;
  }

  /**
   * Get promptTokens
   * @return promptTokens
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getPromptTokens() {
        return promptTokens.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROMPT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getPromptTokens_JsonNullable() {
    return promptTokens;
  }
  
  @JsonProperty(JSON_PROPERTY_PROMPT_TOKENS)
  public void setPromptTokens_JsonNullable(JsonNullable<Integer> promptTokens) {
    this.promptTokens = promptTokens;
  }

  public void setPromptTokens(@javax.annotation.Nullable Integer promptTokens) {
    this.promptTokens = JsonNullable.<Integer>of(promptTokens);
  }


  public TracerSession completionTokens(@javax.annotation.Nullable Integer completionTokens) {
    this.completionTokens = JsonNullable.<Integer>of(completionTokens);
    return this;
  }

  /**
   * Get completionTokens
   * @return completionTokens
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getCompletionTokens() {
        return completionTokens.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getCompletionTokens_JsonNullable() {
    return completionTokens;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETION_TOKENS)
  public void setCompletionTokens_JsonNullable(JsonNullable<Integer> completionTokens) {
    this.completionTokens = completionTokens;
  }

  public void setCompletionTokens(@javax.annotation.Nullable Integer completionTokens) {
    this.completionTokens = JsonNullable.<Integer>of(completionTokens);
  }


  public TracerSession totalCost(@javax.annotation.Nullable String totalCost) {
    this.totalCost = JsonNullable.<String>of(totalCost);
    return this;
  }

  /**
   * Get totalCost
   * @return totalCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTotalCost() {
        return totalCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTotalCost_JsonNullable() {
    return totalCost;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_COST)
  public void setTotalCost_JsonNullable(JsonNullable<String> totalCost) {
    this.totalCost = totalCost;
  }

  public void setTotalCost(@javax.annotation.Nullable String totalCost) {
    this.totalCost = JsonNullable.<String>of(totalCost);
  }


  public TracerSession promptCost(@javax.annotation.Nullable String promptCost) {
    this.promptCost = JsonNullable.<String>of(promptCost);
    return this;
  }

  /**
   * Get promptCost
   * @return promptCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPromptCost() {
        return promptCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROMPT_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPromptCost_JsonNullable() {
    return promptCost;
  }
  
  @JsonProperty(JSON_PROPERTY_PROMPT_COST)
  public void setPromptCost_JsonNullable(JsonNullable<String> promptCost) {
    this.promptCost = promptCost;
  }

  public void setPromptCost(@javax.annotation.Nullable String promptCost) {
    this.promptCost = JsonNullable.<String>of(promptCost);
  }


  public TracerSession completionCost(@javax.annotation.Nullable String completionCost) {
    this.completionCost = JsonNullable.<String>of(completionCost);
    return this;
  }

  /**
   * Get completionCost
   * @return completionCost
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCompletionCost() {
        return completionCost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETION_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCompletionCost_JsonNullable() {
    return completionCost;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETION_COST)
  public void setCompletionCost_JsonNullable(JsonNullable<String> completionCost) {
    this.completionCost = completionCost;
  }

  public void setCompletionCost(@javax.annotation.Nullable String completionCost) {
    this.completionCost = JsonNullable.<String>of(completionCost);
  }


  public TracerSession tenantId(@javax.annotation.Nonnull UUID tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenantId(@javax.annotation.Nonnull UUID tenantId) {
    this.tenantId = tenantId;
  }


  public TracerSession lastRunStartTime(@javax.annotation.Nullable OffsetDateTime lastRunStartTime) {
    this.lastRunStartTime = JsonNullable.<OffsetDateTime>of(lastRunStartTime);
    return this;
  }

  /**
   * Get lastRunStartTime
   * @return lastRunStartTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getLastRunStartTime() {
        return lastRunStartTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_RUN_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getLastRunStartTime_JsonNullable() {
    return lastRunStartTime;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_RUN_START_TIME)
  public void setLastRunStartTime_JsonNullable(JsonNullable<OffsetDateTime> lastRunStartTime) {
    this.lastRunStartTime = lastRunStartTime;
  }

  public void setLastRunStartTime(@javax.annotation.Nullable OffsetDateTime lastRunStartTime) {
    this.lastRunStartTime = JsonNullable.<OffsetDateTime>of(lastRunStartTime);
  }


  public TracerSession lastRunStartTimeLive(@javax.annotation.Nullable OffsetDateTime lastRunStartTimeLive) {
    this.lastRunStartTimeLive = JsonNullable.<OffsetDateTime>of(lastRunStartTimeLive);
    return this;
  }

  /**
   * Get lastRunStartTimeLive
   * @return lastRunStartTimeLive
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getLastRunStartTimeLive() {
        return lastRunStartTimeLive.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_RUN_START_TIME_LIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getLastRunStartTimeLive_JsonNullable() {
    return lastRunStartTimeLive;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_RUN_START_TIME_LIVE)
  public void setLastRunStartTimeLive_JsonNullable(JsonNullable<OffsetDateTime> lastRunStartTimeLive) {
    this.lastRunStartTimeLive = lastRunStartTimeLive;
  }

  public void setLastRunStartTimeLive(@javax.annotation.Nullable OffsetDateTime lastRunStartTimeLive) {
    this.lastRunStartTimeLive = JsonNullable.<OffsetDateTime>of(lastRunStartTimeLive);
  }


  public TracerSession feedbackStats(@javax.annotation.Nullable Object feedbackStats) {
    this.feedbackStats = JsonNullable.<Object>of(feedbackStats);
    return this;
  }

  /**
   * Get feedbackStats
   * @return feedbackStats
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getFeedbackStats() {
        return feedbackStats.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FEEDBACK_STATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFeedbackStats_JsonNullable() {
    return feedbackStats;
  }
  
  @JsonProperty(JSON_PROPERTY_FEEDBACK_STATS)
  public void setFeedbackStats_JsonNullable(JsonNullable<Object> feedbackStats) {
    this.feedbackStats = feedbackStats;
  }

  public void setFeedbackStats(@javax.annotation.Nullable Object feedbackStats) {
    this.feedbackStats = JsonNullable.<Object>of(feedbackStats);
  }


  public TracerSession sessionFeedbackStats(@javax.annotation.Nullable Object sessionFeedbackStats) {
    this.sessionFeedbackStats = JsonNullable.<Object>of(sessionFeedbackStats);
    return this;
  }

  /**
   * Get sessionFeedbackStats
   * @return sessionFeedbackStats
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getSessionFeedbackStats() {
        return sessionFeedbackStats.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_FEEDBACK_STATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSessionFeedbackStats_JsonNullable() {
    return sessionFeedbackStats;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_FEEDBACK_STATS)
  public void setSessionFeedbackStats_JsonNullable(JsonNullable<Object> sessionFeedbackStats) {
    this.sessionFeedbackStats = sessionFeedbackStats;
  }

  public void setSessionFeedbackStats(@javax.annotation.Nullable Object sessionFeedbackStats) {
    this.sessionFeedbackStats = JsonNullable.<Object>of(sessionFeedbackStats);
  }


  public TracerSession runFacets(@javax.annotation.Nullable List<Object> runFacets) {
    this.runFacets = JsonNullable.<List<Object>>of(runFacets);
    return this;
  }

  public TracerSession addRunFacetsItem(Object runFacetsItem) {
    if (this.runFacets == null || !this.runFacets.isPresent()) {
      this.runFacets = JsonNullable.<List<Object>>of(new ArrayList<>());
    }
    try {
      this.runFacets.get().add(runFacetsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get runFacets
   * @return runFacets
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<Object> getRunFacets() {
        return runFacets.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RUN_FACETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Object>> getRunFacets_JsonNullable() {
    return runFacets;
  }
  
  @JsonProperty(JSON_PROPERTY_RUN_FACETS)
  public void setRunFacets_JsonNullable(JsonNullable<List<Object>> runFacets) {
    this.runFacets = runFacets;
  }

  public void setRunFacets(@javax.annotation.Nullable List<Object> runFacets) {
    this.runFacets = JsonNullable.<List<Object>>of(runFacets);
  }


  public TracerSession errorRate(@javax.annotation.Nullable BigDecimal errorRate) {
    this.errorRate = JsonNullable.<BigDecimal>of(errorRate);
    return this;
  }

  /**
   * Get errorRate
   * @return errorRate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public BigDecimal getErrorRate() {
        return errorRate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getErrorRate_JsonNullable() {
    return errorRate;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR_RATE)
  public void setErrorRate_JsonNullable(JsonNullable<BigDecimal> errorRate) {
    this.errorRate = errorRate;
  }

  public void setErrorRate(@javax.annotation.Nullable BigDecimal errorRate) {
    this.errorRate = JsonNullable.<BigDecimal>of(errorRate);
  }


  public TracerSession streamingRate(@javax.annotation.Nullable BigDecimal streamingRate) {
    this.streamingRate = JsonNullable.<BigDecimal>of(streamingRate);
    return this;
  }

  /**
   * Get streamingRate
   * @return streamingRate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public BigDecimal getStreamingRate() {
        return streamingRate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STREAMING_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getStreamingRate_JsonNullable() {
    return streamingRate;
  }
  
  @JsonProperty(JSON_PROPERTY_STREAMING_RATE)
  public void setStreamingRate_JsonNullable(JsonNullable<BigDecimal> streamingRate) {
    this.streamingRate = streamingRate;
  }

  public void setStreamingRate(@javax.annotation.Nullable BigDecimal streamingRate) {
    this.streamingRate = JsonNullable.<BigDecimal>of(streamingRate);
  }


  public TracerSession testRunNumber(@javax.annotation.Nullable Integer testRunNumber) {
    this.testRunNumber = JsonNullable.<Integer>of(testRunNumber);
    return this;
  }

  /**
   * Get testRunNumber
   * @return testRunNumber
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getTestRunNumber() {
        return testRunNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_RUN_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTestRunNumber_JsonNullable() {
    return testRunNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_RUN_NUMBER)
  public void setTestRunNumber_JsonNullable(JsonNullable<Integer> testRunNumber) {
    this.testRunNumber = testRunNumber;
  }

  public void setTestRunNumber(@javax.annotation.Nullable Integer testRunNumber) {
    this.testRunNumber = JsonNullable.<Integer>of(testRunNumber);
  }


  /**
   * Return true if this TracerSession object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TracerSession tracerSession = (TracerSession) o;
    return Objects.equals(this.startTime, tracerSession.startTime) &&
        equalsNullable(this.endTime, tracerSession.endTime) &&
        equalsNullable(this.extra, tracerSession.extra) &&
        Objects.equals(this.name, tracerSession.name) &&
        equalsNullable(this.description, tracerSession.description) &&
        equalsNullable(this.defaultDatasetId, tracerSession.defaultDatasetId) &&
        equalsNullable(this.referenceDatasetId, tracerSession.referenceDatasetId) &&
        equalsNullable(this.traceTier, tracerSession.traceTier) &&
        Objects.equals(this.id, tracerSession.id) &&
        equalsNullable(this.runCount, tracerSession.runCount) &&
        equalsNullable(this.latencyP50, tracerSession.latencyP50) &&
        equalsNullable(this.latencyP99, tracerSession.latencyP99) &&
        equalsNullable(this.firstTokenP50, tracerSession.firstTokenP50) &&
        equalsNullable(this.firstTokenP99, tracerSession.firstTokenP99) &&
        equalsNullable(this.totalTokens, tracerSession.totalTokens) &&
        equalsNullable(this.promptTokens, tracerSession.promptTokens) &&
        equalsNullable(this.completionTokens, tracerSession.completionTokens) &&
        equalsNullable(this.totalCost, tracerSession.totalCost) &&
        equalsNullable(this.promptCost, tracerSession.promptCost) &&
        equalsNullable(this.completionCost, tracerSession.completionCost) &&
        Objects.equals(this.tenantId, tracerSession.tenantId) &&
        equalsNullable(this.lastRunStartTime, tracerSession.lastRunStartTime) &&
        equalsNullable(this.lastRunStartTimeLive, tracerSession.lastRunStartTimeLive) &&
        equalsNullable(this.feedbackStats, tracerSession.feedbackStats) &&
        equalsNullable(this.sessionFeedbackStats, tracerSession.sessionFeedbackStats) &&
        equalsNullable(this.runFacets, tracerSession.runFacets) &&
        equalsNullable(this.errorRate, tracerSession.errorRate) &&
        equalsNullable(this.streamingRate, tracerSession.streamingRate) &&
        equalsNullable(this.testRunNumber, tracerSession.testRunNumber);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(startTime, hashCodeNullable(endTime), hashCodeNullable(extra), name, hashCodeNullable(description), hashCodeNullable(defaultDatasetId), hashCodeNullable(referenceDatasetId), hashCodeNullable(traceTier), id, hashCodeNullable(runCount), hashCodeNullable(latencyP50), hashCodeNullable(latencyP99), hashCodeNullable(firstTokenP50), hashCodeNullable(firstTokenP99), hashCodeNullable(totalTokens), hashCodeNullable(promptTokens), hashCodeNullable(completionTokens), hashCodeNullable(totalCost), hashCodeNullable(promptCost), hashCodeNullable(completionCost), tenantId, hashCodeNullable(lastRunStartTime), hashCodeNullable(lastRunStartTimeLive), hashCodeNullable(feedbackStats), hashCodeNullable(sessionFeedbackStats), hashCodeNullable(runFacets), hashCodeNullable(errorRate), hashCodeNullable(streamingRate), hashCodeNullable(testRunNumber));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TracerSession {\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    defaultDatasetId: ").append(toIndentedString(defaultDatasetId)).append("\n");
    sb.append("    referenceDatasetId: ").append(toIndentedString(referenceDatasetId)).append("\n");
    sb.append("    traceTier: ").append(toIndentedString(traceTier)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    runCount: ").append(toIndentedString(runCount)).append("\n");
    sb.append("    latencyP50: ").append(toIndentedString(latencyP50)).append("\n");
    sb.append("    latencyP99: ").append(toIndentedString(latencyP99)).append("\n");
    sb.append("    firstTokenP50: ").append(toIndentedString(firstTokenP50)).append("\n");
    sb.append("    firstTokenP99: ").append(toIndentedString(firstTokenP99)).append("\n");
    sb.append("    totalTokens: ").append(toIndentedString(totalTokens)).append("\n");
    sb.append("    promptTokens: ").append(toIndentedString(promptTokens)).append("\n");
    sb.append("    completionTokens: ").append(toIndentedString(completionTokens)).append("\n");
    sb.append("    totalCost: ").append(toIndentedString(totalCost)).append("\n");
    sb.append("    promptCost: ").append(toIndentedString(promptCost)).append("\n");
    sb.append("    completionCost: ").append(toIndentedString(completionCost)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    lastRunStartTime: ").append(toIndentedString(lastRunStartTime)).append("\n");
    sb.append("    lastRunStartTimeLive: ").append(toIndentedString(lastRunStartTimeLive)).append("\n");
    sb.append("    feedbackStats: ").append(toIndentedString(feedbackStats)).append("\n");
    sb.append("    sessionFeedbackStats: ").append(toIndentedString(sessionFeedbackStats)).append("\n");
    sb.append("    runFacets: ").append(toIndentedString(runFacets)).append("\n");
    sb.append("    errorRate: ").append(toIndentedString(errorRate)).append("\n");
    sb.append("    streamingRate: ").append(toIndentedString(streamingRate)).append("\n");
    sb.append("    testRunNumber: ").append(toIndentedString(testRunNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `start_time` to the URL query string
    if (getStartTime() != null) {
      joiner.add(String.format("%sstart_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStartTime()))));
    }

    // add `end_time` to the URL query string
    if (getEndTime() != null) {
      joiner.add(String.format("%send_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEndTime()))));
    }

    // add `extra` to the URL query string
    if (getExtra() != null) {
      joiner.add(String.format("%sextra%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExtra()))));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDescription()))));
    }

    // add `default_dataset_id` to the URL query string
    if (getDefaultDatasetId() != null) {
      joiner.add(String.format("%sdefault_dataset_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDefaultDatasetId()))));
    }

    // add `reference_dataset_id` to the URL query string
    if (getReferenceDatasetId() != null) {
      joiner.add(String.format("%sreference_dataset_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getReferenceDatasetId()))));
    }

    // add `trace_tier` to the URL query string
    if (getTraceTier() != null) {
      joiner.add(String.format("%strace_tier%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTraceTier()))));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `run_count` to the URL query string
    if (getRunCount() != null) {
      joiner.add(String.format("%srun_count%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRunCount()))));
    }

    // add `latency_p50` to the URL query string
    if (getLatencyP50() != null) {
      joiner.add(String.format("%slatency_p50%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLatencyP50()))));
    }

    // add `latency_p99` to the URL query string
    if (getLatencyP99() != null) {
      joiner.add(String.format("%slatency_p99%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLatencyP99()))));
    }

    // add `first_token_p50` to the URL query string
    if (getFirstTokenP50() != null) {
      joiner.add(String.format("%sfirst_token_p50%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFirstTokenP50()))));
    }

    // add `first_token_p99` to the URL query string
    if (getFirstTokenP99() != null) {
      joiner.add(String.format("%sfirst_token_p99%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFirstTokenP99()))));
    }

    // add `total_tokens` to the URL query string
    if (getTotalTokens() != null) {
      joiner.add(String.format("%stotal_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTotalTokens()))));
    }

    // add `prompt_tokens` to the URL query string
    if (getPromptTokens() != null) {
      joiner.add(String.format("%sprompt_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPromptTokens()))));
    }

    // add `completion_tokens` to the URL query string
    if (getCompletionTokens() != null) {
      joiner.add(String.format("%scompletion_tokens%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCompletionTokens()))));
    }

    // add `total_cost` to the URL query string
    if (getTotalCost() != null) {
      joiner.add(String.format("%stotal_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTotalCost()))));
    }

    // add `prompt_cost` to the URL query string
    if (getPromptCost() != null) {
      joiner.add(String.format("%sprompt_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPromptCost()))));
    }

    // add `completion_cost` to the URL query string
    if (getCompletionCost() != null) {
      joiner.add(String.format("%scompletion_cost%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCompletionCost()))));
    }

    // add `tenant_id` to the URL query string
    if (getTenantId() != null) {
      joiner.add(String.format("%stenant_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTenantId()))));
    }

    // add `last_run_start_time` to the URL query string
    if (getLastRunStartTime() != null) {
      joiner.add(String.format("%slast_run_start_time%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastRunStartTime()))));
    }

    // add `last_run_start_time_live` to the URL query string
    if (getLastRunStartTimeLive() != null) {
      joiner.add(String.format("%slast_run_start_time_live%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastRunStartTimeLive()))));
    }

    // add `feedback_stats` to the URL query string
    if (getFeedbackStats() != null) {
      joiner.add(String.format("%sfeedback_stats%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFeedbackStats()))));
    }

    // add `session_feedback_stats` to the URL query string
    if (getSessionFeedbackStats() != null) {
      joiner.add(String.format("%ssession_feedback_stats%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionFeedbackStats()))));
    }

    // add `run_facets` to the URL query string
    if (getRunFacets() != null) {
      for (int i = 0; i < getRunFacets().size(); i++) {
        joiner.add(String.format("%srun_facets%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getRunFacets().get(i)))));
      }
    }

    // add `error_rate` to the URL query string
    if (getErrorRate() != null) {
      joiner.add(String.format("%serror_rate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getErrorRate()))));
    }

    // add `streaming_rate` to the URL query string
    if (getStreamingRate() != null) {
      joiner.add(String.format("%sstreaming_rate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStreamingRate()))));
    }

    // add `test_run_number` to the URL query string
    if (getTestRunNumber() != null) {
      joiner.add(String.format("%stest_run_number%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTestRunNumber()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private TracerSession instance;

    public Builder() {
      this(new TracerSession());
    }

    protected Builder(TracerSession instance) {
      this.instance = instance;
    }

    public TracerSession.Builder startTime(OffsetDateTime startTime) {
      this.instance.startTime = startTime;
      return this;
    }
    public TracerSession.Builder endTime(OffsetDateTime endTime) {
      this.instance.endTime = JsonNullable.<OffsetDateTime>of(endTime);
      return this;
    }
    public TracerSession.Builder endTime(JsonNullable<OffsetDateTime> endTime) {
      this.instance.endTime = endTime;
      return this;
    }
    public TracerSession.Builder extra(Object extra) {
      this.instance.extra = JsonNullable.<Object>of(extra);
      return this;
    }
    public TracerSession.Builder extra(JsonNullable<Object> extra) {
      this.instance.extra = extra;
      return this;
    }
    public TracerSession.Builder name(String name) {
      this.instance.name = name;
      return this;
    }
    public TracerSession.Builder description(String description) {
      this.instance.description = JsonNullable.<String>of(description);
      return this;
    }
    public TracerSession.Builder description(JsonNullable<String> description) {
      this.instance.description = description;
      return this;
    }
    public TracerSession.Builder defaultDatasetId(UUID defaultDatasetId) {
      this.instance.defaultDatasetId = JsonNullable.<UUID>of(defaultDatasetId);
      return this;
    }
    public TracerSession.Builder defaultDatasetId(JsonNullable<UUID> defaultDatasetId) {
      this.instance.defaultDatasetId = defaultDatasetId;
      return this;
    }
    public TracerSession.Builder referenceDatasetId(UUID referenceDatasetId) {
      this.instance.referenceDatasetId = JsonNullable.<UUID>of(referenceDatasetId);
      return this;
    }
    public TracerSession.Builder referenceDatasetId(JsonNullable<UUID> referenceDatasetId) {
      this.instance.referenceDatasetId = referenceDatasetId;
      return this;
    }
    public TracerSession.Builder traceTier(TraceTier traceTier) {
      this.instance.traceTier = JsonNullable.<TraceTier>of(traceTier);
      return this;
    }
    public TracerSession.Builder traceTier(JsonNullable<TraceTier> traceTier) {
      this.instance.traceTier = traceTier;
      return this;
    }
    public TracerSession.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public TracerSession.Builder runCount(Integer runCount) {
      this.instance.runCount = JsonNullable.<Integer>of(runCount);
      return this;
    }
    public TracerSession.Builder runCount(JsonNullable<Integer> runCount) {
      this.instance.runCount = runCount;
      return this;
    }
    public TracerSession.Builder latencyP50(BigDecimal latencyP50) {
      this.instance.latencyP50 = JsonNullable.<BigDecimal>of(latencyP50);
      return this;
    }
    public TracerSession.Builder latencyP50(JsonNullable<BigDecimal> latencyP50) {
      this.instance.latencyP50 = latencyP50;
      return this;
    }
    public TracerSession.Builder latencyP99(BigDecimal latencyP99) {
      this.instance.latencyP99 = JsonNullable.<BigDecimal>of(latencyP99);
      return this;
    }
    public TracerSession.Builder latencyP99(JsonNullable<BigDecimal> latencyP99) {
      this.instance.latencyP99 = latencyP99;
      return this;
    }
    public TracerSession.Builder firstTokenP50(BigDecimal firstTokenP50) {
      this.instance.firstTokenP50 = JsonNullable.<BigDecimal>of(firstTokenP50);
      return this;
    }
    public TracerSession.Builder firstTokenP50(JsonNullable<BigDecimal> firstTokenP50) {
      this.instance.firstTokenP50 = firstTokenP50;
      return this;
    }
    public TracerSession.Builder firstTokenP99(BigDecimal firstTokenP99) {
      this.instance.firstTokenP99 = JsonNullable.<BigDecimal>of(firstTokenP99);
      return this;
    }
    public TracerSession.Builder firstTokenP99(JsonNullable<BigDecimal> firstTokenP99) {
      this.instance.firstTokenP99 = firstTokenP99;
      return this;
    }
    public TracerSession.Builder totalTokens(Integer totalTokens) {
      this.instance.totalTokens = JsonNullable.<Integer>of(totalTokens);
      return this;
    }
    public TracerSession.Builder totalTokens(JsonNullable<Integer> totalTokens) {
      this.instance.totalTokens = totalTokens;
      return this;
    }
    public TracerSession.Builder promptTokens(Integer promptTokens) {
      this.instance.promptTokens = JsonNullable.<Integer>of(promptTokens);
      return this;
    }
    public TracerSession.Builder promptTokens(JsonNullable<Integer> promptTokens) {
      this.instance.promptTokens = promptTokens;
      return this;
    }
    public TracerSession.Builder completionTokens(Integer completionTokens) {
      this.instance.completionTokens = JsonNullable.<Integer>of(completionTokens);
      return this;
    }
    public TracerSession.Builder completionTokens(JsonNullable<Integer> completionTokens) {
      this.instance.completionTokens = completionTokens;
      return this;
    }
    public TracerSession.Builder totalCost(String totalCost) {
      this.instance.totalCost = JsonNullable.<String>of(totalCost);
      return this;
    }
    public TracerSession.Builder totalCost(JsonNullable<String> totalCost) {
      this.instance.totalCost = totalCost;
      return this;
    }
    public TracerSession.Builder promptCost(String promptCost) {
      this.instance.promptCost = JsonNullable.<String>of(promptCost);
      return this;
    }
    public TracerSession.Builder promptCost(JsonNullable<String> promptCost) {
      this.instance.promptCost = promptCost;
      return this;
    }
    public TracerSession.Builder completionCost(String completionCost) {
      this.instance.completionCost = JsonNullable.<String>of(completionCost);
      return this;
    }
    public TracerSession.Builder completionCost(JsonNullable<String> completionCost) {
      this.instance.completionCost = completionCost;
      return this;
    }
    public TracerSession.Builder tenantId(UUID tenantId) {
      this.instance.tenantId = tenantId;
      return this;
    }
    public TracerSession.Builder lastRunStartTime(OffsetDateTime lastRunStartTime) {
      this.instance.lastRunStartTime = JsonNullable.<OffsetDateTime>of(lastRunStartTime);
      return this;
    }
    public TracerSession.Builder lastRunStartTime(JsonNullable<OffsetDateTime> lastRunStartTime) {
      this.instance.lastRunStartTime = lastRunStartTime;
      return this;
    }
    public TracerSession.Builder lastRunStartTimeLive(OffsetDateTime lastRunStartTimeLive) {
      this.instance.lastRunStartTimeLive = JsonNullable.<OffsetDateTime>of(lastRunStartTimeLive);
      return this;
    }
    public TracerSession.Builder lastRunStartTimeLive(JsonNullable<OffsetDateTime> lastRunStartTimeLive) {
      this.instance.lastRunStartTimeLive = lastRunStartTimeLive;
      return this;
    }
    public TracerSession.Builder feedbackStats(Object feedbackStats) {
      this.instance.feedbackStats = JsonNullable.<Object>of(feedbackStats);
      return this;
    }
    public TracerSession.Builder feedbackStats(JsonNullable<Object> feedbackStats) {
      this.instance.feedbackStats = feedbackStats;
      return this;
    }
    public TracerSession.Builder sessionFeedbackStats(Object sessionFeedbackStats) {
      this.instance.sessionFeedbackStats = JsonNullable.<Object>of(sessionFeedbackStats);
      return this;
    }
    public TracerSession.Builder sessionFeedbackStats(JsonNullable<Object> sessionFeedbackStats) {
      this.instance.sessionFeedbackStats = sessionFeedbackStats;
      return this;
    }
    public TracerSession.Builder runFacets(List<Object> runFacets) {
      this.instance.runFacets = JsonNullable.<List<Object>>of(runFacets);
      return this;
    }
    public TracerSession.Builder runFacets(JsonNullable<List<Object>> runFacets) {
      this.instance.runFacets = runFacets;
      return this;
    }
    public TracerSession.Builder errorRate(BigDecimal errorRate) {
      this.instance.errorRate = JsonNullable.<BigDecimal>of(errorRate);
      return this;
    }
    public TracerSession.Builder errorRate(JsonNullable<BigDecimal> errorRate) {
      this.instance.errorRate = errorRate;
      return this;
    }
    public TracerSession.Builder streamingRate(BigDecimal streamingRate) {
      this.instance.streamingRate = JsonNullable.<BigDecimal>of(streamingRate);
      return this;
    }
    public TracerSession.Builder streamingRate(JsonNullable<BigDecimal> streamingRate) {
      this.instance.streamingRate = streamingRate;
      return this;
    }
    public TracerSession.Builder testRunNumber(Integer testRunNumber) {
      this.instance.testRunNumber = JsonNullable.<Integer>of(testRunNumber);
      return this;
    }
    public TracerSession.Builder testRunNumber(JsonNullable<Integer> testRunNumber) {
      this.instance.testRunNumber = testRunNumber;
      return this;
    }


    /**
    * returns a built TracerSession instance.
    *
    * The builder is not reusable.
    */
    public TracerSession build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static TracerSession.Builder builder() {
    return new TracerSession.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public TracerSession.Builder toBuilder() {
    return new TracerSession.Builder()
      .startTime(getStartTime())
      .endTime(getEndTime())
      .extra(getExtra())
      .name(getName())
      .description(getDescription())
      .defaultDatasetId(getDefaultDatasetId())
      .referenceDatasetId(getReferenceDatasetId())
      .traceTier(getTraceTier())
      .id(getId())
      .runCount(getRunCount())
      .latencyP50(getLatencyP50())
      .latencyP99(getLatencyP99())
      .firstTokenP50(getFirstTokenP50())
      .firstTokenP99(getFirstTokenP99())
      .totalTokens(getTotalTokens())
      .promptTokens(getPromptTokens())
      .completionTokens(getCompletionTokens())
      .totalCost(getTotalCost())
      .promptCost(getPromptCost())
      .completionCost(getCompletionCost())
      .tenantId(getTenantId())
      .lastRunStartTime(getLastRunStartTime())
      .lastRunStartTimeLive(getLastRunStartTimeLive())
      .feedbackStats(getFeedbackStats())
      .sessionFeedbackStats(getSessionFeedbackStats())
      .runFacets(getRunFacets())
      .errorRate(getErrorRate())
      .streamingRate(getStreamingRate())
      .testRunNumber(getTestRunNumber());
  }

}

