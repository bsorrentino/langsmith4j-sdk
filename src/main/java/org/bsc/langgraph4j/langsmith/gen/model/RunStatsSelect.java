/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Metrics you can select from run stats endpoint.
 */
public enum RunStatsSelect {
  
  RUN_COUNT("run_count"),
  
  LATENCY_P50("latency_p50"),
  
  LATENCY_P99("latency_p99"),
  
  LATENCY_AVG("latency_avg"),
  
  FIRST_TOKEN_P50("first_token_p50"),
  
  FIRST_TOKEN_P99("first_token_p99"),
  
  TOTAL_TOKENS("total_tokens"),
  
  PROMPT_TOKENS("prompt_tokens"),
  
  COMPLETION_TOKENS("completion_tokens"),
  
  MEDIAN_TOKENS("median_tokens"),
  
  COMPLETION_TOKENS_P50("completion_tokens_p50"),
  
  PROMPT_TOKENS_P50("prompt_tokens_p50"),
  
  TOKENS_P99("tokens_p99"),
  
  COMPLETION_TOKENS_P99("completion_tokens_p99"),
  
  PROMPT_TOKENS_P99("prompt_tokens_p99"),
  
  LAST_RUN_START_TIME("last_run_start_time"),
  
  FEEDBACK_STATS("feedback_stats"),
  
  RUN_FACETS("run_facets"),
  
  ERROR_RATE("error_rate"),
  
  STREAMING_RATE("streaming_rate"),
  
  TOTAL_COST("total_cost"),
  
  PROMPT_COST("prompt_cost"),
  
  COMPLETION_COST("completion_cost"),
  
  COST_P50("cost_p50"),
  
  COST_P99("cost_p99"),
  
  SESSION_FEEDBACK_STATS("session_feedback_stats"),
  
  ALL_RUN_STATS("all_run_stats"),
  
  ALL_TOKEN_STATS("all_token_stats");

  private String value;

  RunStatsSelect(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static RunStatsSelect fromValue(String value) {
    for (RunStatsSelect b : RunStatsSelect.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

