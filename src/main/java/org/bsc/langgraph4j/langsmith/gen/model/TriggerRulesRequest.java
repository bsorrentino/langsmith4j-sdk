/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * TriggerRulesRequest
 */
@JsonPropertyOrder({
  TriggerRulesRequest.JSON_PROPERTY_RULE_IDS,
  TriggerRulesRequest.JSON_PROPERTY_DATASET_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:14:57.775316+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class TriggerRulesRequest {
  public static final String JSON_PROPERTY_RULE_IDS = "rule_ids";
  private JsonNullable<List<UUID>> ruleIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_DATASET_ID = "dataset_id";
  private JsonNullable<UUID> datasetId = JsonNullable.<UUID>undefined();

  public TriggerRulesRequest() { 
  }

  public TriggerRulesRequest ruleIds(@javax.annotation.Nullable List<UUID> ruleIds) {
    this.ruleIds = JsonNullable.<List<UUID>>of(ruleIds);
    return this;
  }

  public TriggerRulesRequest addRuleIdsItem(UUID ruleIdsItem) {
    if (this.ruleIds == null || !this.ruleIds.isPresent()) {
      this.ruleIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.ruleIds.get().add(ruleIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get ruleIds
   * @return ruleIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getRuleIds() {
        return ruleIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RULE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getRuleIds_JsonNullable() {
    return ruleIds;
  }
  
  @JsonProperty(JSON_PROPERTY_RULE_IDS)
  public void setRuleIds_JsonNullable(JsonNullable<List<UUID>> ruleIds) {
    this.ruleIds = ruleIds;
  }

  public void setRuleIds(@javax.annotation.Nullable List<UUID> ruleIds) {
    this.ruleIds = JsonNullable.<List<UUID>>of(ruleIds);
  }


  public TriggerRulesRequest datasetId(@javax.annotation.Nullable UUID datasetId) {
    this.datasetId = JsonNullable.<UUID>of(datasetId);
    return this;
  }

  /**
   * Get datasetId
   * @return datasetId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getDatasetId() {
        return datasetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getDatasetId_JsonNullable() {
    return datasetId;
  }
  
  @JsonProperty(JSON_PROPERTY_DATASET_ID)
  public void setDatasetId_JsonNullable(JsonNullable<UUID> datasetId) {
    this.datasetId = datasetId;
  }

  public void setDatasetId(@javax.annotation.Nullable UUID datasetId) {
    this.datasetId = JsonNullable.<UUID>of(datasetId);
  }


  /**
   * Return true if this TriggerRulesRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TriggerRulesRequest triggerRulesRequest = (TriggerRulesRequest) o;
    return equalsNullable(this.ruleIds, triggerRulesRequest.ruleIds) &&
        equalsNullable(this.datasetId, triggerRulesRequest.datasetId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(ruleIds), hashCodeNullable(datasetId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TriggerRulesRequest {\n");
    sb.append("    ruleIds: ").append(toIndentedString(ruleIds)).append("\n");
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `rule_ids` to the URL query string
    if (getRuleIds() != null) {
      for (int i = 0; i < getRuleIds().size(); i++) {
        if (getRuleIds().get(i) != null) {
          joiner.add(String.format("%srule_ids%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getRuleIds().get(i)))));
        }
      }
    }

    // add `dataset_id` to the URL query string
    if (getDatasetId() != null) {
      joiner.add(String.format("%sdataset_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDatasetId()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private TriggerRulesRequest instance;

    public Builder() {
      this(new TriggerRulesRequest());
    }

    protected Builder(TriggerRulesRequest instance) {
      this.instance = instance;
    }

    public TriggerRulesRequest.Builder ruleIds(List<UUID> ruleIds) {
      this.instance.ruleIds = JsonNullable.<List<UUID>>of(ruleIds);
      return this;
    }
    public TriggerRulesRequest.Builder ruleIds(JsonNullable<List<UUID>> ruleIds) {
      this.instance.ruleIds = ruleIds;
      return this;
    }
    public TriggerRulesRequest.Builder datasetId(UUID datasetId) {
      this.instance.datasetId = JsonNullable.<UUID>of(datasetId);
      return this;
    }
    public TriggerRulesRequest.Builder datasetId(JsonNullable<UUID> datasetId) {
      this.instance.datasetId = datasetId;
      return this;
    }


    /**
    * returns a built TriggerRulesRequest instance.
    *
    * The builder is not reusable.
    */
    public TriggerRulesRequest build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static TriggerRulesRequest.Builder builder() {
    return new TriggerRulesRequest.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public TriggerRulesRequest.Builder toBuilder() {
    return new TriggerRulesRequest.Builder()
      .ruleIds(getRuleIds())
      .datasetId(getDatasetId());
  }

}

