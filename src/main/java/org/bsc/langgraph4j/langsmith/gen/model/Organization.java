/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.CustomerVisiblePlanInfo;
import org.bsc.langgraph4j.langsmith.gen.model.OrganizationConfig;
import org.bsc.langgraph4j.langsmith.gen.model.PaymentPlanTier;
import org.bsc.langgraph4j.langsmith.gen.model.StripePaymentMethodInfo;
import org.bsc.langgraph4j.langsmith.gen.model.Wallet;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Information about an organization.
 */
@JsonPropertyOrder({
  Organization.JSON_PROPERTY_ID,
  Organization.JSON_PROPERTY_DISPLAY_NAME,
  Organization.JSON_PROPERTY_CONFIG,
  Organization.JSON_PROPERTY_CONNECTED_TO_STRIPE,
  Organization.JSON_PROPERTY_CONNECTED_TO_METRONOME,
  Organization.JSON_PROPERTY_IS_PERSONAL,
  Organization.JSON_PROPERTY_TIER,
  Organization.JSON_PROPERTY_PAYMENT_METHOD,
  Organization.JSON_PROPERTY_HAS_CANCELLED,
  Organization.JSON_PROPERTY_END_OF_BILLING_PERIOD,
  Organization.JSON_PROPERTY_CURRENT_PLAN,
  Organization.JSON_PROPERTY_UPCOMING_PLAN,
  Organization.JSON_PROPERTY_REACHED_MAX_WORKSPACES,
  Organization.JSON_PROPERTY_PERMISSIONS,
  Organization.JSON_PROPERTY_MARKETPLACE_PAYOUTS_ENABLED,
  Organization.JSON_PROPERTY_WALLET
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class Organization {
  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<UUID> id = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  private JsonNullable<String> displayName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CONFIG = "config";
  @javax.annotation.Nonnull
  private OrganizationConfig config;

  public static final String JSON_PROPERTY_CONNECTED_TO_STRIPE = "connected_to_stripe";
  @javax.annotation.Nonnull
  private Boolean connectedToStripe;

  public static final String JSON_PROPERTY_CONNECTED_TO_METRONOME = "connected_to_metronome";
  @javax.annotation.Nonnull
  private Boolean connectedToMetronome;

  public static final String JSON_PROPERTY_IS_PERSONAL = "is_personal";
  @javax.annotation.Nonnull
  private Boolean isPersonal;

  public static final String JSON_PROPERTY_TIER = "tier";
  private JsonNullable<PaymentPlanTier> tier = JsonNullable.<PaymentPlanTier>undefined();

  public static final String JSON_PROPERTY_PAYMENT_METHOD = "payment_method";
  private JsonNullable<StripePaymentMethodInfo> paymentMethod = JsonNullable.<StripePaymentMethodInfo>undefined();

  public static final String JSON_PROPERTY_HAS_CANCELLED = "has_cancelled";
  @javax.annotation.Nonnull
  private Boolean hasCancelled;

  public static final String JSON_PROPERTY_END_OF_BILLING_PERIOD = "end_of_billing_period";
  private JsonNullable<OffsetDateTime> endOfBillingPeriod = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_CURRENT_PLAN = "current_plan";
  private JsonNullable<CustomerVisiblePlanInfo> currentPlan = JsonNullable.<CustomerVisiblePlanInfo>undefined();

  public static final String JSON_PROPERTY_UPCOMING_PLAN = "upcoming_plan";
  private JsonNullable<CustomerVisiblePlanInfo> upcomingPlan = JsonNullable.<CustomerVisiblePlanInfo>undefined();

  public static final String JSON_PROPERTY_REACHED_MAX_WORKSPACES = "reached_max_workspaces";
  @javax.annotation.Nullable
  private Boolean reachedMaxWorkspaces = false;

  public static final String JSON_PROPERTY_PERMISSIONS = "permissions";
  @javax.annotation.Nullable
  private List<String> permissions = new ArrayList<>();

  public static final String JSON_PROPERTY_MARKETPLACE_PAYOUTS_ENABLED = "marketplace_payouts_enabled";
  @javax.annotation.Nullable
  private Boolean marketplacePayoutsEnabled = false;

  public static final String JSON_PROPERTY_WALLET = "wallet";
  private JsonNullable<Wallet> wallet = JsonNullable.<Wallet>undefined();

  public Organization() { 
  }

  public Organization id(@javax.annotation.Nullable UUID id) {
    this.id = JsonNullable.<UUID>of(id);
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<UUID> id) {
    this.id = id;
  }

  public void setId(@javax.annotation.Nullable UUID id) {
    this.id = JsonNullable.<UUID>of(id);
  }


  public Organization displayName(@javax.annotation.Nullable String displayName) {
    this.displayName = JsonNullable.<String>of(displayName);
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDisplayName() {
        return displayName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDisplayName_JsonNullable() {
    return displayName;
  }
  
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  public void setDisplayName_JsonNullable(JsonNullable<String> displayName) {
    this.displayName = displayName;
  }

  public void setDisplayName(@javax.annotation.Nullable String displayName) {
    this.displayName = JsonNullable.<String>of(displayName);
  }


  public Organization config(@javax.annotation.Nonnull OrganizationConfig config) {
    this.config = config;
    return this;
  }

  /**
   * Get config
   * @return config
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OrganizationConfig getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfig(@javax.annotation.Nonnull OrganizationConfig config) {
    this.config = config;
  }


  public Organization connectedToStripe(@javax.annotation.Nonnull Boolean connectedToStripe) {
    this.connectedToStripe = connectedToStripe;
    return this;
  }

  /**
   * Get connectedToStripe
   * @return connectedToStripe
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONNECTED_TO_STRIPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getConnectedToStripe() {
    return connectedToStripe;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTED_TO_STRIPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConnectedToStripe(@javax.annotation.Nonnull Boolean connectedToStripe) {
    this.connectedToStripe = connectedToStripe;
  }


  public Organization connectedToMetronome(@javax.annotation.Nonnull Boolean connectedToMetronome) {
    this.connectedToMetronome = connectedToMetronome;
    return this;
  }

  /**
   * Get connectedToMetronome
   * @return connectedToMetronome
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONNECTED_TO_METRONOME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getConnectedToMetronome() {
    return connectedToMetronome;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTED_TO_METRONOME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConnectedToMetronome(@javax.annotation.Nonnull Boolean connectedToMetronome) {
    this.connectedToMetronome = connectedToMetronome;
  }


  public Organization isPersonal(@javax.annotation.Nonnull Boolean isPersonal) {
    this.isPersonal = isPersonal;
    return this;
  }

  /**
   * Get isPersonal
   * @return isPersonal
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_PERSONAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getIsPersonal() {
    return isPersonal;
  }


  @JsonProperty(JSON_PROPERTY_IS_PERSONAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsPersonal(@javax.annotation.Nonnull Boolean isPersonal) {
    this.isPersonal = isPersonal;
  }


  public Organization tier(@javax.annotation.Nullable PaymentPlanTier tier) {
    this.tier = JsonNullable.<PaymentPlanTier>of(tier);
    return this;
  }

  /**
   * Get tier
   * @return tier
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public PaymentPlanTier getTier() {
        return tier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentPlanTier> getTier_JsonNullable() {
    return tier;
  }
  
  @JsonProperty(JSON_PROPERTY_TIER)
  public void setTier_JsonNullable(JsonNullable<PaymentPlanTier> tier) {
    this.tier = tier;
  }

  public void setTier(@javax.annotation.Nullable PaymentPlanTier tier) {
    this.tier = JsonNullable.<PaymentPlanTier>of(tier);
  }


  public Organization paymentMethod(@javax.annotation.Nullable StripePaymentMethodInfo paymentMethod) {
    this.paymentMethod = JsonNullable.<StripePaymentMethodInfo>of(paymentMethod);
    return this;
  }

  /**
   * Get paymentMethod
   * @return paymentMethod
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public StripePaymentMethodInfo getPaymentMethod() {
        return paymentMethod.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<StripePaymentMethodInfo> getPaymentMethod_JsonNullable() {
    return paymentMethod;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  public void setPaymentMethod_JsonNullable(JsonNullable<StripePaymentMethodInfo> paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public void setPaymentMethod(@javax.annotation.Nullable StripePaymentMethodInfo paymentMethod) {
    this.paymentMethod = JsonNullable.<StripePaymentMethodInfo>of(paymentMethod);
  }


  public Organization hasCancelled(@javax.annotation.Nonnull Boolean hasCancelled) {
    this.hasCancelled = hasCancelled;
    return this;
  }

  /**
   * Get hasCancelled
   * @return hasCancelled
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HAS_CANCELLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getHasCancelled() {
    return hasCancelled;
  }


  @JsonProperty(JSON_PROPERTY_HAS_CANCELLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHasCancelled(@javax.annotation.Nonnull Boolean hasCancelled) {
    this.hasCancelled = hasCancelled;
  }


  public Organization endOfBillingPeriod(@javax.annotation.Nullable OffsetDateTime endOfBillingPeriod) {
    this.endOfBillingPeriod = JsonNullable.<OffsetDateTime>of(endOfBillingPeriod);
    return this;
  }

  /**
   * Get endOfBillingPeriod
   * @return endOfBillingPeriod
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getEndOfBillingPeriod() {
        return endOfBillingPeriod.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_OF_BILLING_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEndOfBillingPeriod_JsonNullable() {
    return endOfBillingPeriod;
  }
  
  @JsonProperty(JSON_PROPERTY_END_OF_BILLING_PERIOD)
  public void setEndOfBillingPeriod_JsonNullable(JsonNullable<OffsetDateTime> endOfBillingPeriod) {
    this.endOfBillingPeriod = endOfBillingPeriod;
  }

  public void setEndOfBillingPeriod(@javax.annotation.Nullable OffsetDateTime endOfBillingPeriod) {
    this.endOfBillingPeriod = JsonNullable.<OffsetDateTime>of(endOfBillingPeriod);
  }


  public Organization currentPlan(@javax.annotation.Nullable CustomerVisiblePlanInfo currentPlan) {
    this.currentPlan = JsonNullable.<CustomerVisiblePlanInfo>of(currentPlan);
    return this;
  }

  /**
   * Get currentPlan
   * @return currentPlan
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public CustomerVisiblePlanInfo getCurrentPlan() {
        return currentPlan.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerVisiblePlanInfo> getCurrentPlan_JsonNullable() {
    return currentPlan;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_PLAN)
  public void setCurrentPlan_JsonNullable(JsonNullable<CustomerVisiblePlanInfo> currentPlan) {
    this.currentPlan = currentPlan;
  }

  public void setCurrentPlan(@javax.annotation.Nullable CustomerVisiblePlanInfo currentPlan) {
    this.currentPlan = JsonNullable.<CustomerVisiblePlanInfo>of(currentPlan);
  }


  public Organization upcomingPlan(@javax.annotation.Nullable CustomerVisiblePlanInfo upcomingPlan) {
    this.upcomingPlan = JsonNullable.<CustomerVisiblePlanInfo>of(upcomingPlan);
    return this;
  }

  /**
   * Get upcomingPlan
   * @return upcomingPlan
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public CustomerVisiblePlanInfo getUpcomingPlan() {
        return upcomingPlan.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPCOMING_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerVisiblePlanInfo> getUpcomingPlan_JsonNullable() {
    return upcomingPlan;
  }
  
  @JsonProperty(JSON_PROPERTY_UPCOMING_PLAN)
  public void setUpcomingPlan_JsonNullable(JsonNullable<CustomerVisiblePlanInfo> upcomingPlan) {
    this.upcomingPlan = upcomingPlan;
  }

  public void setUpcomingPlan(@javax.annotation.Nullable CustomerVisiblePlanInfo upcomingPlan) {
    this.upcomingPlan = JsonNullable.<CustomerVisiblePlanInfo>of(upcomingPlan);
  }


  public Organization reachedMaxWorkspaces(@javax.annotation.Nullable Boolean reachedMaxWorkspaces) {
    this.reachedMaxWorkspaces = reachedMaxWorkspaces;
    return this;
  }

  /**
   * Get reachedMaxWorkspaces
   * @return reachedMaxWorkspaces
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REACHED_MAX_WORKSPACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getReachedMaxWorkspaces() {
    return reachedMaxWorkspaces;
  }


  @JsonProperty(JSON_PROPERTY_REACHED_MAX_WORKSPACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReachedMaxWorkspaces(@javax.annotation.Nullable Boolean reachedMaxWorkspaces) {
    this.reachedMaxWorkspaces = reachedMaxWorkspaces;
  }


  public Organization permissions(@javax.annotation.Nullable List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public Organization addPermissionsItem(String permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

  /**
   * Get permissions
   * @return permissions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getPermissions() {
    return permissions;
  }


  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPermissions(@javax.annotation.Nullable List<String> permissions) {
    this.permissions = permissions;
  }


  public Organization marketplacePayoutsEnabled(@javax.annotation.Nullable Boolean marketplacePayoutsEnabled) {
    this.marketplacePayoutsEnabled = marketplacePayoutsEnabled;
    return this;
  }

  /**
   * Get marketplacePayoutsEnabled
   * @return marketplacePayoutsEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MARKETPLACE_PAYOUTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getMarketplacePayoutsEnabled() {
    return marketplacePayoutsEnabled;
  }


  @JsonProperty(JSON_PROPERTY_MARKETPLACE_PAYOUTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarketplacePayoutsEnabled(@javax.annotation.Nullable Boolean marketplacePayoutsEnabled) {
    this.marketplacePayoutsEnabled = marketplacePayoutsEnabled;
  }


  public Organization wallet(@javax.annotation.Nullable Wallet wallet) {
    this.wallet = JsonNullable.<Wallet>of(wallet);
    return this;
  }

  /**
   * Get wallet
   * @return wallet
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Wallet getWallet() {
        return wallet.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WALLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Wallet> getWallet_JsonNullable() {
    return wallet;
  }
  
  @JsonProperty(JSON_PROPERTY_WALLET)
  public void setWallet_JsonNullable(JsonNullable<Wallet> wallet) {
    this.wallet = wallet;
  }

  public void setWallet(@javax.annotation.Nullable Wallet wallet) {
    this.wallet = JsonNullable.<Wallet>of(wallet);
  }


  /**
   * Return true if this Organization object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organization organization = (Organization) o;
    return equalsNullable(this.id, organization.id) &&
        equalsNullable(this.displayName, organization.displayName) &&
        Objects.equals(this.config, organization.config) &&
        Objects.equals(this.connectedToStripe, organization.connectedToStripe) &&
        Objects.equals(this.connectedToMetronome, organization.connectedToMetronome) &&
        Objects.equals(this.isPersonal, organization.isPersonal) &&
        equalsNullable(this.tier, organization.tier) &&
        equalsNullable(this.paymentMethod, organization.paymentMethod) &&
        Objects.equals(this.hasCancelled, organization.hasCancelled) &&
        equalsNullable(this.endOfBillingPeriod, organization.endOfBillingPeriod) &&
        equalsNullable(this.currentPlan, organization.currentPlan) &&
        equalsNullable(this.upcomingPlan, organization.upcomingPlan) &&
        Objects.equals(this.reachedMaxWorkspaces, organization.reachedMaxWorkspaces) &&
        Objects.equals(this.permissions, organization.permissions) &&
        Objects.equals(this.marketplacePayoutsEnabled, organization.marketplacePayoutsEnabled) &&
        equalsNullable(this.wallet, organization.wallet);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(id), hashCodeNullable(displayName), config, connectedToStripe, connectedToMetronome, isPersonal, hashCodeNullable(tier), hashCodeNullable(paymentMethod), hasCancelled, hashCodeNullable(endOfBillingPeriod), hashCodeNullable(currentPlan), hashCodeNullable(upcomingPlan), reachedMaxWorkspaces, permissions, marketplacePayoutsEnabled, hashCodeNullable(wallet));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Organization {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    connectedToStripe: ").append(toIndentedString(connectedToStripe)).append("\n");
    sb.append("    connectedToMetronome: ").append(toIndentedString(connectedToMetronome)).append("\n");
    sb.append("    isPersonal: ").append(toIndentedString(isPersonal)).append("\n");
    sb.append("    tier: ").append(toIndentedString(tier)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    hasCancelled: ").append(toIndentedString(hasCancelled)).append("\n");
    sb.append("    endOfBillingPeriod: ").append(toIndentedString(endOfBillingPeriod)).append("\n");
    sb.append("    currentPlan: ").append(toIndentedString(currentPlan)).append("\n");
    sb.append("    upcomingPlan: ").append(toIndentedString(upcomingPlan)).append("\n");
    sb.append("    reachedMaxWorkspaces: ").append(toIndentedString(reachedMaxWorkspaces)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    marketplacePayoutsEnabled: ").append(toIndentedString(marketplacePayoutsEnabled)).append("\n");
    sb.append("    wallet: ").append(toIndentedString(wallet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `display_name` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sdisplay_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDisplayName()))));
    }

    // add `config` to the URL query string
    if (getConfig() != null) {
      joiner.add(getConfig().toUrlQueryString(prefix + "config" + suffix));
    }

    // add `connected_to_stripe` to the URL query string
    if (getConnectedToStripe() != null) {
      joiner.add(String.format("%sconnected_to_stripe%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getConnectedToStripe()))));
    }

    // add `connected_to_metronome` to the URL query string
    if (getConnectedToMetronome() != null) {
      joiner.add(String.format("%sconnected_to_metronome%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getConnectedToMetronome()))));
    }

    // add `is_personal` to the URL query string
    if (getIsPersonal() != null) {
      joiner.add(String.format("%sis_personal%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsPersonal()))));
    }

    // add `tier` to the URL query string
    if (getTier() != null) {
      joiner.add(String.format("%stier%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTier()))));
    }

    // add `payment_method` to the URL query string
    if (getPaymentMethod() != null) {
      joiner.add(getPaymentMethod().toUrlQueryString(prefix + "payment_method" + suffix));
    }

    // add `has_cancelled` to the URL query string
    if (getHasCancelled() != null) {
      joiner.add(String.format("%shas_cancelled%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getHasCancelled()))));
    }

    // add `end_of_billing_period` to the URL query string
    if (getEndOfBillingPeriod() != null) {
      joiner.add(String.format("%send_of_billing_period%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEndOfBillingPeriod()))));
    }

    // add `current_plan` to the URL query string
    if (getCurrentPlan() != null) {
      joiner.add(getCurrentPlan().toUrlQueryString(prefix + "current_plan" + suffix));
    }

    // add `upcoming_plan` to the URL query string
    if (getUpcomingPlan() != null) {
      joiner.add(getUpcomingPlan().toUrlQueryString(prefix + "upcoming_plan" + suffix));
    }

    // add `reached_max_workspaces` to the URL query string
    if (getReachedMaxWorkspaces() != null) {
      joiner.add(String.format("%sreached_max_workspaces%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getReachedMaxWorkspaces()))));
    }

    // add `permissions` to the URL query string
    if (getPermissions() != null) {
      for (int i = 0; i < getPermissions().size(); i++) {
        joiner.add(String.format("%spermissions%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getPermissions().get(i)))));
      }
    }

    // add `marketplace_payouts_enabled` to the URL query string
    if (getMarketplacePayoutsEnabled() != null) {
      joiner.add(String.format("%smarketplace_payouts_enabled%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMarketplacePayoutsEnabled()))));
    }

    // add `wallet` to the URL query string
    if (getWallet() != null) {
      joiner.add(getWallet().toUrlQueryString(prefix + "wallet" + suffix));
    }

    return joiner.toString();
  }

    public static class Builder {

    private Organization instance;

    public Builder() {
      this(new Organization());
    }

    protected Builder(Organization instance) {
      this.instance = instance;
    }

    public Organization.Builder id(UUID id) {
      this.instance.id = JsonNullable.<UUID>of(id);
      return this;
    }
    public Organization.Builder id(JsonNullable<UUID> id) {
      this.instance.id = id;
      return this;
    }
    public Organization.Builder displayName(String displayName) {
      this.instance.displayName = JsonNullable.<String>of(displayName);
      return this;
    }
    public Organization.Builder displayName(JsonNullable<String> displayName) {
      this.instance.displayName = displayName;
      return this;
    }
    public Organization.Builder config(OrganizationConfig config) {
      this.instance.config = config;
      return this;
    }
    public Organization.Builder connectedToStripe(Boolean connectedToStripe) {
      this.instance.connectedToStripe = connectedToStripe;
      return this;
    }
    public Organization.Builder connectedToMetronome(Boolean connectedToMetronome) {
      this.instance.connectedToMetronome = connectedToMetronome;
      return this;
    }
    public Organization.Builder isPersonal(Boolean isPersonal) {
      this.instance.isPersonal = isPersonal;
      return this;
    }
    public Organization.Builder tier(PaymentPlanTier tier) {
      this.instance.tier = JsonNullable.<PaymentPlanTier>of(tier);
      return this;
    }
    public Organization.Builder tier(JsonNullable<PaymentPlanTier> tier) {
      this.instance.tier = tier;
      return this;
    }
    public Organization.Builder paymentMethod(StripePaymentMethodInfo paymentMethod) {
      this.instance.paymentMethod = JsonNullable.<StripePaymentMethodInfo>of(paymentMethod);
      return this;
    }
    public Organization.Builder paymentMethod(JsonNullable<StripePaymentMethodInfo> paymentMethod) {
      this.instance.paymentMethod = paymentMethod;
      return this;
    }
    public Organization.Builder hasCancelled(Boolean hasCancelled) {
      this.instance.hasCancelled = hasCancelled;
      return this;
    }
    public Organization.Builder endOfBillingPeriod(OffsetDateTime endOfBillingPeriod) {
      this.instance.endOfBillingPeriod = JsonNullable.<OffsetDateTime>of(endOfBillingPeriod);
      return this;
    }
    public Organization.Builder endOfBillingPeriod(JsonNullable<OffsetDateTime> endOfBillingPeriod) {
      this.instance.endOfBillingPeriod = endOfBillingPeriod;
      return this;
    }
    public Organization.Builder currentPlan(CustomerVisiblePlanInfo currentPlan) {
      this.instance.currentPlan = JsonNullable.<CustomerVisiblePlanInfo>of(currentPlan);
      return this;
    }
    public Organization.Builder currentPlan(JsonNullable<CustomerVisiblePlanInfo> currentPlan) {
      this.instance.currentPlan = currentPlan;
      return this;
    }
    public Organization.Builder upcomingPlan(CustomerVisiblePlanInfo upcomingPlan) {
      this.instance.upcomingPlan = JsonNullable.<CustomerVisiblePlanInfo>of(upcomingPlan);
      return this;
    }
    public Organization.Builder upcomingPlan(JsonNullable<CustomerVisiblePlanInfo> upcomingPlan) {
      this.instance.upcomingPlan = upcomingPlan;
      return this;
    }
    public Organization.Builder reachedMaxWorkspaces(Boolean reachedMaxWorkspaces) {
      this.instance.reachedMaxWorkspaces = reachedMaxWorkspaces;
      return this;
    }
    public Organization.Builder permissions(List<String> permissions) {
      this.instance.permissions = permissions;
      return this;
    }
    public Organization.Builder marketplacePayoutsEnabled(Boolean marketplacePayoutsEnabled) {
      this.instance.marketplacePayoutsEnabled = marketplacePayoutsEnabled;
      return this;
    }
    public Organization.Builder wallet(Wallet wallet) {
      this.instance.wallet = JsonNullable.<Wallet>of(wallet);
      return this;
    }
    public Organization.Builder wallet(JsonNullable<Wallet> wallet) {
      this.instance.wallet = wallet;
      return this;
    }


    /**
    * returns a built Organization instance.
    *
    * The builder is not reusable.
    */
    public Organization build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static Organization.Builder builder() {
    return new Organization.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public Organization.Builder toBuilder() {
    return new Organization.Builder()
      .id(getId())
      .displayName(getDisplayName())
      .config(getConfig())
      .connectedToStripe(getConnectedToStripe())
      .connectedToMetronome(getConnectedToMetronome())
      .isPersonal(getIsPersonal())
      .tier(getTier())
      .paymentMethod(getPaymentMethod())
      .hasCancelled(getHasCancelled())
      .endOfBillingPeriod(getEndOfBillingPeriod())
      .currentPlan(getCurrentPlan())
      .upcomingPlan(getUpcomingPlan())
      .reachedMaxWorkspaces(getReachedMaxWorkspaces())
      .permissions(getPermissions())
      .marketplacePayoutsEnabled(getMarketplacePayoutsEnabled())
      .wallet(getWallet());
  }

}

