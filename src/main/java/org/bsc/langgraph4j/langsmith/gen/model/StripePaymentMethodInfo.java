/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Stripe customer billing info.
 */
@JsonPropertyOrder({
  StripePaymentMethodInfo.JSON_PROPERTY_BRAND,
  StripePaymentMethodInfo.JSON_PROPERTY_LAST4,
  StripePaymentMethodInfo.JSON_PROPERTY_EXP_MONTH,
  StripePaymentMethodInfo.JSON_PROPERTY_EXP_YEAR,
  StripePaymentMethodInfo.JSON_PROPERTY_EMAIL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class StripePaymentMethodInfo {
  public static final String JSON_PROPERTY_BRAND = "brand";
  private JsonNullable<String> brand = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST4 = "last4";
  private JsonNullable<String> last4 = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXP_MONTH = "exp_month";
  private JsonNullable<Integer> expMonth = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_EXP_YEAR = "exp_year";
  private JsonNullable<Integer> expYear = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_EMAIL = "email";
  private JsonNullable<String> email = JsonNullable.<String>undefined();

  public StripePaymentMethodInfo() { 
  }

  public StripePaymentMethodInfo brand(@javax.annotation.Nullable String brand) {
    this.brand = JsonNullable.<String>of(brand);
    return this;
  }

  /**
   * Get brand
   * @return brand
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getBrand() {
        return brand.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBrand_JsonNullable() {
    return brand;
  }
  
  @JsonProperty(JSON_PROPERTY_BRAND)
  public void setBrand_JsonNullable(JsonNullable<String> brand) {
    this.brand = brand;
  }

  public void setBrand(@javax.annotation.Nullable String brand) {
    this.brand = JsonNullable.<String>of(brand);
  }


  public StripePaymentMethodInfo last4(@javax.annotation.Nullable String last4) {
    this.last4 = JsonNullable.<String>of(last4);
    return this;
  }

  /**
   * Get last4
   * @return last4
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getLast4() {
        return last4.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLast4_JsonNullable() {
    return last4;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST4)
  public void setLast4_JsonNullable(JsonNullable<String> last4) {
    this.last4 = last4;
  }

  public void setLast4(@javax.annotation.Nullable String last4) {
    this.last4 = JsonNullable.<String>of(last4);
  }


  public StripePaymentMethodInfo expMonth(@javax.annotation.Nullable Integer expMonth) {
    this.expMonth = JsonNullable.<Integer>of(expMonth);
    return this;
  }

  /**
   * Get expMonth
   * @return expMonth
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getExpMonth() {
        return expMonth.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXP_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getExpMonth_JsonNullable() {
    return expMonth;
  }
  
  @JsonProperty(JSON_PROPERTY_EXP_MONTH)
  public void setExpMonth_JsonNullable(JsonNullable<Integer> expMonth) {
    this.expMonth = expMonth;
  }

  public void setExpMonth(@javax.annotation.Nullable Integer expMonth) {
    this.expMonth = JsonNullable.<Integer>of(expMonth);
  }


  public StripePaymentMethodInfo expYear(@javax.annotation.Nullable Integer expYear) {
    this.expYear = JsonNullable.<Integer>of(expYear);
    return this;
  }

  /**
   * Get expYear
   * @return expYear
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getExpYear() {
        return expYear.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXP_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getExpYear_JsonNullable() {
    return expYear;
  }
  
  @JsonProperty(JSON_PROPERTY_EXP_YEAR)
  public void setExpYear_JsonNullable(JsonNullable<Integer> expYear) {
    this.expYear = expYear;
  }

  public void setExpYear(@javax.annotation.Nullable Integer expYear) {
    this.expYear = JsonNullable.<Integer>of(expYear);
  }


  public StripePaymentMethodInfo email(@javax.annotation.Nullable String email) {
    this.email = JsonNullable.<String>of(email);
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getEmail() {
        return email.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmail_JsonNullable() {
    return email;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL)
  public void setEmail_JsonNullable(JsonNullable<String> email) {
    this.email = email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = JsonNullable.<String>of(email);
  }


  /**
   * Return true if this StripePaymentMethodInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StripePaymentMethodInfo stripePaymentMethodInfo = (StripePaymentMethodInfo) o;
    return equalsNullable(this.brand, stripePaymentMethodInfo.brand) &&
        equalsNullable(this.last4, stripePaymentMethodInfo.last4) &&
        equalsNullable(this.expMonth, stripePaymentMethodInfo.expMonth) &&
        equalsNullable(this.expYear, stripePaymentMethodInfo.expYear) &&
        equalsNullable(this.email, stripePaymentMethodInfo.email);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(brand), hashCodeNullable(last4), hashCodeNullable(expMonth), hashCodeNullable(expYear), hashCodeNullable(email));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StripePaymentMethodInfo {\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    last4: ").append(toIndentedString(last4)).append("\n");
    sb.append("    expMonth: ").append(toIndentedString(expMonth)).append("\n");
    sb.append("    expYear: ").append(toIndentedString(expYear)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `brand` to the URL query string
    if (getBrand() != null) {
      joiner.add(String.format("%sbrand%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getBrand()))));
    }

    // add `last4` to the URL query string
    if (getLast4() != null) {
      joiner.add(String.format("%slast4%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLast4()))));
    }

    // add `exp_month` to the URL query string
    if (getExpMonth() != null) {
      joiner.add(String.format("%sexp_month%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExpMonth()))));
    }

    // add `exp_year` to the URL query string
    if (getExpYear() != null) {
      joiner.add(String.format("%sexp_year%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExpYear()))));
    }

    // add `email` to the URL query string
    if (getEmail() != null) {
      joiner.add(String.format("%semail%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEmail()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private StripePaymentMethodInfo instance;

    public Builder() {
      this(new StripePaymentMethodInfo());
    }

    protected Builder(StripePaymentMethodInfo instance) {
      this.instance = instance;
    }

    public StripePaymentMethodInfo.Builder brand(String brand) {
      this.instance.brand = JsonNullable.<String>of(brand);
      return this;
    }
    public StripePaymentMethodInfo.Builder brand(JsonNullable<String> brand) {
      this.instance.brand = brand;
      return this;
    }
    public StripePaymentMethodInfo.Builder last4(String last4) {
      this.instance.last4 = JsonNullable.<String>of(last4);
      return this;
    }
    public StripePaymentMethodInfo.Builder last4(JsonNullable<String> last4) {
      this.instance.last4 = last4;
      return this;
    }
    public StripePaymentMethodInfo.Builder expMonth(Integer expMonth) {
      this.instance.expMonth = JsonNullable.<Integer>of(expMonth);
      return this;
    }
    public StripePaymentMethodInfo.Builder expMonth(JsonNullable<Integer> expMonth) {
      this.instance.expMonth = expMonth;
      return this;
    }
    public StripePaymentMethodInfo.Builder expYear(Integer expYear) {
      this.instance.expYear = JsonNullable.<Integer>of(expYear);
      return this;
    }
    public StripePaymentMethodInfo.Builder expYear(JsonNullable<Integer> expYear) {
      this.instance.expYear = expYear;
      return this;
    }
    public StripePaymentMethodInfo.Builder email(String email) {
      this.instance.email = JsonNullable.<String>of(email);
      return this;
    }
    public StripePaymentMethodInfo.Builder email(JsonNullable<String> email) {
      this.instance.email = email;
      return this;
    }


    /**
    * returns a built StripePaymentMethodInfo instance.
    *
    * The builder is not reusable.
    */
    public StripePaymentMethodInfo build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static StripePaymentMethodInfo.Builder builder() {
    return new StripePaymentMethodInfo.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public StripePaymentMethodInfo.Builder toBuilder() {
    return new StripePaymentMethodInfo.Builder()
      .brand(getBrand())
      .last4(getLast4())
      .expMonth(getExpMonth())
      .expYear(getExpYear())
      .email(getEmail());
  }

}

