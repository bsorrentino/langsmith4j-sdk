/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.bsc.langgraph4j.langsmith.gen.model.EPromptWebhookTrigger;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * Schema for creating a prompt webhook.
 */
@JsonPropertyOrder({
  PromptWebhookCreate.JSON_PROPERTY_URL,
  PromptWebhookCreate.JSON_PROPERTY_HEADERS,
  PromptWebhookCreate.JSON_PROPERTY_INCLUDE_PROMPTS,
  PromptWebhookCreate.JSON_PROPERTY_EXCLUDE_PROMPTS,
  PromptWebhookCreate.JSON_PROPERTY_TRIGGERS,
  PromptWebhookCreate.JSON_PROPERTY_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class PromptWebhookCreate {
  public static final String JSON_PROPERTY_URL = "url";
  @javax.annotation.Nonnull
  private URI url;

  public static final String JSON_PROPERTY_HEADERS = "headers";
  private JsonNullable<Object> headers = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_INCLUDE_PROMPTS = "include_prompts";
  private JsonNullable<List<UUID>> includePrompts = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_EXCLUDE_PROMPTS = "exclude_prompts";
  private JsonNullable<List<UUID>> excludePrompts = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_TRIGGERS = "triggers";
  @javax.annotation.Nullable
  private List<EPromptWebhookTrigger> triggers = new ArrayList<>();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<UUID> id = JsonNullable.<UUID>undefined();

  public PromptWebhookCreate() { 
  }

  public PromptWebhookCreate url(@javax.annotation.Nonnull URI url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public URI getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(@javax.annotation.Nonnull URI url) {
    this.url = url;
  }


  public PromptWebhookCreate headers(@javax.annotation.Nullable Object headers) {
    this.headers = JsonNullable.<Object>of(headers);
    return this;
  }

  /**
   * Get headers
   * @return headers
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getHeaders() {
        return headers.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getHeaders_JsonNullable() {
    return headers;
  }
  
  @JsonProperty(JSON_PROPERTY_HEADERS)
  public void setHeaders_JsonNullable(JsonNullable<Object> headers) {
    this.headers = headers;
  }

  public void setHeaders(@javax.annotation.Nullable Object headers) {
    this.headers = JsonNullable.<Object>of(headers);
  }


  public PromptWebhookCreate includePrompts(@javax.annotation.Nullable List<UUID> includePrompts) {
    this.includePrompts = JsonNullable.<List<UUID>>of(includePrompts);
    return this;
  }

  public PromptWebhookCreate addIncludePromptsItem(UUID includePromptsItem) {
    if (this.includePrompts == null || !this.includePrompts.isPresent()) {
      this.includePrompts = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.includePrompts.get().add(includePromptsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get includePrompts
   * @return includePrompts
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getIncludePrompts() {
        return includePrompts.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INCLUDE_PROMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getIncludePrompts_JsonNullable() {
    return includePrompts;
  }
  
  @JsonProperty(JSON_PROPERTY_INCLUDE_PROMPTS)
  public void setIncludePrompts_JsonNullable(JsonNullable<List<UUID>> includePrompts) {
    this.includePrompts = includePrompts;
  }

  public void setIncludePrompts(@javax.annotation.Nullable List<UUID> includePrompts) {
    this.includePrompts = JsonNullable.<List<UUID>>of(includePrompts);
  }


  public PromptWebhookCreate excludePrompts(@javax.annotation.Nullable List<UUID> excludePrompts) {
    this.excludePrompts = JsonNullable.<List<UUID>>of(excludePrompts);
    return this;
  }

  public PromptWebhookCreate addExcludePromptsItem(UUID excludePromptsItem) {
    if (this.excludePrompts == null || !this.excludePrompts.isPresent()) {
      this.excludePrompts = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.excludePrompts.get().add(excludePromptsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get excludePrompts
   * @return excludePrompts
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getExcludePrompts() {
        return excludePrompts.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXCLUDE_PROMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getExcludePrompts_JsonNullable() {
    return excludePrompts;
  }
  
  @JsonProperty(JSON_PROPERTY_EXCLUDE_PROMPTS)
  public void setExcludePrompts_JsonNullable(JsonNullable<List<UUID>> excludePrompts) {
    this.excludePrompts = excludePrompts;
  }

  public void setExcludePrompts(@javax.annotation.Nullable List<UUID> excludePrompts) {
    this.excludePrompts = JsonNullable.<List<UUID>>of(excludePrompts);
  }


  public PromptWebhookCreate triggers(@javax.annotation.Nullable List<EPromptWebhookTrigger> triggers) {
    this.triggers = triggers;
    return this;
  }

  public PromptWebhookCreate addTriggersItem(EPromptWebhookTrigger triggersItem) {
    if (this.triggers == null) {
      this.triggers = new ArrayList<>();
    }
    this.triggers.add(triggersItem);
    return this;
  }

  /**
   * Get triggers
   * @return triggers
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRIGGERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<EPromptWebhookTrigger> getTriggers() {
    return triggers;
  }


  @JsonProperty(JSON_PROPERTY_TRIGGERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTriggers(@javax.annotation.Nullable List<EPromptWebhookTrigger> triggers) {
    this.triggers = triggers;
  }


  public PromptWebhookCreate id(@javax.annotation.Nullable UUID id) {
    this.id = JsonNullable.<UUID>of(id);
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<UUID> id) {
    this.id = id;
  }

  public void setId(@javax.annotation.Nullable UUID id) {
    this.id = JsonNullable.<UUID>of(id);
  }


  /**
   * Return true if this PromptWebhookCreate object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromptWebhookCreate promptWebhookCreate = (PromptWebhookCreate) o;
    return Objects.equals(this.url, promptWebhookCreate.url) &&
        equalsNullable(this.headers, promptWebhookCreate.headers) &&
        equalsNullable(this.includePrompts, promptWebhookCreate.includePrompts) &&
        equalsNullable(this.excludePrompts, promptWebhookCreate.excludePrompts) &&
        Objects.equals(this.triggers, promptWebhookCreate.triggers) &&
        equalsNullable(this.id, promptWebhookCreate.id);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, hashCodeNullable(headers), hashCodeNullable(includePrompts), hashCodeNullable(excludePrompts), triggers, hashCodeNullable(id));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromptWebhookCreate {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    includePrompts: ").append(toIndentedString(includePrompts)).append("\n");
    sb.append("    excludePrompts: ").append(toIndentedString(excludePrompts)).append("\n");
    sb.append("    triggers: ").append(toIndentedString(triggers)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `url` to the URL query string
    if (getUrl() != null) {
      joiner.add(String.format("%surl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUrl()))));
    }

    // add `headers` to the URL query string
    if (getHeaders() != null) {
      joiner.add(String.format("%sheaders%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getHeaders()))));
    }

    // add `include_prompts` to the URL query string
    if (getIncludePrompts() != null) {
      for (int i = 0; i < getIncludePrompts().size(); i++) {
        if (getIncludePrompts().get(i) != null) {
          joiner.add(String.format("%sinclude_prompts%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getIncludePrompts().get(i)))));
        }
      }
    }

    // add `exclude_prompts` to the URL query string
    if (getExcludePrompts() != null) {
      for (int i = 0; i < getExcludePrompts().size(); i++) {
        if (getExcludePrompts().get(i) != null) {
          joiner.add(String.format("%sexclude_prompts%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getExcludePrompts().get(i)))));
        }
      }
    }

    // add `triggers` to the URL query string
    if (getTriggers() != null) {
      for (int i = 0; i < getTriggers().size(); i++) {
        if (getTriggers().get(i) != null) {
          joiner.add(String.format("%striggers%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getTriggers().get(i)))));
        }
      }
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private PromptWebhookCreate instance;

    public Builder() {
      this(new PromptWebhookCreate());
    }

    protected Builder(PromptWebhookCreate instance) {
      this.instance = instance;
    }

    public PromptWebhookCreate.Builder url(URI url) {
      this.instance.url = url;
      return this;
    }
    public PromptWebhookCreate.Builder headers(Object headers) {
      this.instance.headers = JsonNullable.<Object>of(headers);
      return this;
    }
    public PromptWebhookCreate.Builder headers(JsonNullable<Object> headers) {
      this.instance.headers = headers;
      return this;
    }
    public PromptWebhookCreate.Builder includePrompts(List<UUID> includePrompts) {
      this.instance.includePrompts = JsonNullable.<List<UUID>>of(includePrompts);
      return this;
    }
    public PromptWebhookCreate.Builder includePrompts(JsonNullable<List<UUID>> includePrompts) {
      this.instance.includePrompts = includePrompts;
      return this;
    }
    public PromptWebhookCreate.Builder excludePrompts(List<UUID> excludePrompts) {
      this.instance.excludePrompts = JsonNullable.<List<UUID>>of(excludePrompts);
      return this;
    }
    public PromptWebhookCreate.Builder excludePrompts(JsonNullable<List<UUID>> excludePrompts) {
      this.instance.excludePrompts = excludePrompts;
      return this;
    }
    public PromptWebhookCreate.Builder triggers(List<EPromptWebhookTrigger> triggers) {
      this.instance.triggers = triggers;
      return this;
    }
    public PromptWebhookCreate.Builder id(UUID id) {
      this.instance.id = JsonNullable.<UUID>of(id);
      return this;
    }
    public PromptWebhookCreate.Builder id(JsonNullable<UUID> id) {
      this.instance.id = id;
      return this;
    }


    /**
    * returns a built PromptWebhookCreate instance.
    *
    * The builder is not reusable.
    */
    public PromptWebhookCreate build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static PromptWebhookCreate.Builder builder() {
    return new PromptWebhookCreate.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public PromptWebhookCreate.Builder toBuilder() {
    return new PromptWebhookCreate.Builder()
      .url(getUrl())
      .headers(getHeaders())
      .includePrompts(getIncludePrompts())
      .excludePrompts(getExcludePrompts())
      .triggers(getTriggers())
      .id(getId());
  }

}

