/*
 * LangSmith
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.bsc.langgraph4j.langsmith.gen.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.bsc.langgraph4j.langsmith.gen.ApiClient;
/**
 * AlertsAlertRuleBase
 */
@JsonPropertyOrder({
  AlertsAlertRuleBase.JSON_PROPERTY_AGGREGATION,
  AlertsAlertRuleBase.JSON_PROPERTY_ATTRIBUTE,
  AlertsAlertRuleBase.JSON_PROPERTY_DENOMINATOR_FILTER,
  AlertsAlertRuleBase.JSON_PROPERTY_DESCRIPTION,
  AlertsAlertRuleBase.JSON_PROPERTY_FILTER,
  AlertsAlertRuleBase.JSON_PROPERTY_ID,
  AlertsAlertRuleBase.JSON_PROPERTY_NAME,
  AlertsAlertRuleBase.JSON_PROPERTY_OPERATOR,
  AlertsAlertRuleBase.JSON_PROPERTY_THRESHOLD,
  AlertsAlertRuleBase.JSON_PROPERTY_THRESHOLD_MULTIPLIER,
  AlertsAlertRuleBase.JSON_PROPERTY_THRESHOLD_WINDOW_MINUTES,
  AlertsAlertRuleBase.JSON_PROPERTY_TYPE,
  AlertsAlertRuleBase.JSON_PROPERTY_WINDOW_MINUTES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-17T23:27:07.599378+02:00[Europe/Rome]", comments = "Generator version: 7.14.0")
public class AlertsAlertRuleBase {
  /**
   * Gets or Sets aggregation
   */
  public enum AggregationEnum {
    AVG(String.valueOf("avg")),
    
    SUM(String.valueOf("sum")),
    
    PCT(String.valueOf("pct"));

    private String value;

    AggregationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AggregationEnum fromValue(String value) {
      for (AggregationEnum b : AggregationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AGGREGATION = "aggregation";
  @javax.annotation.Nonnull
  private AggregationEnum aggregation;

  /**
   * Gets or Sets attribute
   */
  public enum AttributeEnum {
    LATENCY(String.valueOf("latency")),
    
    ERROR_COUNT(String.valueOf("error_count")),
    
    FEEDBACK_SCORE(String.valueOf("feedback_score")),
    
    RUN_LATENCY(String.valueOf("run_latency")),
    
    RUN_COUNT(String.valueOf("run_count"));

    private String value;

    AttributeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AttributeEnum fromValue(String value) {
      for (AttributeEnum b : AttributeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ATTRIBUTE = "attribute";
  @javax.annotation.Nonnull
  private AttributeEnum attribute;

  public static final String JSON_PROPERTY_DENOMINATOR_FILTER = "denominator_filter";
  private JsonNullable<String> denominatorFilter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_FILTER = "filter";
  private JsonNullable<String> filter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  /**
   * Gets or Sets operator
   */
  public enum OperatorEnum {
    GTE(String.valueOf("gte")),
    
    LTE(String.valueOf("lte"));

    private String value;

    OperatorEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperatorEnum fromValue(String value) {
      for (OperatorEnum b : OperatorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OPERATOR = "operator";
  @javax.annotation.Nonnull
  private OperatorEnum operator;

  public static final String JSON_PROPERTY_THRESHOLD = "threshold";
  private JsonNullable<BigDecimal> threshold = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_THRESHOLD_MULTIPLIER = "threshold_multiplier";
  private JsonNullable<BigDecimal> thresholdMultiplier = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_THRESHOLD_WINDOW_MINUTES = "threshold_window_minutes";
  @javax.annotation.Nullable
  private Integer thresholdWindowMinutes;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    THRESHOLD(String.valueOf("threshold")),
    
    CHANGE(String.valueOf("change"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private TypeEnum type;

  public static final String JSON_PROPERTY_WINDOW_MINUTES = "window_minutes";
  @javax.annotation.Nonnull
  private Integer windowMinutes;

  public AlertsAlertRuleBase() { 
  }

  public AlertsAlertRuleBase aggregation(@javax.annotation.Nonnull AggregationEnum aggregation) {
    this.aggregation = aggregation;
    return this;
  }

  /**
   * Get aggregation
   * @return aggregation
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGGREGATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public AggregationEnum getAggregation() {
    return aggregation;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAggregation(@javax.annotation.Nonnull AggregationEnum aggregation) {
    this.aggregation = aggregation;
  }


  public AlertsAlertRuleBase attribute(@javax.annotation.Nonnull AttributeEnum attribute) {
    this.attribute = attribute;
    return this;
  }

  /**
   * Get attribute
   * @return attribute
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public AttributeEnum getAttribute() {
    return attribute;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAttribute(@javax.annotation.Nonnull AttributeEnum attribute) {
    this.attribute = attribute;
  }


  public AlertsAlertRuleBase denominatorFilter(@javax.annotation.Nullable String denominatorFilter) {
    this.denominatorFilter = JsonNullable.<String>of(denominatorFilter);
    return this;
  }

  /**
   * Get denominatorFilter
   * @return denominatorFilter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDenominatorFilter() {
        return denominatorFilter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DENOMINATOR_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDenominatorFilter_JsonNullable() {
    return denominatorFilter;
  }
  
  @JsonProperty(JSON_PROPERTY_DENOMINATOR_FILTER)
  public void setDenominatorFilter_JsonNullable(JsonNullable<String> denominatorFilter) {
    this.denominatorFilter = denominatorFilter;
  }

  public void setDenominatorFilter(@javax.annotation.Nullable String denominatorFilter) {
    this.denominatorFilter = JsonNullable.<String>of(denominatorFilter);
  }


  public AlertsAlertRuleBase description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public AlertsAlertRuleBase filter(@javax.annotation.Nullable String filter) {
    this.filter = JsonNullable.<String>of(filter);
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFilter() {
        return filter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFilter_JsonNullable() {
    return filter;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER)
  public void setFilter_JsonNullable(JsonNullable<String> filter) {
    this.filter = filter;
  }

  public void setFilter(@javax.annotation.Nullable String filter) {
    this.filter = JsonNullable.<String>of(filter);
  }


  public AlertsAlertRuleBase id(@javax.annotation.Nullable String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public AlertsAlertRuleBase name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public AlertsAlertRuleBase operator(@javax.annotation.Nonnull OperatorEnum operator) {
    this.operator = operator;
    return this;
  }

  /**
   * Get operator
   * @return operator
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OperatorEnum getOperator() {
    return operator;
  }


  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOperator(@javax.annotation.Nonnull OperatorEnum operator) {
    this.operator = operator;
  }


  public AlertsAlertRuleBase threshold(@javax.annotation.Nullable BigDecimal threshold) {
    this.threshold = JsonNullable.<BigDecimal>of(threshold);
    return this;
  }

  /**
   * Get threshold
   * @return threshold
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public BigDecimal getThreshold() {
        return threshold.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getThreshold_JsonNullable() {
    return threshold;
  }
  
  @JsonProperty(JSON_PROPERTY_THRESHOLD)
  public void setThreshold_JsonNullable(JsonNullable<BigDecimal> threshold) {
    this.threshold = threshold;
  }

  public void setThreshold(@javax.annotation.Nullable BigDecimal threshold) {
    this.threshold = JsonNullable.<BigDecimal>of(threshold);
  }


  public AlertsAlertRuleBase thresholdMultiplier(@javax.annotation.Nullable BigDecimal thresholdMultiplier) {
    this.thresholdMultiplier = JsonNullable.<BigDecimal>of(thresholdMultiplier);
    return this;
  }

  /**
   * Get thresholdMultiplier
   * @return thresholdMultiplier
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public BigDecimal getThresholdMultiplier() {
        return thresholdMultiplier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THRESHOLD_MULTIPLIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getThresholdMultiplier_JsonNullable() {
    return thresholdMultiplier;
  }
  
  @JsonProperty(JSON_PROPERTY_THRESHOLD_MULTIPLIER)
  public void setThresholdMultiplier_JsonNullable(JsonNullable<BigDecimal> thresholdMultiplier) {
    this.thresholdMultiplier = thresholdMultiplier;
  }

  public void setThresholdMultiplier(@javax.annotation.Nullable BigDecimal thresholdMultiplier) {
    this.thresholdMultiplier = JsonNullable.<BigDecimal>of(thresholdMultiplier);
  }


  public AlertsAlertRuleBase thresholdWindowMinutes(@javax.annotation.Nullable Integer thresholdWindowMinutes) {
    this.thresholdWindowMinutes = thresholdWindowMinutes;
    return this;
  }

  /**
   * Get thresholdWindowMinutes
   * maximum: 60
   * @return thresholdWindowMinutes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THRESHOLD_WINDOW_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getThresholdWindowMinutes() {
    return thresholdWindowMinutes;
  }


  @JsonProperty(JSON_PROPERTY_THRESHOLD_WINDOW_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThresholdWindowMinutes(@javax.annotation.Nullable Integer thresholdWindowMinutes) {
    this.thresholdWindowMinutes = thresholdWindowMinutes;
  }


  public AlertsAlertRuleBase type(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
  }


  public AlertsAlertRuleBase windowMinutes(@javax.annotation.Nonnull Integer windowMinutes) {
    this.windowMinutes = windowMinutes;
    return this;
  }

  /**
   * max 15 minutes for alert rule
   * maximum: 15
   * @return windowMinutes
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WINDOW_MINUTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getWindowMinutes() {
    return windowMinutes;
  }


  @JsonProperty(JSON_PROPERTY_WINDOW_MINUTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWindowMinutes(@javax.annotation.Nonnull Integer windowMinutes) {
    this.windowMinutes = windowMinutes;
  }


  /**
   * Return true if this alerts.AlertRuleBase object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertsAlertRuleBase alertsAlertRuleBase = (AlertsAlertRuleBase) o;
    return Objects.equals(this.aggregation, alertsAlertRuleBase.aggregation) &&
        Objects.equals(this.attribute, alertsAlertRuleBase.attribute) &&
        equalsNullable(this.denominatorFilter, alertsAlertRuleBase.denominatorFilter) &&
        Objects.equals(this.description, alertsAlertRuleBase.description) &&
        equalsNullable(this.filter, alertsAlertRuleBase.filter) &&
        equalsNullable(this.id, alertsAlertRuleBase.id) &&
        Objects.equals(this.name, alertsAlertRuleBase.name) &&
        Objects.equals(this.operator, alertsAlertRuleBase.operator) &&
        equalsNullable(this.threshold, alertsAlertRuleBase.threshold) &&
        equalsNullable(this.thresholdMultiplier, alertsAlertRuleBase.thresholdMultiplier) &&
        Objects.equals(this.thresholdWindowMinutes, alertsAlertRuleBase.thresholdWindowMinutes) &&
        Objects.equals(this.type, alertsAlertRuleBase.type) &&
        Objects.equals(this.windowMinutes, alertsAlertRuleBase.windowMinutes);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregation, attribute, hashCodeNullable(denominatorFilter), description, hashCodeNullable(filter), hashCodeNullable(id), name, operator, hashCodeNullable(threshold), hashCodeNullable(thresholdMultiplier), thresholdWindowMinutes, type, windowMinutes);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertsAlertRuleBase {\n");
    sb.append("    aggregation: ").append(toIndentedString(aggregation)).append("\n");
    sb.append("    attribute: ").append(toIndentedString(attribute)).append("\n");
    sb.append("    denominatorFilter: ").append(toIndentedString(denominatorFilter)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("    thresholdMultiplier: ").append(toIndentedString(thresholdMultiplier)).append("\n");
    sb.append("    thresholdWindowMinutes: ").append(toIndentedString(thresholdWindowMinutes)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    windowMinutes: ").append(toIndentedString(windowMinutes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `aggregation` to the URL query string
    if (getAggregation() != null) {
      joiner.add(String.format("%saggregation%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAggregation()))));
    }

    // add `attribute` to the URL query string
    if (getAttribute() != null) {
      joiner.add(String.format("%sattribute%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAttribute()))));
    }

    // add `denominator_filter` to the URL query string
    if (getDenominatorFilter() != null) {
      joiner.add(String.format("%sdenominator_filter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDenominatorFilter()))));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDescription()))));
    }

    // add `filter` to the URL query string
    if (getFilter() != null) {
      joiner.add(String.format("%sfilter%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFilter()))));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `operator` to the URL query string
    if (getOperator() != null) {
      joiner.add(String.format("%soperator%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOperator()))));
    }

    // add `threshold` to the URL query string
    if (getThreshold() != null) {
      joiner.add(String.format("%sthreshold%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getThreshold()))));
    }

    // add `threshold_multiplier` to the URL query string
    if (getThresholdMultiplier() != null) {
      joiner.add(String.format("%sthreshold_multiplier%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getThresholdMultiplier()))));
    }

    // add `threshold_window_minutes` to the URL query string
    if (getThresholdWindowMinutes() != null) {
      joiner.add(String.format("%sthreshold_window_minutes%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getThresholdWindowMinutes()))));
    }

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `window_minutes` to the URL query string
    if (getWindowMinutes() != null) {
      joiner.add(String.format("%swindow_minutes%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getWindowMinutes()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private AlertsAlertRuleBase instance;

    public Builder() {
      this(new AlertsAlertRuleBase());
    }

    protected Builder(AlertsAlertRuleBase instance) {
      this.instance = instance;
    }

    public AlertsAlertRuleBase.Builder aggregation(AggregationEnum aggregation) {
      this.instance.aggregation = aggregation;
      return this;
    }
    public AlertsAlertRuleBase.Builder attribute(AttributeEnum attribute) {
      this.instance.attribute = attribute;
      return this;
    }
    public AlertsAlertRuleBase.Builder denominatorFilter(String denominatorFilter) {
      this.instance.denominatorFilter = JsonNullable.<String>of(denominatorFilter);
      return this;
    }
    public AlertsAlertRuleBase.Builder denominatorFilter(JsonNullable<String> denominatorFilter) {
      this.instance.denominatorFilter = denominatorFilter;
      return this;
    }
    public AlertsAlertRuleBase.Builder description(String description) {
      this.instance.description = description;
      return this;
    }
    public AlertsAlertRuleBase.Builder filter(String filter) {
      this.instance.filter = JsonNullable.<String>of(filter);
      return this;
    }
    public AlertsAlertRuleBase.Builder filter(JsonNullable<String> filter) {
      this.instance.filter = filter;
      return this;
    }
    public AlertsAlertRuleBase.Builder id(String id) {
      this.instance.id = JsonNullable.<String>of(id);
      return this;
    }
    public AlertsAlertRuleBase.Builder id(JsonNullable<String> id) {
      this.instance.id = id;
      return this;
    }
    public AlertsAlertRuleBase.Builder name(String name) {
      this.instance.name = name;
      return this;
    }
    public AlertsAlertRuleBase.Builder operator(OperatorEnum operator) {
      this.instance.operator = operator;
      return this;
    }
    public AlertsAlertRuleBase.Builder threshold(BigDecimal threshold) {
      this.instance.threshold = JsonNullable.<BigDecimal>of(threshold);
      return this;
    }
    public AlertsAlertRuleBase.Builder threshold(JsonNullable<BigDecimal> threshold) {
      this.instance.threshold = threshold;
      return this;
    }
    public AlertsAlertRuleBase.Builder thresholdMultiplier(BigDecimal thresholdMultiplier) {
      this.instance.thresholdMultiplier = JsonNullable.<BigDecimal>of(thresholdMultiplier);
      return this;
    }
    public AlertsAlertRuleBase.Builder thresholdMultiplier(JsonNullable<BigDecimal> thresholdMultiplier) {
      this.instance.thresholdMultiplier = thresholdMultiplier;
      return this;
    }
    public AlertsAlertRuleBase.Builder thresholdWindowMinutes(Integer thresholdWindowMinutes) {
      this.instance.thresholdWindowMinutes = thresholdWindowMinutes;
      return this;
    }
    public AlertsAlertRuleBase.Builder type(TypeEnum type) {
      this.instance.type = type;
      return this;
    }
    public AlertsAlertRuleBase.Builder windowMinutes(Integer windowMinutes) {
      this.instance.windowMinutes = windowMinutes;
      return this;
    }


    /**
    * returns a built AlertsAlertRuleBase instance.
    *
    * The builder is not reusable.
    */
    public AlertsAlertRuleBase build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static AlertsAlertRuleBase.Builder builder() {
    return new AlertsAlertRuleBase.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public AlertsAlertRuleBase.Builder toBuilder() {
    return new AlertsAlertRuleBase.Builder()
      .aggregation(getAggregation())
      .attribute(getAttribute())
      .denominatorFilter(getDenominatorFilter())
      .description(getDescription())
      .filter(getFilter())
      .id(getId())
      .name(getName())
      .operator(getOperator())
      .threshold(getThreshold())
      .thresholdMultiplier(getThresholdMultiplier())
      .thresholdWindowMinutes(getThresholdWindowMinutes())
      .type(getType())
      .windowMinutes(getWindowMinutes());
  }

}

